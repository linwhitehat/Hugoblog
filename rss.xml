<?xml version="1.0" encoding="utf-8"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>林深时见璐</title><link>https://linwhitehat.github.io/</link><description>L1n's Blog</description><generator>Hugo 0.74.2 https://gohugo.io/</generator><language>zh-CN</language><managingEditor>eric_lin_cn@outlook.com (L1n)</managingEditor><webMaster>eric_lin_cn@outlook.com (L1n)</webMaster><copyright>本文采用 [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh) 许可协议，转载请注明出处。</copyright><lastBuildDate>Thu, 04 Feb 2021 23:17:52 +0800</lastBuildDate><atom:link rel="self" type="application/rss+xml" href="https://linwhitehat.github.io/rss.xml"/><item><title>HUGO博客搭建</title><link>https://linwhitehat.github.io/posts/2021/02/04/hugo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</link><guid isPermaLink="true">https://linwhitehat.github.io/posts/2021/02/04/hugo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</guid><pubDate>Wed, 03 Feb 2021 18:26:17 +0000</pubDate><author>eric_lin_cn@outlook.com (L1n)</author><copyright>本文采用 [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh) 许可协议，转载请注明出处。</copyright><description>&lt;p>之前的博客是基于&lt;code>Hexo.Mist&lt;/code>搭建完成的，由于个人对前端的学习有限，我了解到&lt;code>Hugo.Meme&lt;/code>后，更喜欢这种简约感，因此将博客转至此。最初的博客雏形一般都比较朴素，功能也有限，通过优化主题来进行美化博客外观和拓展博客功能依旧是转移博客后的必要工作。&lt;a href="https://linwhitehat.github.io/Blog/">旧博客&lt;/a>仍然可以继续访问，&lt;code>Hexo&lt;/code>和&lt;code>Hugo&lt;/code>搭建的博客均以&lt;code>GithubPage&lt;/code>的形式发布。&lt;/p>
&lt;!-- more -->
&lt;h2 id="hugo博客">HUGO博客&lt;/h2>
&lt;p>去年12月我将博客内容迁移到&lt;a href="https://gohugo.io/">Hugo&lt;/a>，选择了主题&lt;a href="https://github.com/reuixiy/hugo-theme-meme">Meme&lt;/a>，机缘来自我的友链中&lt;a href="https://guanqr.com/">荷戟独彷徨&lt;/a>和&lt;a href="https://io-oi.me/">reuixiy&lt;/a>。起初搭建个人博客是希望锻炼一下自己的前端动手能力和记录一下生活，选择了简易的&lt;code>Hexo.Next&lt;/code>，同时也查阅了很多资料进行&lt;a href="https://linwhitehat.github.io/Hugoblog/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/">博客个性化修改&lt;/a>。之所以选择迁移博客框架，主要还是想在一个简洁画风下更多的分享内容，将博客的内容专注在文字上。&lt;br />
这篇博客将完整讲述博客迁移的过程，对遇到的一些问题及解决方法也会一起阐述。&lt;/p>
&lt;h3 id="hugo安装">HUGO安装&lt;/h3>
&lt;p>这部分内容基本遵循&lt;a href="https://gohugo.io/getting-started/quick-start/">官方文档&lt;/a>进行。&lt;/p>
&lt;ol>
&lt;li>下载与安装&lt;br />
在&lt;code>Hugo&lt;/code>的&lt;a href="https://github.com/gohugoio/hugo/releases">开源地址&lt;/a>下载所需发布版本，我的电脑系统是&lt;code>Windows-64&lt;/code>，因此选择下图中的对应版本下载。下载后的压缩包解压之后便是&lt;code>HUGO&lt;/code>的安装目录，将此目录加入系统环境变量。之后在&lt;code>CMD&lt;/code>命令行下输入&lt;code>hugo version&lt;/code>，显示正确的版本信息等即表示成功安装。&lt;br />
&lt;img src="https://linwhitehat.github.io/Hugoblog/images/HUGO_1.jpg" alt="HUGO下载" title="HUGO下载" />&lt;/li>
&lt;li>创建网站&lt;br />
要搭建自己的博客，需要先建立本地网站目录。在&lt;code>CMD&lt;/code>命令行下进入作为离线存储博客内容的目录，输入以下命令新建网站目录。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">hugo new site Myblog
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="博客迁移">博客迁移&lt;/h3>
&lt;ol>
&lt;li>博客主题&lt;br />
搭建完&lt;code>HUGO&lt;/code>环境之后，在官方的&lt;a href="https://themes.gohugo.io/">主题网站&lt;/a>选择喜欢的主题框架并下载到本地。在刚刚新建的网站目录&lt;code>Myblog&lt;/code>下新建一个目录&lt;code>themes&lt;/code>，在这个目录下存放下载的主题文件。启用博客主题需要修改&lt;code>HUGO&lt;/code>配置文件，即在博客目录&lt;code>Myblog&lt;/code>下的&lt;code>config.toml&lt;/code>。在配置文件中添加&lt;code>theme&lt;/code>内容，具体如下：&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>baseURL = &amp;quot;https://linwhitehat.github.io&amp;quot;
title = &amp;quot;林深时见璐&amp;quot;
languageCode = &amp;quot;zh-CN&amp;quot;
hasCJKLanguage = true
theme = &amp;quot;meme&amp;quot;
&lt;/code>&lt;/pre>&lt;ol start="2">
&lt;li>内容迁移&lt;br />
启用博客主题之后，将旧博客中的内容迁移到新博客中，这需要了解&lt;code>HUGO&lt;/code>的博客基本框架，具体如下：&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>.
├── archetypes # 内容类型，在创建新内容时自动生成内容的配置
├── content # 网站内容，Markdown 文件
├── data
├── layouts # 网站模版，选择主题后会将主题中的 layouts 文件夹中的内容复制到此文件夹中
├── static # 包含 CSS、JavaScript、Fonts、media、image 等，决定网站的外观。
├── themes # 存放主题文件
├── public # 可公开静态内容
└── config.toml # 网站的配置文件
&lt;/code>&lt;/pre>&lt;p>博客文章是存储在&lt;code>content&lt;/code>目录下，图片、前端渲染等是存储在&lt;code>static&lt;/code>目录下，因此我们将原先&lt;code>Hexo&lt;/code>博客下的内容分别迁移到相应目录下即可。&lt;/p>
&lt;h3 id="博客本地预览">博客本地预览&lt;/h3>
&lt;p>在正式发布博客之前，可以在本地预览博客内容并进行调试修改。在&lt;code>CMD&lt;/code>下执行下述命令进行预览：&lt;/p>
&lt;pre>&lt;code># 启动 HUGO
hugo server -D
# 启动成功会显示下述内容
Web Server is available at http://localhost:1313/ (bind address 127.0.0.1)
Press Ctrl+C to stop
&lt;/code>&lt;/pre>&lt;p>此时，在本地浏览器访问&lt;code>http://localhost:1313/&lt;/code>便能看到博客。&lt;/p>
&lt;h3 id="githubpage发布">GITHUBPAGE发布&lt;/h3>
&lt;p>将本地博客最终发布到&lt;code>GithubPage&lt;/code>前，需要生成可发布的静态文件。在&lt;code>CMD&lt;/code>下执行下述命令：&lt;/p>
&lt;pre>&lt;code># 生成博客网站
hugo
&lt;/code>&lt;/pre>&lt;p>此时在博客目录&lt;code>Myblog&lt;/code>下的&lt;code>public&lt;/code>目录会生成可用于发布的博客内容，将整个目录上传到&lt;code>GithubPage&lt;/code>仓库即可。&lt;/p>
&lt;h3 id="避雷">避雷&lt;/h3>
&lt;p>上述步骤完成，基本博客内容的迁移就完成了，至于&lt;code>HUGO&lt;/code>主题框架的具体配置可参照配置文件进行基础修改。但是要正确部署还有不少雷区需要注意，如果没有正确认识这些问题可能博客并无法像本地预览的效果一样。&lt;/p>
&lt;ol>
&lt;li>baseURL设置&lt;br />
一般而言，搭建&lt;code>GithubPage&lt;/code>时我们只会把二级域名当作博客地址，但是由于我制作了博客主页，因此增加了子目录的网站地址才是我博客内容的真正地址。此时，容易误解&lt;code>baseURL&lt;/code>而将博客网站的地址填写在配置中，因为&lt;code>Hexo&lt;/code>配置的时候便需要标明博客的具体网站地址（包括子目录），然而实际却非如此。正确配置举例对比如下：&lt;/li>
&lt;/ol>
&lt;pre>&lt;code># Hexo URL
https://linwhitehat.github.io/Hugoblog/
# Hugo baseURL
https://linwhitehat.github.io/
&lt;/code>&lt;/pre>&lt;p>如果配置错误可以在部署之后在网站控制台找到错误信息，一般是显示资源找不到的错误，对比错误资源地址可以确认正确&lt;code>baseURL&lt;/code>的填写。&lt;br />
2. 完整性检验&lt;br />
对于资源完整性检验在搭建&lt;code>GithubPage&lt;/code>博客中不是很友好，因此需要将其设置为&lt;code>false&lt;/code>才能正确链接和渲染前端资源文件，否则会显示&lt;code>Failed to find a valid digest in the 'integrity' attribute for resource&lt;/code>等错误。&lt;/p>
&lt;h2 id="个人博客主页">个人博客主页&lt;/h2>
&lt;p>很多现有的博客框架主题都将文章作为博客首页，也有少数有自身主页的博客主题，但是修改起来可能需要更多熟悉主题框架结构。为了更便利和自主搭建自己的博客首页，我自定义了一个静态网站作为自己的&lt;a href="https://linwhitehat.github.io/">博客首页&lt;/a>，修改方便而且不容易和别人的撞衫。目前主页源码已经&lt;a href="https://github.com/linwhitehat/linwhitehat.github.io">开源&lt;/a>，欢迎读者作为自己的博客模板进一步加工制作属于自己的博客首页。&lt;br />
&lt;img src="https://linwhitehat.github.io/Hugoblog/images/HUGO_2.jpg" alt="博客主页" title="博客主页" />&lt;/p>
&lt;h2 id="结束">结束&lt;/h2>
&lt;p>博客包含的可能不只是文字，图片和简单的前端知识，我想也有审美，艺术和丰富的建站体验。在2021年，我会更专注于所学，静下心，将内容输出为系列文章，提高博客的质量。那么就以这篇为开始吧！&lt;/p>
&lt;h2 id="彩蛋">彩蛋&lt;/h2>
&lt;p>** 微软资源告别龟速下载 **&lt;br />
知名的&lt;code>MSDN&lt;/code>告诉了我们微软的资源可以便捷的找到，但是镜像资源的庞大让没有迅雷会员的我总是苦于漫长的等待。当我想建立一个微软操作系统的虚拟机进行某个实验时，如果长时间去等待下载，一来让我有种一件事还没完成但是却不能马上完成的焦躁，其次也让我耗费时间去记录此时的想法以等待具备可实验的环境时进行实操。那么，怎么解决呢？告别&lt;code>MSDN&lt;/code>+迅雷的组合，使用微软官方+&lt;code>IDM&lt;/code>，尽情享受高速体验下载微软资源的快乐吧！&lt;/p>
&lt;ol>
&lt;li>微软官方镜像链接&lt;br />
访问&lt;a href="https://www.microsoft.com/zh-cn/software-download/windows10">微软官网&lt;/a>，此时看到的官网显示的是&lt;code>立即下载工具&lt;/code>而没有镜像下载链接。接着，打开浏览器的开发者工具，按照下图标记的位置，打开&lt;code>Remote devices&lt;/code>模式即手机模式，之后刷新网站并按照提示选择便能看到镜像下载链接。&lt;br />
&lt;img src="https://linwhitehat.github.io/Hugoblog/images/HUGO_3.jpg" alt="手机模式设置" title="手机模式设置" />&lt;br />
&lt;img src="https://linwhitehat.github.io/Hugoblog/images/HUGO_4.jpg" alt="下载镜像" title="下载镜像" />&lt;/li>
&lt;li>IDM下载&lt;br />
在浏览器中安装&lt;code>IDM&lt;/code>插件，点击上一步中的镜像下载后跳转到&lt;code>IDM&lt;/code>进行下载即可。&lt;/li>
&lt;/ol></description><category domain="https://linwhitehat.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/">技术分享</category><category domain="https://linwhitehat.github.io/categories/%E5%8D%9A%E5%AE%A2/">博客</category><category domain="https://linwhitehat.github.io/tags/hugo/">HUGO</category><category domain="https://linwhitehat.github.io/tags/meme/">Meme</category></item><item><title>学术辅助利器</title><link>https://linwhitehat.github.io/posts/2020/12/22/%E5%AD%A6%E6%9C%AF%E8%BE%85%E5%8A%A9%E5%88%A9%E5%99%A8/</link><guid isPermaLink="true">https://linwhitehat.github.io/posts/2020/12/22/%E5%AD%A6%E6%9C%AF%E8%BE%85%E5%8A%A9%E5%88%A9%E5%99%A8/</guid><pubDate>Tue, 22 Dec 2020 18:26:17 +0000</pubDate><author>eric_lin_cn@outlook.com (L1n)</author><copyright>本文采用 [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh) 许可协议，转载请注明出处。</copyright><description>&lt;p>本文中提及的内容默认是偏计算机相关学科的学生，但是有一些技巧或工具是通用的，并不局限于某一学科，如果学会使用也将带来极大的便利和帮助，例如Latex写作，除了论文写作和书籍刊物，在日常的会议记录，课程笔记中也能使用，因为它解决了排版繁琐的问题，只需要做好摸板，便能全文统一适用，无论是图表，标题，目录还是公式，定义推导都能规范显示。本文的作用在于推荐，最终使用后续可能会针对不同工具写个小博文。&lt;/p>
&lt;!-- more -->
&lt;h2 id="论文查阅下载辅助小工具">论文查阅下载辅助小工具&lt;/h2>
&lt;h3 id="ccfrank4dblp">CCFRank4dblp&lt;/h3>
&lt;p>CCFRank4dblp&lt;sup id="fnref:1">&lt;a href="https://linwhitehat.github.io/posts/2020/12/22/%E5%AD%A6%E6%9C%AF%E8%BE%85%E5%8A%A9%E5%88%A9%E5%99%A8/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>，在dblp数据库或谷歌学术查阅论文时自动显示论文所在会议或期刊的CFF等级，对于不熟悉CCF最新列表的研究人员十分友好，可以在查阅论文的同时找到最佳的目标论文。目前可以在Chrome和Firefox的扩展应用市场中添加为浏览器插件。&lt;/p>
&lt;h3 id="acpt4dblp">ACPT4dblp&lt;/h3>
&lt;p>Auto Collect Paper Toolkit(ACP4dblp)&lt;sup id="fnref:2">&lt;a href="https://linwhitehat.github.io/posts/2020/12/22/%E5%AD%A6%E6%9C%AF%E8%BE%85%E5%8A%A9%E5%88%A9%E5%99%A8/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>，自动化论文下载工具，能够实现根据会议名称自动下载指定年份的论文和演讲的pdf文件，目前适配了USENIX的刊物，只需要修改目标刊物的配置信息即可适配更多的刊物。目前支持Python3环境。&lt;/p>
&lt;h2 id="写作">写作&lt;/h2>
&lt;h3 id="latex">Latex&lt;/h3>
&lt;p>使用Latex写作是在出版刊物中常用的一种方式，通用的模板使得大批的文章能够使用同样的排版，保证格式统一且工整。这里推荐的两种方式是本地编译和在线编译，从使用上手角度而言，在线编译会更加容易使用，但是本地编译的自定义会更丰富一些。&lt;/p>
&lt;h4 id="texlive--texstudio">TexLive + Texstudio&lt;/h4>
&lt;p>这种方式是本地编译的方式，具体安装教程在之前的一篇博客中详细叙述，可查看&lt;a href="https://linwhitehat.github.io/Blog/2019/10/12/LaTeX%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B.html">LaTeX-安装教程&lt;/a>。&lt;br />
使用本地编译会在IDE中显示Latex的语法错误以及检查词语使用等基本错误，能够减少很多常见的错误并在编译前解决。&lt;/p>
&lt;h4 id="overleaf">Overleaf&lt;/h4>
&lt;p>这种方式是在线编译的方式&lt;sup id="fnref:3">&lt;a href="https://linwhitehat.github.io/posts/2020/12/22/%E5%AD%A6%E6%9C%AF%E8%BE%85%E5%8A%A9%E5%88%A9%E5%99%A8/#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>，使用起来和word很相似。选择好模板，直接输入文章内容可以实时预览编译结果，对于是否是Latex编译的感知不会很强，因此友好度较高。&lt;br />
使用在线编译会有在线语法检测，而且不用担心Latex的编译问题，操作方便，上手简单，但是依托第三方平台，可能会有付费服务。&lt;/p>
&lt;h3 id="grammarly">Grammarly&lt;/h3>
&lt;p>这是常见的用于英语语法检测的在线工具，可在&lt;a href="https://www.grammarly.com/">官方地址&lt;/a>试用效果，该工具支持浏览器插件模式。对常见的写作语法错误和语句可读性能够提供一定的帮助，适合用于基本写作语法的检查。Grammarly能够自定义文章的检查指标，根据不同检查指标会呈现不同的检查结果，并且通过文章分值的形式展示文章的可读性水平。&lt;/p>
&lt;p>&lt;img src="https://linwhitehat.github.io/Blog/images/grammarly.png" alt="Grammarly语法检查效果" title="Grammarly语法检查效果" />&lt;/p>
&lt;h2 id="绘图">绘图&lt;/h2>
&lt;h3 id="微软三件套">微软三件套&lt;/h3>
&lt;p>微软的Office系列常用于办公使用，但是由于其功能的丰富性，用于论文的绘图也是十分有效的。此处的微软三件套包括Office Excel，Powerpoint和Visio，基本绘图都可以在这三者之间转换和绘制，之后会展示论文中使用此类工具绘制的图片。个人认为这是最易入门和使用的绘图工具。&lt;/p>
&lt;h3 id="origin">Origin&lt;/h3>
&lt;p>这是专业性的学术绘图工具，本身绘图模板和教程都十分丰富，也有官方汉化版，学生可以通过学校优秀申请免费使用教育版，十分便利。就我个人而言，这个绘图工具需要一段时间的摸索熟悉之后才能高效地绘制所需的图片，图片的自定义性取决于使用熟悉度。个人认为这是具有一定难度的绘图工具，但熟悉之后也是高效的绘图工具。&lt;/p>
&lt;h3 id="gephi">Gephi&lt;/h3>
&lt;p>这是绘制数据可视化图的利器，可用于描述「对象与对象之间有关联关系或相互作用」的数据表现形式，分别采用了「关系图」和「一般图」来描述，其中关系图可以直观地展示多个对象之间的关联关系，如网络图。个人认为这是具有一定难度的绘图工具。&lt;br />
Gephi的安装十分简单，在&lt;a href="https://gephi.org/">官网&lt;/a>下载安装即可，但是需要注意的是，此工具需要Java(1.8以上版本)环境支持，因此安装完成后做以下配置即可使用：&lt;/p>
&lt;ol>
&lt;li>安装Java，具体教程见另一篇博客中的介绍&lt;a href="https://linwhitehat.github.io/Blog/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C.html">微软系统使用手册&lt;/a>。&lt;/li>
&lt;li>因为默认配置(Gephi安装目录/etc/gephi.conf)读取的JDK路径是Linux下的，将其修改为当前Windows安装路径即可，否则会因为JDK路径问题报错&lt;code>can’t find java 1.8 or higher&lt;/code>。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://linwhitehat.github.io/Blog/images/gephi.png" alt="修改Gephi配置" title="修改Gephi配置" />&lt;/p>
&lt;h2 id="结束">结束&lt;/h2>
&lt;p>本文以介绍为主，旨在记录哪些工具对于学术科研具有帮助，因此写的十分简要，后续会不断补充。&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr />
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://github.com/WenyanLiu/CCFrank4dblp">CCFRank4dblp&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/12/22/%E5%AD%A6%E6%9C%AF%E8%BE%85%E5%8A%A9%E5%88%A9%E5%99%A8/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;a href="https://github.com/linwhitehat/ACPT4dblp">ACPP4dblp&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/12/22/%E5%AD%A6%E6%9C%AF%E8%BE%85%E5%8A%A9%E5%88%A9%E5%99%A8/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>&lt;a href="https://www.overleaf.com/">Overleaf&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/12/22/%E5%AD%A6%E6%9C%AF%E8%BE%85%E5%8A%A9%E5%88%A9%E5%99%A8/#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description><category domain="https://linwhitehat.github.io/categories/%E5%AD%A6%E6%9C%AF/">学术</category><category domain="https://linwhitehat.github.io/categories/%E8%AE%BA%E6%96%87%E5%86%99%E4%BD%9C/">论文写作</category><category domain="https://linwhitehat.github.io/tags/ccf/">CCF</category><category domain="https://linwhitehat.github.io/tags/%E5%86%99%E4%BD%9C/">写作</category><category domain="https://linwhitehat.github.io/tags/%E7%BB%98%E5%9B%BE/">绘图</category><category domain="https://linwhitehat.github.io/tags/gephi/">Gephi</category></item><item><title>B站投稿·视频无水印化</title><link>https://linwhitehat.github.io/posts/2020/06/30/b%E7%AB%99%E6%8A%95%E7%A8%BF/</link><guid isPermaLink="true">https://linwhitehat.github.io/posts/2020/06/30/b%E7%AB%99%E6%8A%95%E7%A8%BF/</guid><pubDate>Tue, 30 Jun 2020 18:26:17 +0000</pubDate><author>eric_lin_cn@outlook.com (L1n)</author><copyright>本文采用 [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh) 许可协议，转载请注明出处。</copyright><description>&lt;p>业余博主的生活小技能提升之旅开始在博客中分享了，随着今年B站周年庆的浪潮，博主也开始入住B站，做一些视频搬运和超简洁视频剪接的内容，而最烦人的就是素材包含水印以及剪辑完成视频后带上了软件水印或广告，由此博主开始了不亏本的无水印视频制作之旅，最终将剪接视频发布在了哔哩哔哩&lt;sup id="fnref:1">&lt;a href="https://linwhitehat.github.io/posts/2020/06/30/b%E7%AB%99%E6%8A%95%E7%A8%BF/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>，算是入坑UP主行列。~（撒花 &lt;em>★,°&lt;/em>:.☆(￣▽￣)/$:&lt;em>.°★&lt;/em> 。）~&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Life-1.webp" alt="哔哩哔哩" title="哔哩哔哩" />&lt;/p>
&lt;!-- more -->
&lt;p>这次剪辑技能的点亮也算是一时兴起，虽然并不是满满的技能树，但也算敲开了剪辑的窗户，博主本身喜欢看一些漫画和动画，本次素材也是基于国漫&lt;code>斗罗大陆&lt;/code>，一部由小说改编的国产动画，最近恰逢剧情中的一大高燃部分开播，因此便想着剪辑一起放到B站，起初想法很简单，获取视频动画素材然后剪接一起，似乎没有什么问题，但是一上手才发现素材来源带有水印，使用软件剪辑大部分都会附加水印，大部分市面宣传的去水印软件效果并不理想，甚至还想坑我钱财。而究其原因则有以下几点：&lt;/p>
&lt;ol>
&lt;li>视频中水印部分的消除难度对于业余剪辑人员而言太大；&lt;/li>
&lt;li>市场上成熟的去水印技术无法完美无水印化，大部分是采用替代原水印和模糊化的方法；&lt;/li>
&lt;li>花费过多精力和钱财在消除水印方面不理智；&lt;/li>
&lt;/ol>
&lt;p>最终博主各种查阅找到了一条实现无水印视频生成的方法，从视频来源和制作过程避免水印的产生即无水印素材+无水印剪辑软件，这样便不需要考虑去除水印，而且呈现效果也相对更好。&lt;/p>
&lt;h2 id="无水印素材">无水印素材&lt;/h2>
&lt;p>从源头解决视频水印即解决素材来源的水印和软件附加的水印，这两点是水印产生的主要来源，那么首先解决视频素材来源的水印。视频素材来源太多，但是大部分应该来自主流的视频播放平台，例如腾讯视频、爱奇艺、芒果TV、哔哩哔哩等，博主本次剪辑的素材便是来源于腾讯视频，而本次使用的无水印素材获取方法适用于大部分视频网站，而区分能否使用这种方法的依据即视频本身是否带有水印，如果水印是上传到视频网站后加上的一般便能使用本文方法进行处理，最终获得无水印素材。下面主要以主流的腾讯视频和爱奇艺视频为例子进行讲述。&lt;/p>
&lt;h3 id="腾讯视频素材">腾讯视频素材&lt;/h3>
&lt;p>首先在腾讯视频网站随便选择一个视频打开，可以清晰看到右上角的&lt;code>腾讯视频&lt;/code>水印标记，此时在谷歌浏览器&lt;code>Google Chrome&lt;/code>、微软浏览器&lt;code>Microsoft Edge&lt;/code>或火狐浏览器&lt;code>Firefox&lt;/code>等浏览器打开&lt;code>开发人员工具&lt;/code>，通过元素审查模块定位到视频画面对应的元素，在开发者工具中选择&lt;code>删除元素&lt;/code>，之后再使用元素审查模块定位到腾讯视频水印对应的元素，同样选择&lt;code>删除元素&lt;/code>，此时可以看到视频上的水印消失了，而且全程都将没有水印。此时获取视频素材便可以实现无水印素材获取。&lt;sup id="fnref:2">&lt;a href="https://linwhitehat.github.io/posts/2020/06/30/b%E7%AB%99%E6%8A%95%E7%A8%BF/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Life-2.webp" alt="腾讯视频-带水印" title="腾讯视频-带水印" />&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Life-3.webp" alt="浏览器开发者工具" title="浏览器开发者工具" />&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Life-4.webp" alt="定位水印元素" title="定位水印元素" />&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Life-5.webp" alt="腾讯视频-无水印" title="腾讯视频-无水印" />&lt;/p>
&lt;h3 id="爱奇艺视频素材">爱奇艺视频素材&lt;/h3>
&lt;p>爱奇艺视频网站的方法与腾讯视频网站的方法相似，但是存在些许差异，与腾讯视频步骤进行对比如下：&lt;/p>
&lt;ol>
&lt;li>打开爱奇艺网站任意视频，看到爱奇艺的水印在视频右上角；&lt;/li>
&lt;li>在浏览器打开&lt;code>开发人员工具&lt;/code>，审查元素找到视频画面对应的元素，此时不选择删除元素，将此元素定义为&lt;code>元素1&lt;/code>；&lt;/li>
&lt;li>找到&lt;code>元素1&lt;/code>标签下方的第一个标签内容定义为&lt;code>元素2&lt;/code>，展开&lt;code>元素2&lt;/code>，找到子标签中带有包括参数&lt;code>data-player-hool=&amp;quot;logo&amp;quot;&lt;/code>或关键词&lt;code>logo&lt;/code>的标签，定义到该元素，选择&lt;code>删除元素&lt;/code>，即可实现爱奇艺视频的无水印素材获取。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://linwhitehat.github.io/images/Life-6.webp" alt="爱奇艺视频-带水印" title="爱奇艺视频-带水印" />&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Life-7.jpg" alt="浏览器开发者工具" title="浏览器开发者工具" />&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Life-8.jpg" alt="定位水印元素" title="定位水印元素" />&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Life-9.webp" alt="爱奇艺视频-无水印" title="爱奇艺视频-无水印" />&lt;/p>
&lt;h2 id="剪辑">剪辑&lt;/h2>
&lt;p>在解决了视频素材源头的水印问题之后，便需要解决剪辑视频过程中产生水印的问题。由于市面上的免费剪辑软件如爱剪辑、EV剪辑等一般会在剪辑视频中加上自身软件的水印，如果想不添加水印则需要付费成为会员，这对于剪辑需求不多的业余爱好者而言十分不友善。基于此，我搜索调研了一部分被推荐的剪辑软件，最终在PC端选择了&lt;code>Shotcut&lt;/code>&lt;sup id="fnref:3">&lt;a href="https://linwhitehat.github.io/posts/2020/06/30/b%E7%AB%99%E6%8A%95%E7%A8%BF/#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>&lt;sup id="fnref:4">&lt;a href="https://linwhitehat.github.io/posts/2020/06/30/b%E7%AB%99%E6%8A%95%E7%A8%BF/#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>，也推荐另一款剪辑软件&lt;code>Kdenlive&lt;/code>，但本文只涉及&lt;code>Shotcut&lt;/code>，移动端目前没涉猎，被推荐的有&lt;code>剪映&lt;/code>和&lt;code>quik&lt;/code>，可以自行尝试。&lt;/p>
&lt;h3 id="shotcut">Shotcut&lt;/h3>
&lt;p>这款剪辑软件的下载地址是&lt;code>https://www.shotcut.org/&lt;/code>，选择这款剪辑软件的主要原因如下：&lt;/p>
&lt;ol>
&lt;li>跨平台，适用于Windows、Mac和Linux；&lt;/li>
&lt;li>软件本身开源，免费；&lt;/li>
&lt;li>分辨率支持4K；&lt;/li>
&lt;li>无水印；&lt;/li>
&lt;li>免安装；&lt;/li>
&lt;/ol>
&lt;p>这款软件本身的功能是不能与专业化的视频剪辑软件比如&lt;code>Adobe Premiere Pro&lt;/code>相比，但是对于业余剪辑使用是十分足够的。&lt;br />
剪辑使用的简单教程与说明如下&lt;sup id="fnref:5">&lt;a href="https://linwhitehat.github.io/posts/2020/06/30/b%E7%AB%99%E6%8A%95%E7%A8%BF/#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>：&lt;/p>
&lt;ol>
&lt;li>切换中文界面，如果下载使用的是英文版，可以在&lt;code>Setting-&amp;gt;Language-&amp;gt;Chinese(China)&lt;/code>设置选择；&lt;/li>
&lt;li>播放窗口，当添加素材之后，在界面中间的窗口即播放窗口，可以对当前素材进行播放、移除等操作；&lt;/li>
&lt;li>时间线，将播放窗口素材加入时间线后，在这里可以对素材进行剪切复制、声轨处理、节点切割、缩放时间轴等操作，是剪辑素材的主要窗口；&lt;/li>
&lt;li>滤镜，这里是素材的属性操作窗口，包含对视频、音频等素材内容进行修改，包括特效、音量等操作。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://linwhitehat.github.io/images/Life-10.webp" alt="播放窗口" title="播放窗口" />&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Life-11.webp" alt="时间线" title="时间线" />&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Life-12.jpg" alt="滤镜" title="滤镜" />&lt;/p>
&lt;h2 id="b站投稿">B站投稿&lt;/h2>
&lt;p>完成素材获取和视频剪辑后，就可以将不带水印和广告开头的成品投稿到视频网站，博主是将视频投稿到哔哩哔哩，在&lt;code>创作中心&lt;/code>可以看到B站推出了&lt;code>云剪辑&lt;/code>功能，博主也稍微体验了一下，效果还不错，可以作为B站投稿的剪辑工具使用。博主投稿完成后便是等待B站审核视频，博主的投稿视频是7分钟左右，不到一个小时便审核通过了，效率还是挺高的。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Life-13.webp" alt="bilibili云剪辑" title="bilibili云剪辑" />&lt;br />
博主的投稿视频地址➡&lt;a href="https://www.bilibili.com/video/BV1FV41167o3/">https://www.bilibili.com/video/BV1FV41167o3/&lt;/a>，如果觉得不错可以多多支持！也可以在下方直接观看！&lt;br />
&lt;div>&lt;iframe id="biliplayer" src="https://linwhitehat.github.io//player.bilibili.com/player.html?bvid=BV1FV41167o3&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" loading="lazy" > &lt;/iframe>&lt;/div>
&lt;/p>
&lt;h2 id="结束">结束&lt;/h2>
&lt;p>这篇博客算是生活的一点记录，分享给更多剪辑爱好者，之后也会将一些不错的生活中遇到的小技巧进行分享。&lt;/p>
&lt;h2 id="彩蛋">彩蛋&lt;/h2>
&lt;p>&lt;em>从本文开始，我会在文章末尾添加彩蛋，一般是关于一些小技能或知识的介绍和分享&lt;/em>&lt;br />
&lt;strong>关闭微信监听和个性化推广&lt;/strong>&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Life-14.webp" alt="腾讯广告个性化管理" title="腾讯广告个性化管理" />&lt;br />
微信（WeChat）默认情况下在移动端是开启用户个性化广告推广的，而这种具备针对性的广告是基于用户的聊天、转账、朋友圈动态等内容进行广告个性化生成，用户不希望被信息监听则需要手动关闭，具体方法如下：&lt;/p>
&lt;ol>
&lt;li>打开微信，选择&lt;code>设置-&amp;gt;关于微信&lt;/code>；&lt;/li>
&lt;li>在下方的协议说明处，点击&lt;code>《隐私保护指引》&lt;/code>；&lt;/li>
&lt;li>在《隐私保护指引》中下拉一点找到索引部分即&lt;code>请根据以下索引阅读相应章节：&lt;/code>部分，点击&lt;code>9.其他&lt;/code>；&lt;/li>
&lt;li>跳转到&lt;code>9.其他&lt;/code>部分，点击描述内容中的&lt;code>《隐私政策》&lt;/code>；&lt;/li>
&lt;li>跳转到&lt;code>腾讯隐私保护平台&lt;/code>，下拉找到&lt;code>·广告&lt;/code>模块并点击，在描述内容中点击&lt;code>关于广告&lt;/code>；&lt;/li>
&lt;li>在&lt;code>关于广告&lt;/code>部分，找到&lt;code>二、如何管理您看到的广告&lt;/code>，在描述内容中点击&lt;code>管理&lt;/code>；&lt;/li>
&lt;li>跳转到&lt;code>腾讯广告个性化管理&lt;/code>，默认将会看到&lt;code>个性化推荐广告&lt;/code>为&lt;code>已开启&lt;/code>状态，此时点击右上角的&lt;code>登录&lt;/code>按钮，登录当前微信账号并授权；&lt;/li>
&lt;li>查看当前微信账号下是否开启了&lt;code>个性化推荐广告&lt;/code>，是的话点击关闭即可，同时会提示此操作的有效期为半年，半年后仍需再次手动关闭。&lt;/li>
&lt;li>PC端可以直接访问&lt;a href="https://privacy.qq.com/">腾讯隐私保护平台&lt;/a>进行前述步骤&lt;code>5-8&lt;/code>即可。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://linwhitehat.github.io/images/Life-15.webp" alt="关闭个性化广告" title="关闭个性化广告" />&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr />
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://www.bilibili.com/">哔哩哔哩&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/06/30/b%E7%AB%99%E6%8A%95%E7%A8%BF/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;a href="https://www.bilibili.com/video/BV1KK41157GJ?t=84">【视频去水印】万能法去水印，另类去水印方法&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/06/30/b%E7%AB%99%E6%8A%95%E7%A8%BF/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>&lt;a href="https://www.bilibili.com/video/BV1zb411H7J5?t=234">告别水印爱剪辑 免费快速剪辑神器shotcut使用简明教程&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/06/30/b%E7%AB%99%E6%8A%95%E7%A8%BF/#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>&lt;a href="https://www.shotcut.org/">Shotcut&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/06/30/b%E7%AB%99%E6%8A%95%E7%A8%BF/#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:5" role="doc-endnote">
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/38419089">Shotcut视频剪辑软件使用&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/06/30/b%E7%AB%99%E6%8A%95%E7%A8%BF/#fnref:5" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description><category domain="https://linwhitehat.github.io/categories/%E7%94%9F%E6%B4%BB/">生活</category><category domain="https://linwhitehat.github.io/categories/%E8%A7%86%E9%A2%91%E5%89%AA%E8%BE%91/">视频剪辑</category><category domain="https://linwhitehat.github.io/tags/%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9/">哔哩哔哩</category><category domain="https://linwhitehat.github.io/tags/%E8%A7%86%E9%A2%91%E5%89%AA%E8%BE%91/">视频剪辑</category><category domain="https://linwhitehat.github.io/tags/%E8%85%BE%E8%AE%AF%E8%A7%86%E9%A2%91/">腾讯视频</category><category domain="https://linwhitehat.github.io/tags/%E5%8E%BB%E6%B0%B4%E5%8D%B0/">去水印</category><category domain="https://linwhitehat.github.io/tags/%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4/">隐私保护</category><category domain="https://linwhitehat.github.io/tags/%E5%BE%AE%E4%BF%A1/">微信</category></item><item><title>定时自动获取动态公网IP</title><link>https://linwhitehat.github.io/posts/2020/06/18/%E5%AE%9A%E6%97%B6%E8%87%AA%E5%8A%A8%E8%8E%B7%E5%8F%96%E5%8A%A8%E6%80%81%E5%85%AC%E7%BD%91ip/</link><guid isPermaLink="true">https://linwhitehat.github.io/posts/2020/06/18/%E5%AE%9A%E6%97%B6%E8%87%AA%E5%8A%A8%E8%8E%B7%E5%8F%96%E5%8A%A8%E6%80%81%E5%85%AC%E7%BD%91ip/</guid><pubDate>Thu, 18 Jun 2020 18:26:17 +0000</pubDate><author>eric_lin_cn@outlook.com (L1n)</author><copyright>本文采用 [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh) 许可协议，转载请注明出处。</copyright><description>&lt;p>这篇博文主要是为了解决远程连接（Windows&lt;sup id="fnref:1">&lt;a href="https://linwhitehat.github.io/posts/2020/06/18/%E5%AE%9A%E6%97%B6%E8%87%AA%E5%8A%A8%E8%8E%B7%E5%8F%96%E5%8A%A8%E6%80%81%E5%85%AC%E7%BD%91ip/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>和Linux&lt;sup id="fnref:2">&lt;a href="https://linwhitehat.github.io/posts/2020/06/18/%E5%AE%9A%E6%97%B6%E8%87%AA%E5%8A%A8%E8%8E%B7%E5%8F%96%E5%8A%A8%E6%80%81%E5%85%AC%E7%BD%91ip/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>的使用手册均有记录）目标的公网IP是动态变化带来的一些麻烦，但是又不希望花费过多的时间去备案域名做DDNS，尽管也有不需要备案域名的，但是基于只需要知道当前公网IP的简单需求，我还是动手写个小工具AODI，用于定时发送邮件告知自己远程机器的公网IP地址。&lt;/p>
&lt;!-- more -->
&lt;h2 id="github项目">GitHub项目&lt;/h2>
&lt;p>目前&lt;a href="https://github.com/linwhitehat/AODI">AODI&lt;/a>已上传GitHub仓库，点击&lt;a href="https://github.com/linwhitehat/AODI">AODI&lt;/a>即可获取源码及使用说明。&lt;br />
GitHub地址：&lt;a href="https://github.com/linwhitehat/AODI">https://github.com/linwhitehat/AODI&lt;/a>&lt;/p>
&lt;h2 id="思路分析">思路分析&lt;/h2>
&lt;h3 id="获取准确的公网ip">获取准确的公网IP&lt;/h3>
&lt;p>从需求可以很明确目标就是当前远程机器的公网IP，自然最重要的就是获取到准备的公网IP，出于保险考虑，从以下两部分来源进行获取：&lt;/p>
&lt;ol>
&lt;li>开放的IP地址查询网站&lt;br />
目前互联网上开放不少支持IP查询的网站，但是质量参差不齐，我测试过后选择了三个网站作为候选，在获取公网IP时对候选网站逐个轮询直到成功获取当前公网IP，经过调研和测试，这三个网站相对可靠和稳定。&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>候选测试IP网站&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://ipv4.icanhazip.com">http://ipv4.icanhazip.com&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ip.cn">https://ip.cn&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://httpbin.org/ip">https://httpbin.org/ip&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>由于这类网站相对信息简单，只需要简单进行&lt;code>GET&lt;/code>请求即可获取到IP信息，因此不再赘述python部分内容。&lt;/p>
&lt;ol start="2">
&lt;li>路由器网关配置&lt;br />
除了上述网站进行IP查询之外，用户可自行添加测试IP网站，但是为了避免获取到不准确的公网IP，基于路由器网关配置的WAN口地址查询可以作为后备方法。通过访问路由器后台管理页面，通过身份验证后，查询对应的网络信息，由此即可获取到准确的公网IP，可以作为上述方法的备选方案也可以作为校验方法，甚至可以只使用这种方法直接获取公网IP。获取步骤如下：&lt;/li>
&lt;li>获取远程机器所在路由器的后台管理地址，一些路由器并非只使用网关地址作为后台管理地址，因此需要自己进行确认后配置完整地址；&lt;/li>
&lt;li>身份验证，设置登录的账户名和密码作为&lt;code>POST&lt;/code>请求的数据内容进行模拟登录，并使用&lt;code>session&lt;/code>方法记录当前登录状态；&lt;/li>
&lt;li>获取网关信息，模拟登录之后通常不会显示在网关信息页面，定位到网关信息所在的页面，使用&lt;code>GET&lt;/code>方法获取WAN口对应的IP信息。&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>注意&lt;/strong>&lt;br />
网关信息页面不一定就是浏览器地址栏显示的地址，最好是使用浏览器开发者工具，观察页面变化信息，找到对应请求时的完整地址信息（如下图），确保顺利获取到WAN口地址。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/AODI_1.png" alt="获取网关页面地址" title="获取网关页面地址" />&lt;/p>
&lt;h3 id="邮件通知">邮件通知&lt;/h3>
&lt;p>在远程机器获取到公网IP地址之后，便需要通知用户本人，便于其进行远程连接使用，自然想到邮件通知了。由于现在邮件系统五花八门，基于不同邮件系统存在些许差异，但是整体思路还是不变的，即开启邮件的SMTP服务并由客户端发送邮件。步骤说明如下：&lt;/p>
&lt;ol>
&lt;li>邮件系统开通SMTP，无论是QQ邮箱、网易邮箱或其他邮箱，默认应该都没有开启SMTP，因此需要申请开通；&lt;br />
&lt;img src="https://linwhitehat.github.io/images/AODI_2.webp" alt="开通SMTP" title="开通SMTP" />&lt;/li>
&lt;li>开通SMTP之后，需要确认对应的邮件系统是否使用默认SMTP端口，有特殊的话一般会说明，可自行查看确认；&lt;/li>
&lt;li>编写邮件，需要完整填写发件人邮箱地址，密码或授权码，收件人邮箱地址，SMTP服务器地址，邮件内容，信息无误便可发送邮件。&lt;/li>
&lt;/ol>
&lt;h2 id="定时">定时&lt;/h2>
&lt;p>尽管python本身可定制定时功能，但此处还是将其移至系统层面处理，分别叙述Linux和Windows下的定时方法。&lt;/p>
&lt;h3 id="linux">Linux&lt;/h3>
&lt;ol>
&lt;li>crontab&lt;br />
用于Linux系统下定期执行任务的命令&lt;sup id="fnref:3">&lt;a href="https://linwhitehat.github.io/posts/2020/06/18/%E5%AE%9A%E6%97%B6%E8%87%AA%E5%8A%A8%E8%8E%B7%E5%8F%96%E5%8A%A8%E6%80%81%E5%85%AC%E7%BD%91ip/#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>，详细使用参照&lt;a href="https://linwhitehat.github.io/Blog/2020/06/16/Linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C.html#%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-crontab">Linux使用手册&amp;lt;定时任务 crontab&amp;gt;&lt;/a>，简单使用方法如下：&lt;br />
&lt;img src="https://linwhitehat.github.io/images/AODI_3.png" alt="crontab使用方法" title="crontab使用方法" />&lt;br />
&lt;strong>基本格式 :&lt;/strong>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell"> *　　*　　*　　*　　*　　&lt;span class="nb">command&lt;/span>
&lt;span class="c1"># m　 h　 d　 M　 W　 命令&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>第1列表示分钟1～59 每分钟用*或者 */1表示&lt;br />
第2列表示小时1～23（0表示午夜0点）&lt;br />
第3列表示日期1～31&lt;br />
第4列表示月份1～12&lt;br />
第5列标识号星期0～6（0表示星期天）&lt;br />
第6列要运行的命令&lt;/p>
&lt;ol start="2">
&lt;li>atd&lt;br />
用于Linux下只执行&lt;strong>一次&lt;/strong>计划任务，在默认情况下，Linux系统是开启了atd这个服务的。如果不确认你的Linux是否开启了atd服务，请使用下面这个命令查看，若未开启可自行开启：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">/etc/init.d/atd status &lt;span class="c1"># 查看是否开启&lt;/span>
/etc/init.d/atd start &lt;span class="c1"># 开启服务&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="windows">Windows&lt;/h3>
&lt;ol>
&lt;li>at&lt;br />
根据官方文档&lt;sup id="fnref:4">&lt;a href="https://linwhitehat.github.io/posts/2020/06/18/%E5%AE%9A%E6%97%B6%E8%87%AA%E5%8A%A8%E8%8E%B7%E5%8F%96%E5%8A%A8%E6%80%81%E5%85%AC%E7%BD%91ip/#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>说明，此命令适用于Windows server，使用语法如下：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">at &lt;span class="o">[[&lt;/span>&lt;span class="se">\\&lt;/span>ComputerName&lt;span class="o">]&lt;/span> Hours:Minutes &lt;span class="o">[&lt;/span>/interactive&lt;span class="o">]&lt;/span> &lt;span class="o">[{&lt;/span>/every:Date&lt;span class="o">[&lt;/span>,...&lt;span class="o">]&lt;/span> &lt;span class="p">|&lt;/span> /next:Date&lt;span class="o">[&lt;/span>,...&lt;span class="o">]}]&lt;/span> Command&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>schtasks&lt;br />
此命令可定时运行指定任务，使用参数&lt;code>/sc&lt;/code>指定定时单位如分钟，使用参数&lt;code>/mo&lt;/code>指定时长间隔，使用参数&lt;code>/tn&lt;/code>指定任务名称且必须唯一，使用参数&lt;code>/tr&lt;/code>指定程序任务，使用举例如下：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># 间隔10分钟启动 notepad&lt;/span>
schtasks /create /sc minute /mo &lt;span class="m">10&lt;/span> /tn &lt;span class="s2">&amp;#34;Security Script&amp;#34;&lt;/span> /tr C:&lt;span class="se">\W&lt;/span>indows&lt;span class="se">\S&lt;/span>ystem32&lt;span class="se">\n&lt;/span>otepad.exe
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="结束">结束&lt;/h2>
&lt;p>本文旨在分享小工具用于日常需求，应用场景可能不局限于此文所述，也可以将AODI封装于其他工具作为小功能。&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr />
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://linwhitehat.github.io/Blog/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C.html">微软系统使用手册&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/06/18/%E5%AE%9A%E6%97%B6%E8%87%AA%E5%8A%A8%E8%8E%B7%E5%8F%96%E5%8A%A8%E6%80%81%E5%85%AC%E7%BD%91ip/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;a href="https://linwhitehat.github.io/Blog/2020/06/16/Linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C.html">Linux使用手册&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/06/18/%E5%AE%9A%E6%97%B6%E8%87%AA%E5%8A%A8%E8%8E%B7%E5%8F%96%E5%8A%A8%E6%80%81%E5%85%AC%E7%BD%91ip/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>&lt;a href="https://zh.wikipedia.org/zh-hans/Cron">Cron&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/06/18/%E5%AE%9A%E6%97%B6%E8%87%AA%E5%8A%A8%E8%8E%B7%E5%8F%96%E5%8A%A8%E6%80%81%E5%85%AC%E7%BD%91ip/#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc738335(v=ws.10)?redirectedfrom=MSDN">Creating and managing scheduled tasks from the Command Line&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/06/18/%E5%AE%9A%E6%97%B6%E8%87%AA%E5%8A%A8%E8%8E%B7%E5%8F%96%E5%8A%A8%E6%80%81%E5%85%AC%E7%BD%91ip/#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description><category domain="https://linwhitehat.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/">技术分享</category><category domain="https://linwhitehat.github.io/categories/code/">Code</category><category domain="https://linwhitehat.github.io/categories/%E5%B7%A5%E5%85%B7%E5%BA%93/">工具库</category><category domain="https://linwhitehat.github.io/tags/%E5%8A%A8%E6%80%81ip/">动态IP</category><category domain="https://linwhitehat.github.io/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/">树莓派</category><category domain="https://linwhitehat.github.io/tags/raspberry/">raspberry</category><category domain="https://linwhitehat.github.io/tags/dynamic-ip/">dynamic IP</category><category domain="https://linwhitehat.github.io/tags/python3/">Python3</category><category domain="https://linwhitehat.github.io/tags/smtp/">SMTP</category><category domain="https://linwhitehat.github.io/tags/wan/">WAN</category></item><item><title>Linux使用手册</title><link>https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</link><guid isPermaLink="true">https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</guid><pubDate>Tue, 16 Jun 2020 11:26:17 +0000</pubDate><author>eric_lin_cn@outlook.com (L1n)</author><copyright>本文采用 [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh) 许可协议，转载请注明出处。</copyright><description>&lt;p>&lt;a href="https://ubuntu.com/">Ubuntu&lt;/a>作为Linux系统分支中十分流行的操作系统，2020年以前已经发布最新19.10版本，同时全球市场占有率也排名第3（&lt;a href="https://zh.hostadvice.com/marketshare/os/">统计来源&lt;/a>），作为经典的Linux桌面系统，目前的生态是向好的，而且即将发布的Ubuntu 20.04 LTS也许将带来更多的惊喜，对于想尝试Linux系统的新手而言，这是挺好的一个选择。现在Ubuntu的中文支持也很好，推出了中文版Ubuntu即优麒麟（&lt;a href="https://cn.ubuntu.com/desktop">Ubuntu Kylin&lt;/a>）。本文的很多用法不局限于个人使用较多的Ubuntu或商业使用较多的Centos，对于多数常用的Linux发行版本都可适用。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-2.webp" alt="Ubuntu 20.04" title="Ubuntu 20.04" />&lt;/p>
&lt;!-- more -->
&lt;p>根据2020年5月Statcounter的调查，桌面操作系统市场中Linux占比为&lt;code>1.68%&lt;/code>，而根据W3Techs的调查，服务器操作系统Linux占比达到&lt;code>43.1%&lt;/code>，根据Top500的统计，2019始超级电脑操作系统占比中Linux则占据&lt;code>100%&lt;/code>。相比于Windows占据桌面操作系统市场，Linux在服务器端以及超级电脑方面则处于绝对地位，对Linux及其衍生系统的学习也是必要的。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-1-1.webp" alt="Linux全球桌面操作系统占比" title="Linux全球桌面操作系统占比" />&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-1-2.png" alt="Linux全球服务器操作系统占比" title="Linux全球服务器操作系统占比" />&lt;/p>
&lt;h2 id="基础">基础&lt;/h2>
&lt;h3 id="目录结构">目录结构&lt;/h3>
&lt;p>Ubuntu的文件系统目录结构可以参照Linux的目录结构，相比使用Windows系统，在使用Linux系统中对文件目录的了解是至关重要的。此处我罗列了Linux的文件系统目录标准（FHS）以及特殊的目录及用途&lt;sup id="fnref:1">&lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>。&lt;/p>
&lt;ol>
&lt;li>FHS&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-15.webp" alt="文件系统目录标准" title="文件系统目录标准" />&lt;/li>
&lt;li>特殊目录&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-16.webp" alt="特殊目录" title="特殊目录" />&lt;/li>
&lt;/ol>
&lt;h3 id="linux终端命令">Linux终端命令&lt;/h3>
&lt;p>使用Linux系统则意味着可以随时摆脱桌面的存在，将更多资源赋予更需要的程序进程使用，而脱离桌面后所有的系统操作都将使用终端下的命令来完成，这也使得操作更加快捷高效。之前看到来自&lt;a href="https://linuxtoy.org/">LinuxTOY&lt;/a>的一份&lt;code>Unix/Linux 命令参考&lt;/code>&lt;sup id="fnref:2">&lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>，便转载自此，基本都是常用且基础的终端命令。&lt;/p>
&lt;ol>
&lt;li>文件命令&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-5.webp" alt="文件命令" title="文件命令" />&lt;/li>
&lt;li>系统信息&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-6.webp" alt="系统信息" title="系统信息" />&lt;/li>
&lt;li>压缩&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-7.webp" alt="压缩" title="压缩" />&lt;/li>
&lt;li>进程管理&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-8.webp" alt="进程管理" title="进程管理" />&lt;/li>
&lt;li>网络&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-9.webp" alt="网络" title="网络" />&lt;/li>
&lt;li>文件权限&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-10.webp" alt="文件权限" title="文件权限" />&lt;/li>
&lt;li>安装&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-11.webp" alt="安装" title="安装" />&lt;/li>
&lt;li>SSH&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-12.webp" alt="SSH" title="SSH" />&lt;/li>
&lt;li>快捷键&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-13.webp" alt="快捷键" title="快捷键" />&lt;/li>
&lt;li>搜索&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-14.webp" alt="搜索" title="搜索" />&lt;/li>
&lt;/ol>
&lt;h3 id="修改软件源">修改软件源&lt;/h3>
&lt;p>在Linux的软件管理体系中，软件源是关键所在，由于流行Linux系统多数服务器不在国内，不少国内用户安装完Linux系统之后首要做的就是修改软件源，这样更新或安装下载时速度会相对快。针对不同的Linux发行版，软件源是存在差异的，从我认知的主流Linux分支操作系统而言，可以有以下两种：&lt;/p>
&lt;ol>
&lt;li>Ubuntu（Debian），使用apt-get源，使用包管理工具 Advanced Packaging Tool；&lt;/li>
&lt;li>CentOS，使用yum源，使用软件包管理器 Yellow dog Updater, Modified。&lt;br />
这两种的源修改方式原理是一致的，所以我按以下步骤来叙述：&lt;/li>
&lt;li>国内源&lt;br />
国内不少企业或高校都有做源镜像，选择也有很多，我这里主要介绍阿里源、中科大源、清华源和网易源（均以Ubuntu为例）：&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>阿里源，即&lt;a href="https://developer.aliyun.com/mirror/">阿里云开源镜像站&lt;/a>，选择&lt;code>Ubuntu&lt;/code>，会给出不同版本所需的源信息，使用对应版本的即可。&lt;/li>
&lt;li>中科大源，即&lt;a href="http://mirrors.ustc.edu.cn/help/index.html">USTC Mirror&lt;/a>，选择&lt;code>Ubuntu源使用帮助&lt;/code>，会给出详细的源修改过程与选择。&lt;/li>
&lt;li>清华源，即&lt;a href="https://mirrors.tuna.tsinghua.edu.cn/">清华大学开源软件镜像站&lt;/a>，选择&lt;code>Ubuntu&lt;/code>旁边的&lt;code>❓&lt;/code>即可看到源信息。&lt;/li>
&lt;li>网易源，即&lt;a href="https://mirrors.163.com/">网易开源镜像站&lt;/a>，选择最右侧一栏的&lt;code>Ubuntu使用帮助&lt;/code>即可看到不同版本的源信息。&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>更改源路径&lt;br />
在修改源之前，对旧源文件做个备份，之后即可添加上述任意一个国内源信息到Ubuntu源文件&lt;code>sources.list&lt;/code>或下载源文件到centos生成缓存，完成源文件修改如下：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># Ubuntu&lt;/span>
sudo cp /etc/apt/sources.list /etc/apt/sources.list.backup
sudo vim /etc/apt/sources.list &lt;span class="c1">#之后添加国内源信息到文件并保存&lt;/span>
sudo apt-get update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> sudo apt-get upgrade
&lt;span class="c1"># CentOS&lt;/span>
mv /etc/yum.repos.d/Centos.repo /etc/yum.repos.d/Centos.repo.backup
&lt;span class="nb">cd&lt;/span> /etc/yum.repos.d/
wget http://mirrors.163.com/.help/CentOS6-Base-163.repo
yum clean all&lt;span class="p">;&lt;/span> yum makecache
yum -y update
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>源描述&lt;sup id="fnref:3">&lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>&lt;br />
其实源本身是有一定结构的，以Ubuntu16.04版本的中科大源为例子：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="n">deb&lt;/span> &lt;span class="n">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">mirrors&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ustc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">edu&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cn&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ubuntu&lt;/span>&lt;span class="o">/&lt;/span> &lt;span class="n">xenial&lt;/span> &lt;span class="n">main&lt;/span> &lt;span class="n">restricted&lt;/span> &lt;span class="n">universe&lt;/span> &lt;span class="n">multiverse&lt;/span>
&lt;span class="c1"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse&lt;/span>
&lt;span class="n">deb&lt;/span> &lt;span class="n">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">mirrors&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ustc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">edu&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cn&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ubuntu&lt;/span>&lt;span class="o">/&lt;/span> &lt;span class="n">xenial&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">updates&lt;/span> &lt;span class="n">main&lt;/span> &lt;span class="n">restricted&lt;/span> &lt;span class="n">universe&lt;/span> &lt;span class="n">multiverse&lt;/span>
&lt;span class="c1"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse&lt;/span>
&lt;span class="n">deb&lt;/span> &lt;span class="n">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">mirrors&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ustc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">edu&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cn&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ubuntu&lt;/span>&lt;span class="o">/&lt;/span> &lt;span class="n">xenial&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">backports&lt;/span> &lt;span class="n">main&lt;/span> &lt;span class="n">restricted&lt;/span> &lt;span class="n">universe&lt;/span> &lt;span class="n">multiverse&lt;/span>
&lt;span class="c1"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse&lt;/span>
&lt;span class="n">deb&lt;/span> &lt;span class="n">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">mirrors&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ustc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">edu&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cn&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ubuntu&lt;/span>&lt;span class="o">/&lt;/span> &lt;span class="n">xenial&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">security&lt;/span> &lt;span class="n">main&lt;/span> &lt;span class="n">restricted&lt;/span> &lt;span class="n">universe&lt;/span> &lt;span class="n">multiverse&lt;/span>
&lt;span class="c1"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>第一个单词代表包的类型，deb表示二进制包，deb-src表示源码包。&lt;/li>
&lt;li>第二个网址表示源的地址。&lt;/li>
&lt;li>第三个单词表示系统的版本，既可以是[ wheezy | jessie | stretch | sid ]中的一种，也可以是[ oldstable | stable | testing | unstable ]中的一种。前一个系列表示系统的release code name，后一个系列表示系统的release class，前者按阶段发布，后者持续演进。例如在Ubuntu系统中，&lt;code>xenial&lt;/code>代表的是Ubuntu16.04版本，如果是其他版本可将其替换为其他版本代号即可: &lt;code>20.04&lt;/code>:&lt;code>focal&lt;/code>；&lt;code>18.04&lt;/code>：&lt;code>bionic&lt;/code>；&lt;code>17.10&lt;/code>：&lt;code>artful&lt;/code>；&lt;code>16.04&lt;/code>：&lt;code>xenial&lt;/code>；&lt;code>14.04&lt;/code>：&lt;code>trusty&lt;/code>。&lt;/li>
&lt;li>第四部分表示接受哪种开源类型的软件，可以包含[ main | contrib | non-free ]中的一个或多个。main表示纯正的遵循Debian开源规范的软件，contrib表示遵循Debian开源规范但依赖于其它不遵循Debian开源规范的软件的软件，non-free表示不遵循Debian开源规范的软件。Debian开源规范指DFSG（Debian 自由软件指导方针）。&lt;/li>
&lt;/ul>
&lt;h3 id="中文输入法">中文输入法&lt;/h3>
&lt;p>Linux系统本身输入法并没有带中文输入，对于习惯使用中文环境的国人会比较不适应，尽管常态下英文也足够使用，但是增加中文输入法并不困难，在熟悉的输入法下也会舒服一点。默认情况下，Ubuntu系统自带中文输入法，且切换快捷键为&lt;code>win+space&lt;/code>，但是体验并不流畅，故我更愿意花几分钟安装更舒服的中文输入法。中文输入法（Ubuntu）设置步骤如下：&lt;/p>
&lt;ol>
&lt;li>设置语言&lt;br />
Ubuntu18.04环境下，点击系统设置&lt;code>Settings -&amp;gt; Region&amp;amp;Language -&amp;gt; Manage Installed Languages -&amp;gt;language support&lt;/code>，首次会要求安装默认语言和输入法并输入密码，可以看到默认的输入法是IBus。&lt;/li>
&lt;li>安装中文输入法&lt;br />
此处选择安装的中文输入法是fcitx（Fcitx[ˈfaɪtɪks]是 （Free Chinese Input Toy for X） 的英文缩写，中文名为小企鹅输入法），执行&lt;code>sudo apt-get install fcitx-table-wbpy&lt;/code>安装fcitx，然后在输入法设置处选择&lt;code>fcutx&lt;/code>然后重启。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-pinyin-1.webp" alt="选择输入法" title="选择输入法" />&lt;/li>
&lt;li>配置输入法&lt;br />
重启后，在桌面菜单栏右上角可以看到多出一个类似键盘的图标即fcitx，点击选择&lt;code>Configuration&lt;/code>或中文语言下的&lt;code>配置&lt;/code>,添加输入法，默认存在英语输入法，再添加拼音即可，如果当前系统语言非中文环境，则不要勾选&lt;code>Only Show Current Language&lt;/code>，添加完成拼音之后，按下快捷键&lt;code>Ctrl+Space&lt;/code>即可切换中英文输入法。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-fcitx.png" alt="fcitx输入法图标" title="fcitx输入法图标" />&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-fcitx-2.webp" alt="fcitx输入法" title="fcitx输入法" />&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-pinyin-2.webp" alt="配置输入法" title="配置输入法" />&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-pinyin-3.webp" alt="添加拼音输入法" title="添加拼音输入法" />&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-pinyin-4.webp" alt="使用中文输入法" title="使用中文输入法" />&lt;/li>
&lt;/ol>
&lt;h3 id="系统磁盘清理">系统磁盘清理&lt;/h3>
&lt;p>当系统磁盘存储空间被占满后，许多便捷的操作会受限而无法继续，同时写操作也将无法进行，此时找到占用存储空间最大的文件并删除是较快速清理磁盘空间的方法。执行&lt;code>df -h&lt;/code>可以查看当前磁盘空间占用情况，之后便通过&lt;code>df&lt;/code>和&lt;code>du&lt;/code>进行大文件的快速定位：&lt;br />
定位的方法便是从根目录开始，找出每一级目录下存储占用最高的目录，逐级查找，直至找到最终文件，通过逐级对大文件目录的递减排序可以很快找到占用空间大的文件，查找命令如下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">du -h / --max-depth&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> sort -hr &lt;span class="p">|&lt;/span> head -n &lt;span class="m">10&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="vim编辑器">vim编辑器&lt;/h3>
&lt;p>作为Linux系统下默认的编辑器，也是手撸代码的利器，不掌握基本的使用对使用Linux系统还是有些许不便，因此我参照菜鸟教程&lt;sup id="fnref:4">&lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>简要叙述vim的基本使用。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/vi-vim-cheat-sheet.webp" alt="vim键盘图" title="vim键盘图" />&lt;/p>
&lt;ol>
&lt;li>vim使用&lt;br />
vi/vim 共分为三种模式，分别是命令模式（Command mode），输入模式（Insert mode）和底线命令模式（Last line mode）。 这三种模式的作用分别是：&lt;br />
①命令模式。用户在终端输入&lt;code>vi&lt;/code>或&lt;code>vim&lt;/code>，便进入了命令模式。此状态下敲击键盘动作会被Vim识别为命令，而非输入字符。常用命令如下：&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;code>i&lt;/code>：切换到输入模式，以输入字符&lt;/li>
&lt;li>&lt;code>x&lt;/code>：删除当前光标所在处的字符&lt;/li>
&lt;li>&lt;code>:&lt;/code>：切换到底线命令模式，以在最底一行输入命令&lt;br />
②输入模式。在命令模式下按下&lt;code>i&lt;/code>就进入了输入模式。在输入模式中，可以使用以下按键：&lt;/li>
&lt;li>字符按键以及Shift组合，输入字符&lt;/li>
&lt;li>ENTER，回车键，换行&lt;/li>
&lt;li>BACK SPACE，退格键，删除光标前一个字符&lt;/li>
&lt;li>DEL，删除键，删除光标后一个字符&lt;/li>
&lt;li>方向键，在文本中移动光标&lt;/li>
&lt;li>HOME/END，移动光标到行首/行尾&lt;/li>
&lt;li>Page Up/Page Down，上/下翻页&lt;/li>
&lt;li>Insert，切换光标为输入/替换模式，光标将变成竖线/下划线&lt;/li>
&lt;li>ESC，退出输入模式，切换到命令模式&lt;br />
③底线命令模式。在命令模式下按下&lt;code>:&lt;/code>（英文冒号）就进入了底线命令模式。底线命令模式可以输入单个或多个字符的命令，在底线命令模式中，基本的命令有：&lt;/li>
&lt;li>&lt;code>q&lt;/code>：退出程序&lt;/li>
&lt;li>&lt;code>w&lt;/code>：保存文件&lt;/li>
&lt;li>按ESC键可随时退出底线命令模式&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-17.webp" alt="vim工作模式状态图" title="vim工作模式状态图" />&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>按键说明&lt;br />
在上述基本使用的按键之外，vim还有许多按键可用，对于三种模式下依然有不同的按键。此处简要列述常用的部分，其余可参照菜鸟教程&lt;sup id="fnref:4">&lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>叙述。&lt;br />
①一般模式下可用的光标移动、复制粘贴、搜索等：&lt;/li>
&lt;/ol>
&lt;table>
&lt;tr>
&lt;td colspan="2">移动光标的方法&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>h 或 向左箭头键(←)&lt;/td>
&lt;td>光标向左移动一个字符&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>j 或 向下箭头键(↓)&lt;/td>
&lt;td>光标向下移动一个字符&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>k 或 向上箭头键(↑)&lt;/td>
&lt;td>光标向上移动一个字符&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>l 或 向右箭头键(→)&lt;/td>
&lt;td>光标向右移动一个字符&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>0 或功能键[Home]&lt;/td>
&lt;td>数字 0：移动到这一行的最前面字符处 (常用)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$ 或功能键[End]&lt;/td>
&lt;td>移动到这一行的最后面字符处(常用)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td colspan="2">搜索替换&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/word&lt;/td>
&lt;td>向光标之下寻找一个名称为 word 的字符串。例如要在档案内搜寻 vbird 这个字符串，就输入 /vbird 即可！ (常用)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>?word&lt;/td>
&lt;td>向光标之上寻找一个字符串名称为 word 的字符串。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>n&lt;/td>
&lt;td>这个 n 是英文按键。代表重复前一个搜寻的动作。举例来说， 如果刚刚我们执行 /vbird 去向下搜寻 vbird 这个字符串，则按下 n 后，会向下继续搜寻下一个名称为 vbird 的字符串。如果是执行 ?vbird 的话，那么按下 n 则会向上继续搜寻名称为 vbird 的字符串！&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>N&lt;/td>
&lt;td>这个 N 是英文按键。与 n 刚好相反，为『反向』进行前一个搜寻动作。 例如 /vbird 后，按下 N 则表示『向上』搜寻 vbird 。&lt;/td>
&lt;/tr>
&lt;/table>
②一般模式切换到编辑模式的可用的按键如下（下述这些按键中，在 vi 画面的左下角处会出现『--INSERT--』或『--REPLACE--』的字样。 由名称就知道该动作了。特别注意的是，上面也提过了，你想要在文档里面输入字符时， 一定要在左下角处看到 INSERT 或 REPLACE 才能输入。）：
&lt;table>
&lt;tr>
&lt;td colspan="2">进入输入或取代的编辑模式&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>i, I&lt;/td>
&lt;td>进入输入模式(Insert mode)：i 为『从目前光标所在处输入』， I 为『在目前所在行的第一个非空格符处开始输入』。 (常用)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>a, A&lt;/td>
&lt;td>进入输入模式(Insert mode)：a 为『从目前光标所在的下一个字符处开始输入』， A 为『从光标所在行的最后一个字符处开始输入』。(常用)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>o, O&lt;/td>
&lt;td>进入输入模式(Insert mode)：英文字母 o 为『在目前光标所在的下一行处输入新的一行』，大写字母 O 为在目前光标所在处的上一行输入新的一行！(常用)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>r, R&lt;/td>
&lt;td>进入取代模式(Replace mode)：r 只会取代光标所在的那一个字符一次；R会一直取代光标所在的文字，直到按下 ESC 为止；(常用)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>[Esc]&lt;/td>
&lt;td>退出编辑模式，回到一般模式中(常用)&lt;/td>
&lt;/tr>
&lt;/table>
③一般模式切换到指令行模式的可用的按键如下（注意一下啊，惊叹号 (!) 在 vi 当中，常常具有『强制』的意思～）：
&lt;table>
&lt;tr>
&lt;td colspan="2">指令行的储存、离开等指令&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>:w&lt;/td>
&lt;td>将编辑的数据写入硬盘档案中(常用)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>:w!&lt;/td>
&lt;td>若文件属性为『只读』时，强制写入该档案。不过，到底能不能写入， 还是跟你对该档案的档案权限有关啊！&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>:q&lt;/td>
&lt;td>离开 vi (常用)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>:q!&lt;/td>
&lt;td>若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>:wq&lt;/td>
&lt;td>储存后离开，若为 :wq! 则为强制储存后离开 (常用)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ZZ&lt;/td>
&lt;td>这是大写的 Z 喔！若档案没有更动，则不储存离开，若档案已经被更动过，则储存后离开！&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>:w [filename]&lt;/td>
&lt;td>将编辑的数据储存成另一个档案（类似另存新档）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>:r [filename]&lt;/td>
&lt;td>在编辑的数据中，读入另一个档案的数据。亦即将 『filename』 这个档案内容加到游标所在行后面&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>:n1,n2 w [filename]&lt;/td>
&lt;td>将 n1 到 n2 的内容储存成 filename 这个档案。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>:! command&lt;/td>
&lt;td>暂时离开 vi 到指令行模式下执行 command 的显示结果！例如『:! ls /home』即可在 vi 当中察看 /home 底下以 ls 输出的档案信息！&lt;/td>
&lt;/tr>
&lt;/table>
&lt;h2 id="进阶使用">进阶使用&lt;/h2>
&lt;h3 id="修改root密码">修改root密码&lt;/h3>
&lt;p>默认Ubuntu下安装完系统只是设置了用户账号密码，root用户则处于默认情况，要更改root密码可在当前用户下执行：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo passwd root
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>输入两次需要设置的密码即可，密码是看不到的，如果输错则无法撤销，可以按下&lt;code>ctrl + C&lt;/code>然后重新执行上述命令设置密码。&lt;/p>
&lt;h3 id="使用root登录ssh">使用root登录ssh&lt;/h3>
&lt;p>修改&lt;code>ssh&lt;/code>登录的配置文件&lt;sup id="fnref:5">&lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># 切换到root用户&lt;/span>
su root
&lt;span class="c1"># 修改ssh端口，此处是修改为666&lt;/span>
sed -i &lt;span class="s1">&amp;#39;s/^.*Port.*/Port 666/g&amp;#39;&lt;/span> /etc/ssh/sshd_config &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> sed -i &lt;span class="s1">&amp;#39;s/^.*PermitRootLogin.*/PermitRootLogin yes/g&amp;#39;&lt;/span> /etc/ssh/sshd_config &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> sed -i &lt;span class="s1">&amp;#39;s/^.*PasswordAuthentication.*/PasswordAuthentication yes/g&amp;#39;&lt;/span> /etc/ssh/sshd_config
&lt;span class="c1"># 防火墙放行666端口&lt;/span>
ufw allow 666/tcp
&lt;span class="c1"># 重启ssh服务&lt;/span>
service ssh restart
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="终端查看并关闭端口">终端查看并关闭端口&lt;/h3>
&lt;p>在终端下执行以下命令&lt;sup id="fnref:6">&lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:6" class="footnote-ref" role="doc-noteref">6&lt;/a>&lt;/sup>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># 查看已经连接的服务端口（ESTABLISHED）&lt;/span>
netstat -a
&lt;span class="c1"># 查看所有的服务端口（LISTEN，ESTABLISHED）&lt;/span>
netstat -ap
&lt;span class="c1"># 查看指定端口8080&lt;/span>
netstat -ap &lt;span class="p">|&lt;/span> grep &lt;span class="m">8080&lt;/span>
&lt;span class="c1"># 另一种查看指定端口方法&lt;/span>
lsof -i:8080
&lt;span class="c1"># 关闭端口对应进程pid&lt;/span>
&lt;span class="nb">kill&lt;/span> -9 PID号
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="测试ubuntu-vps主机性能">测试Ubuntu VPS主机性能&lt;/h3>
&lt;p>这部分是针对购买vps的一个建议，因为vps的价格往往与机子本身的硬件性能直接挂钩，购买vps都希望自己的机子是货真价实的，那么对机子的读写、网络及其他性能测试还是有必要的，参照这篇测试博文&lt;sup id="fnref:7">&lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:7" class="footnote-ref" role="doc-noteref">7&lt;/a>&lt;/sup>做了简单的转述。&lt;/p>
&lt;ol>
&lt;li>测试海外vps到国内的速度&lt;br />
一键测试服务器到国内的速度脚本Superspeed.sh ：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">wget https://raw.githubusercontent.com/oooldking/script/master/superspeed.sh
chmod +x superspeed.sh
./superspeed.sh
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>全面测评&lt;br />
使用Zench，一键检测VPS的CPU、内存、负载、IO读写、机房带宽等，同时包含Virt 检测服务器类型参数，常见 openvz，kvm，独服都能检测出来，此外加入 Ping 以及 路由测试 功能，会生成测评报告：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">wget -N --no-check-certificate https://raw.githubusercontent.com/FunctionClub/ZBench/master/ZBench-CN.sh &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> bash ZBench-CN.sh
&lt;span class="c1">#项目：https://github.com/FunctionClub/ZBench&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>性能跑分&lt;br />
VPS性能综合跑分工具&lt;code>unixbench&lt;/code>：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">wget --no-check-certificate https://github.com/teddysun/across/raw/master/unixbench.sh
chmod +x unixbench.sh
./unixbench.sh
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="linux远程">Linux远程&lt;/h3>
&lt;h4 id="后台运行程序">后台运行程序&lt;/h4>
&lt;p>对于多数服务器，基本都是通过 SSH 进行远程连接，而部署程序到服务器后不希望程序在退出远程控制界面后中断，便需要后台运行程序。&lt;sup id="fnref:8">&lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:8" class="footnote-ref" role="doc-noteref">8&lt;/a>&lt;/sup>&lt;/p>
&lt;h4 id="linux系统相关概念">Linux系统相关概念&lt;/h4>
&lt;ul>
&lt;li>进程组(process group): 一个或多个进程的集合,每一个进程组有唯一一个进程组ID,即进程组长进程的ID.&lt;/li>
&lt;li>会话期(session): 一个或多个进程组的集合,有唯一一个会话期首进程(session leader). 会话期ID为首进程的ID.&lt;/li>
&lt;li>会话期可以有一个单独的控制终端(controlling terminal).&lt;/li>
&lt;li>与控制终端连接的会话期首进程叫做控制进程(controlling process).&lt;/li>
&lt;li>当前与终端交互的进程称为前台进程组.&lt;/li>
&lt;li>其余进程组称为后台进程组.&lt;/li>
&lt;li>根据POSIX.1定义: 挂断信号(SIGHUP)默认的动作是终止程序.&lt;/li>
&lt;li>守护进程本身的特殊性使得这类进程不受远程连接进程的影响，因为是相互独立的两个进程组，即使 SSH 关闭也不会导致守护进程终止.&lt;/li>
&lt;/ul>
&lt;h4 id="后台运行方法">后台运行方法&lt;/h4>
&lt;ol>
&lt;li>在远程开启&lt;code>tmux&lt;/code>，在&lt;code>tmux&lt;/code>里运行程序&lt;/li>
&lt;li>使用&lt;code>nohup&lt;/code>命令执行程序&lt;/li>
&lt;/ol>
&lt;h4 id="终止后台运行程序">终止后台运行程序&lt;/h4>
&lt;p>由于程序后台运行，因此也就不能使用Linux的终止命令直接终止程序，此时如果不需要程序继续后台执行，需要通过以下方法终止程序：&lt;/p>
&lt;ol>
&lt;li>查看程序对应的进程，可以通过&lt;code>ps -aux | grep python&lt;/code>来查看 python 脚本的所在进程，找到进程号。&lt;/li>
&lt;li>杀死进程进而终止程序，执行&lt;code>kill -9 PID&lt;/code>，其中 PID 是程序对应的进程号。&lt;/li>
&lt;/ol>
&lt;h3 id="linux系统安装python3">Linux系统安装python3&lt;/h3>
&lt;p>之所以在这部分内容中加入python3安装是因为旧版或部分Linux系统中默认安装的是python2，而习惯使用python3或需要做代码迁移的时候还是想在python3环境下运行，加上python2与python3是可并存的，此时安装python3便顺理成章，只是需要解决一些冲突，因此在此作为Linux的一种进阶使用说明进行叙述，由于Ubuntu系统使用apt安装十分便捷，此处以centos为例子进行讲述&lt;sup id="fnref:9">&lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:9" class="footnote-ref" role="doc-noteref">9&lt;/a>&lt;/sup>。&lt;/p>
&lt;h4 id="安装依赖包">安装依赖包&lt;/h4>
&lt;p>依赖包的安装是安装python3时顺利的基础，这是编译安装时需要的依赖环境，安装如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc make
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="下载python3">下载python3&lt;/h4>
&lt;p>根据自身的需求，从python官网下载所需的版本压缩包，比如下载目前最新版即python3.8.3，则在本地选择安装的文件目录，然后下载：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">wget https://www.python.org/ftp/python/3.8.3/Python-3.8.3.tgz
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在当前目录下解压便可获得名为&lt;code>Pyhton-3.8.3&lt;/code>的文件夹，解压和安装可执行下述命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">tar -zxvf Python-3.8.3.tgz
&lt;span class="nb">cd&lt;/span> Python-3.8.3
./configure
make&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>make install
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>顺利的话则安装完成，若出现错误如&lt;code>ModuleNotFound：No module named '_ctypes'&lt;/code>则执行下述命令后继续执行上述安装命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">yum install libffi-devel -y
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>至此，基本完成python3的安装，默认安装位置是在&lt;code>/usr/local/bin/&lt;/code>。&lt;/p>
&lt;h4 id="配置默认python">配置默认python&lt;/h4>
&lt;p>为了便于调用，可以将python3设置为默认python调用，步骤如下：&lt;br />
①备份旧python命令，&lt;code>mv /usr/bin/python /usr/bin/python.bak&lt;/code>&lt;br />
②添加python3的软链接，&lt;code>ln -s /usr/local/bin/python3 /usr/bin/python&lt;/code>&lt;br />
同时，将&lt;code>pip3&lt;/code>一并修改为默认的pip调用，可以通过&lt;code>find / -name 'pip3'&lt;/code>找到pip3的位置，步骤如下：&lt;br />
①备份旧pip命令，&lt;code>mv /usr/bin/pip /usr/bin/pip.bak&lt;/code>&lt;br />
②添加pip3的软链接，&lt;code>ln -s /usr/local/bin/pip3 /usr/bin/pip&lt;/code>&lt;/p>
&lt;h4 id="解决yum与python3的冲突">解决yum与python3的冲突&lt;/h4>
&lt;p>由于设置了默认python为python3，会与不支持python3的yum产生冲突，需要将yum的默认指向的pytho修改为python2版本，修改步骤如下：&lt;br />
①修改配置1，&lt;code>vi /usr/libexec/urlgrabber-ext-down&lt;/code>，将文件中&lt;code>python&lt;/code>修改为对应的旧python2版本，然后保存；&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-3.png" alt="修改配置1" title="修改配置1" />&lt;br />
②修改配置2，&lt;code>vi /usr/bin/yum&lt;/code>，将文件中&lt;code>python&lt;/code>修改为对应的旧python2版本，然后保存。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Linux-4.png" alt="修改配置2" title="修改配置2" />&lt;br />
自此完成python3的安装与配置，可在centos上调用&lt;code>python2&lt;/code>使用旧版本，调用&lt;code>python&lt;/code>使用新版本。&lt;/p>
&lt;h3 id="定时任务-crontab">定时任务 crontab&lt;/h3>
&lt;p>Unix和类Unix操作系统在服务器中是十分常见的，实现预置任务和周期性执行对于管理服务器有着十分巨大的意义，因此掌握这类操作系统的定时任务对提高工作效率和减少人工干预有不少帮助。而这类操作系统中常用的一种定时周期性执行任务的工具即&lt;code>crontab&lt;/code>&lt;sup id="fnref:10">&lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:10" class="footnote-ref" role="doc-noteref">10&lt;/a>&lt;/sup>，该词来源于希腊语&lt;code>chronos(χρνο)&lt;/code>，原意是时间。通常，&lt;code>crontab&lt;/code>储存的指令被守护进程激活，&lt;code>crond&lt;/code>常常在后台运行，每一分钟检查是否有预定的作业需要执行。这类作业一般称为&lt;code>cron jobs&lt;/code>。&lt;/p>
&lt;h4 id="介绍">介绍&lt;/h4>
&lt;p>crontab文件包含送交cron守护进程的一系列作业和指令。每个用户可以拥有自己的crontab文件，同时操作系统保存一个针对整个系统的crontab文件，该文件通常存放于/etc或者/etc之下的子目录中，而这个文件只能由系统管理员来修改。crontab文件的每一行均遵守特定的格式，由空格或tab分隔为数个领域，每个领域可以放置单一或多个数值。&lt;br />
在Linux系统下的任务调度存在系统任务调度&lt;sup id="fnref:11">&lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:11" class="footnote-ref" role="doc-noteref">11&lt;/a>&lt;/sup>和用户任务调度&lt;sup id="fnref:12">&lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:12" class="footnote-ref" role="doc-noteref">12&lt;/a>&lt;/sup>，系统任务调度文件可见&lt;code>/etc/crontab&lt;/code>文件，用户调度文件可见&lt;code>/var/spool/cron/&lt;/code>目录下对应文件。&lt;/p>
&lt;h4 id="使用">使用&lt;/h4>
&lt;ul>
&lt;li>安装&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">yum install crontabs &lt;span class="c1"># Centos&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>操作&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">/sbin/service crond start &lt;span class="c1">#启动服务&lt;/span>
/sbin/service crond stop &lt;span class="c1">#关闭服务&lt;/span>
/sbin/service crond restart &lt;span class="c1">#重启服务&lt;/span>
/sbin/service crond reload &lt;span class="c1">#重新载入配置&lt;/span>
service crond status &lt;span class="c1">#查看crontab服务状态&lt;/span>
service crond start &lt;span class="c1">#手动启动crontab服务&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>开机开启&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">ntsysv &lt;span class="c1">#查看crontab服务是否已设置为开机启动&lt;/span>
chkconfig –level &lt;span class="m">35&lt;/span> crond on &lt;span class="c1">#加入开机自动启动&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="命令详解">命令详解&lt;/h4>
&lt;ol>
&lt;li>命令格式：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">crontab &lt;span class="o">[&lt;/span>-u user&lt;span class="o">]&lt;/span> file
crontab &lt;span class="o">[&lt;/span>-u user&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span> -e &lt;span class="p">|&lt;/span> -l &lt;span class="p">|&lt;/span> -r &lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>命令功能：&lt;br />
通过&lt;code>crontab&lt;/code>命令，我们可以在固定的间隔时间执行指定的系统指令或&lt;code>shell script&lt;/code>脚本。时间间隔的单位可以是分钟、小时、日、月、周及以上的任意组合，这个命令非常适合周期性的日志分析或数据备份等工作。&lt;/li>
&lt;li>命令参数：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">-u user &lt;span class="c1">#用来设定某个用户的crontab服务，例如，“-u ixdba”表示设定ixdba用户的crontab服务，此参数一般有root用户来运行。&lt;/span>
file &lt;span class="c1">#file是命令文件的名字,表示将file做为crontab的任务列表文件并载入crontab。如果在命令行中没有指定这个文件，crontab命令将接受标准输入（键盘）上键入的命令，并将它们载入crontab。&lt;/span>
-e &lt;span class="c1">#编辑某个用户的crontab文件内容。如果不指定用户，则表示编辑当前用户的crontab文件。&lt;/span>
-l &lt;span class="c1">#显示某个用户的crontab文件内容，如果不指定用户，则表示显示当前用户的crontab文件内容。&lt;/span>
-r &lt;span class="c1">#从/var/spool/cron目录中删除某个用户的crontab文件，如果不指定用户，则默认删除当前用户的crontab文件。&lt;/span>
-i &lt;span class="c1">#在删除用户的crontab文件时给确认提示。&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>常用方法：&lt;br />
①创建一个新的crontab文件：在考虑向cron进程提交一个crontab文件之前，首先要做的一件事情就是设置环境变量&lt;code>EDITOR&lt;/code>，cron进程由此来确定使用哪个编辑器编辑crontab文件。编辑&lt;code>HOME&lt;/code>目录下的&lt;code>.profile&lt;/code>文件，在其中加入以下一行：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="nv">EDITOR&lt;/span>&lt;span class="o">=&lt;/span>vi&lt;span class="p">;&lt;/span> &lt;span class="nb">export&lt;/span> EDITOR
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后保存并退出。创建一个名为&lt;code>&amp;lt;user&amp;gt;cron&lt;/code>的文件，其中&lt;code>&amp;lt;user&amp;gt;&lt;/code>是用户名，例如&lt;code>lincron&lt;/code>。在该文件中加入以下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># (put your own initials here)echo the date to the console every&lt;/span>
&lt;span class="c1"># 15minutes between 6pm and 6am&lt;/span>
0,15,30,45 18-06 * * * /bin/echo ‘date’ &amp;gt; /dev/console
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>保存并退出，确信前面5个域用空格分隔。在上面的例子中，系统将每隔&lt;code>15&lt;/code>分钟向控制台输出一次当前时间。如果系统崩溃或挂起，从最后所显示的时间就可以一眼看出系统是什么时间停止工作的。在有些系统中，用tty1来表示控制台，可以根据实际情况对上面的例子进行相应的修改。为了提交你刚刚创建的crontab文件，可以把这个新创建的文件作为cron命令的参数：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">crontab lincron
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>现在该文件已经提交给cron进程，它将每隔&lt;code>15&lt;/code>分钟运行一次。同时，新创建文件的一个副本已经被放在&lt;code>/var/spool/cron&lt;/code>目录中，文件名就是用户名(即&lt;code>lin&lt;/code>)。&lt;br />
②列出crontab文件：为了列出crontab文件，可以用：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">crontab -l
0,15,30,45,18-06 * * * /bin/echo &lt;span class="sb">`&lt;/span>date&lt;span class="sb">`&lt;/span> &amp;gt; dev/tty1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>你将会看到和上面类似的内容，可以使用这种方法在&lt;code>HOME&lt;/code>目录中对crontab文件做一备份：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">crontab -l &amp;gt; /HOME/mycron
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这样，一旦不小心误删了crontab文件，可以用上一节所讲述的方法迅速恢复。&lt;br />
③编辑crontab文件：如果希望添加、删除或编辑crontab文件中的条目，编辑crontab文件，相应的命令为：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">crontab -e
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以像使用&lt;code>vi&lt;/code>编辑其他任何文件那样修改crontab文件并退出。如果修改了某些条目或添加了新的条目，那么在保存该文件时，&lt;code>cron&lt;/code>会对其进行必要的完整性检查。如果其中的某个域出现了超出允许范围的值便会提示你。在编辑crontab文件时，没准会加入新的条目。例如，加入下面的一条：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># DT:delete core files,at 3.30am on 1,7,14,21,26,26 days of each month&lt;/span>
&lt;span class="m">30&lt;/span> &lt;span class="m">3&lt;/span> 1,7,14,21,26 * * /bin/find -name “core’ -exec rm &lt;span class="o">{}&lt;/span> &lt;span class="se">\;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>现在保存并退出。最好在crontab文件的每一个条目之上加入一条注释，这样就可以知道它的功能、运行时间，更为重要的是，知道这是哪位用户的作业。使用&lt;code>crontab -l&lt;/code>命令列出它的全部信息：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">crontab -l
&lt;span class="c1"># (crondave installed on Tue May 4 13:07:43 1999)&lt;/span>
&lt;span class="c1"># DT:ech the date to the console every 30 minites&lt;/span>
0,15,30,45 18-06 * * * /bin/echo &lt;span class="sb">`&lt;/span>date&lt;span class="sb">`&lt;/span> &amp;gt; /dev/tty1
&lt;span class="c1"># DT:delete core files,at 3.30am on 1,7,14,21,26,26 days of each month&lt;/span>
&lt;span class="m">30&lt;/span> &lt;span class="m">3&lt;/span> 1,7,14,21,26 * * /bin/find -name “core’ -exec rm &lt;span class="o">{}&lt;/span> &lt;span class="se">\;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>④删除crontab文件：要删除crontab文件，可以用：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">crontab -r
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>⑤恢复丢失的crontab文件：如果不小心误删了crontab文件，假设&lt;code>HOME&lt;/code>目录下还有一个备份，那么可以将其拷贝到&lt;code>/var/spool/cron/&amp;lt;username&amp;gt;&lt;/code>，其中&lt;code>&amp;lt;username&amp;gt;&lt;/code>是用户名。如果由于权限问题无法完成拷贝，可以用：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">crontab &amp;lt;filename&amp;gt;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中，&lt;code>&amp;lt;filename&amp;gt;&lt;/code>是你在&lt;code>HOME&lt;/code>目录中副本的文件名，建议留存备份。&lt;/p>
&lt;h2 id="结束">结束&lt;/h2>
&lt;p>本着手册即查即用的原则，这篇博文写的十分简要，很少说明部分，直接贴出操作，本文将根据自身的经历持续补充。&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr />
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://www.jianshu.com/p/59f759207862">Linux思维导图整理&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;a href="https://i.linuxtoy.org/files/pdf/fwunixref.pdf">Unix/Linux 命令参考&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>&lt;a href="https://www.jianshu.com/p/234b196791fb">关于Linux软件源&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>&lt;a href="https://www.runoob.com/linux/linux-vim.html">Linux vi/vim&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:5" role="doc-endnote">
&lt;p>&lt;a href="https://www.timelate.com/archives/enable-ssh-root-login.html">Ubuntu 18.04 使用root 帐号登录ssh并修改ssh端口号&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:5" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:6" role="doc-endnote">
&lt;p>&lt;a href="https://blog.csdn.net/boonya/article/details/77949438">Ubuntu终端命令查看端口占用及关闭&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:6" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:7" role="doc-endnote">
&lt;p>&lt;a href="https://wzfou.com/vps-ceping-gongju/">VPS主机性能和速度测试&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:7" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:8" role="doc-endnote">
&lt;p>&lt;a href="https://www.cnblogs.com/lomper/p/7053694.html">SSH 远程关闭导致程序中断&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:8" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:9" role="doc-endnote">
&lt;p>&lt;a href="https://blog.csdn.net/u013214212/article/details/81540840">在新安装的Centos中安装python3.7 解决pip和yum问题&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:9" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:10" role="doc-endnote">
&lt;p>&lt;a href="http://www.vpswe.com/linux/219.html">crontab命令详解 含启动/重启/停止&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:10" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:11" role="doc-endnote">
&lt;p>系统周期性所要执行的工作，比如写缓存数据到硬盘、日志清理等。 &lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:11" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:12" role="doc-endnote">
&lt;p>用户定期要执行的工作，比如用户数据备份、定时邮件提醒等。 &lt;a href="https://linwhitehat.github.io/posts/2020/06/16/linux%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:12" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description><category domain="https://linwhitehat.github.io/categories/handbook/">Handbook</category><category domain="https://linwhitehat.github.io/categories/os/">OS</category><category domain="https://linwhitehat.github.io/categories/linux/">Linux</category><category domain="https://linwhitehat.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/">操作系统</category></item><item><title>玩转树莓派（二）配置V2ray客户端及透明网关</title><link>https://linwhitehat.github.io/posts/2020/03/24/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BA%8C/</link><guid isPermaLink="true">https://linwhitehat.github.io/posts/2020/03/24/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BA%8C/</guid><pubDate>Tue, 24 Mar 2020 18:26:17 +0000</pubDate><author>eric_lin_cn@outlook.com (L1n)</author><copyright>本文采用 [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh) 许可协议，转载请注明出处。</copyright><description>&lt;p>树莓派4B即目前最新款树莓派，其功能基本和一台PC机无异，但是入手一台树莓派地初衷各有差异，而我是希望它代替现有市场中大量受限的路由器，因此树莓派到手第二天，我便开始让它上岗工作，成为家庭网络中的透明网关。&lt;/p>
&lt;!-- more -->
&lt;h2 id="坎坷历程">坎坷历程&lt;/h2>
&lt;h3 id="ss-redir">ss-redir&lt;/h3>
&lt;p>ss作为曾经的传说，至今还有大量用户在使用其服务作为fq代理实现科学上网，当然我也还保留着ss服务，同时手中有着之前的搭建教程以及有先前一直使用的虚拟机方法还稳健运行，懒惰的我便开始照猫画虎进行ss透明网关搭建。其中出现很多问题，尤其是进行IP转发、分流以及dns管理的依赖包安装过程可能会因为依赖性的版本限制产生一些麻烦，尤其是dnsmasq安装之后带来的树莓派无法上网问题，即使配置dns规则之后还是存在，但是宿主机可以正常上网。加之其他各种繁琐的问题，最终我选择放弃ss的搭建方式，耗时约莫5小时，&lt;del>无奈而终&lt;/del>。&lt;/p>
&lt;h3 id="v2">v2&lt;/h3>
&lt;p>v2也是去年我才开始使用，相比ss，v2的诞生就已经具备优势。而本次搭建透明网关才让我体会到v2更大的优势是其自身配置的丰富性能减少许多繁琐的依赖包处理，这也让我在短短半小时内完成树莓派上透明网关的搭建，终于开始享受局域网内的&lt;del>自由&lt;/del>时光。&lt;/p>
&lt;h3 id="注意事项">注意事项&lt;/h3>
&lt;ol>
&lt;li>v2搭建透明网关前先作为客户端进行配置测试，见&lt;a href="https://linwhitehat.github.io/posts/2020/03/24/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BA%8C/#v2_client">v2搭建及测试&lt;/a>；&lt;/li>
&lt;li>配置只改动需要修改的出口setting部分；&lt;/li>
&lt;li>Linux下开启全局代理并不能代替所有方式，涉及终端代理及浏览器代理还需自行设置，满足自身实际需求。&lt;/li>
&lt;/ol>
&lt;h2 id="透明网关搭建">透明网关搭建&lt;/h2>
&lt;h3 id="span-idv2_clientv2搭建及测试span">&lt;span id="v2_client">v2搭建及测试&lt;/span>&lt;/h3>
&lt;h4 id="安装v2">安装v2&lt;/h4>
&lt;ol>
&lt;li>官方一键脚本&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo bash &amp;lt;&lt;span class="o">(&lt;/span>curl -L -s https://install.direct/go.sh&lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>下载脚本安装，其实与第1种方法一样&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">wget https://install.direct/go.sh
sudo chmod +x go.sh
sudo bash go.sh
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>离线安装，在网络不佳或不合适的情况下使用本地安装&lt;/li>
&lt;/ol>
&lt;p>在第2步中下载 &lt;code>go.sh&lt;/code> 同时在&lt;a href="https://github.com/v2ray/v2ray-core/releases">v2ray-core-releases&lt;/a>下载 &lt;code>v2ray-linux-arm.zip&lt;/code> ，如果树莓派中网络不佳可以在自己的PC机下载完之后迁移文件到树莓派中。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">wget -O v2ray_install.sh https://install.direct/go.sh
chmod +x v2ray_install.sh
sudo ./v2ray_install.sh --local v2ray-linux-arm.zip
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="配置v2">配置v2&lt;/h4>
&lt;ol>
&lt;li>后续操作默认切换到 root 权限下，填写v2的配置json。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo su root
cat &amp;gt; /etc/v2ray/config.json &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;span class="s">{
&lt;/span>&lt;span class="s"> &amp;#34;log&amp;#34;: {
&lt;/span>&lt;span class="s"> &amp;#34;loglevel&amp;#34;: &amp;#34;warning&amp;#34;
&lt;/span>&lt;span class="s"> },
&lt;/span>&lt;span class="s"> &amp;#34;inbounds&amp;#34;: [
&lt;/span>&lt;span class="s"> {
&lt;/span>&lt;span class="s"> &amp;#34;tag&amp;#34;: &amp;#34;proxy&amp;#34;,
&lt;/span>&lt;span class="s"> &amp;#34;port&amp;#34;: 1090, // 监听端口
&lt;/span>&lt;span class="s"> &amp;#34;listen&amp;#34;: &amp;#34;127.0.0.1&amp;#34;,
&lt;/span>&lt;span class="s"> &amp;#34;protocol&amp;#34;: &amp;#34;socks&amp;#34;, // 入口协议为 SOCKS 5
&lt;/span>&lt;span class="s"> &amp;#34;sniffing&amp;#34;: {
&lt;/span>&lt;span class="s"> &amp;#34;enabled&amp;#34;: true,
&lt;/span>&lt;span class="s"> &amp;#34;destOverride&amp;#34;: [
&lt;/span>&lt;span class="s"> &amp;#34;http&amp;#34;,
&lt;/span>&lt;span class="s"> &amp;#34;tls&amp;#34;
&lt;/span>&lt;span class="s"> ]
&lt;/span>&lt;span class="s"> },
&lt;/span>&lt;span class="s"> &amp;#34;settings&amp;#34;: {
&lt;/span>&lt;span class="s"> &amp;#34;auth&amp;#34;: &amp;#34;noauth&amp;#34;, //socks的认证设置，noauth 代表不认证，由于 socks 通常在客户端使用，所以这里不认证
&lt;/span>&lt;span class="s"> &amp;#34;udp&amp;#34;: true
&lt;/span>&lt;span class="s"> },
&lt;/span>&lt;span class="s"> &amp;#34;streamSettings&amp;#34;: null
&lt;/span>&lt;span class="s"> }
&lt;/span>&lt;span class="s"> ],
&lt;/span>&lt;span class="s"> &amp;#34;outbounds&amp;#34;: [
&lt;/span>&lt;span class="s"> {
&lt;/span>&lt;span class="s"> &amp;#34;tag&amp;#34;: &amp;#34;proxy&amp;#34;,
&lt;/span>&lt;span class="s"> &amp;#34;protocol&amp;#34;: &amp;#34;vmess&amp;#34;, // 出口协议
&lt;/span>&lt;span class="s"> &amp;#34;settings&amp;#34;: {
&lt;/span>&lt;span class="s"> &amp;#34;vnext&amp;#34;: [
&lt;/span>&lt;span class="s"> {
&lt;/span>&lt;span class="s"> &amp;#34;address&amp;#34;: &amp;#34;server.com&amp;#34;, // 服务器地址，请修改为你自己的服务器 IP 或域名
&lt;/span>&lt;span class="s"> &amp;#34;port&amp;#34;: 10010, // 服务器端口
&lt;/span>&lt;span class="s"> &amp;#34;users&amp;#34;: [
&lt;/span>&lt;span class="s"> {
&lt;/span>&lt;span class="s"> &amp;#34;id&amp;#34;: &amp;#34;b831381d-6324-4d53-ad4f-8cda48b30811&amp;#34;, // 用户 ID，必须与服务器端配置相同
&lt;/span>&lt;span class="s"> &amp;#34;alterId&amp;#34;: 32 // 此处的值也应当与服务器相同
&lt;/span>&lt;span class="s"> }
&lt;/span>&lt;span class="s"> ]
&lt;/span>&lt;span class="s"> }
&lt;/span>&lt;span class="s"> ]
&lt;/span>&lt;span class="s"> }
&lt;/span>&lt;span class="s"> }
&lt;/span>&lt;span class="s"> ]
&lt;/span>&lt;span class="s">}
&lt;/span>&lt;span class="s">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>对上述配置中的&lt;code>protocol&lt;/code>以及&lt;code>vnext&lt;/code> 下的 &lt;code>address&lt;/code> 、 &lt;code>port&lt;/code> 、 &lt;code>id&lt;/code> 、 &lt;code>alterId&lt;/code> 进行修改，这是必须修改的内容，其含义可参照注释，其他内容可不改变，如果懂得配置的话可以自行修改其余内容。&lt;/p>
&lt;ol start="2">
&lt;li>开启v2服务&lt;/li>
&lt;/ol>
&lt;p>下面命令中以 # 开头为注释内容。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">systemctl start v2ray
&lt;span class="c1"># 或使用 service v2ray start&lt;/span>
ps -ef&lt;span class="p">|&lt;/span>grep v2ray
&lt;span class="c1"># 或使用 service v2ray status&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>正常情况下，v2已经开始运行，查看状态结果如下图。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/v2-2-1.png" alt="v2正常运行配置" title="v2正常运行配置" />&lt;br />
&lt;img src="https://linwhitehat.github.io/images/v2-2-2.webp" alt="v2正常运行状态" title="v2正常运行状态" />&lt;/p>
&lt;h4 id="全局代理及测试">全局代理及测试&lt;/h4>
&lt;ol>
&lt;li>配置全局代理&lt;/li>
&lt;/ol>
&lt;p>编译安装 &lt;code>ProxyChains-NG&lt;/code> 进行全局代理设置。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git clone https://github.com/rofl0r/proxychains-ng.git
&lt;span class="nb">cd&lt;/span> /home/pi/proxychains-ng/
./configure &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> make &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> make install
&lt;span class="c1"># 设置及修改配置&lt;/span>
cp ./src/proxychains.conf /etc/proxychains.conf
vim /etc/proxychains.conf
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将&lt;code>proxychains.conf&lt;/code>配置文件的最后部分内容做以下修改：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="gd">- socks4 127.0.0.1 9050
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ socks5 127.0.0.1 1090
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>测试v2&lt;/li>
&lt;/ol>
&lt;p>通过 IP 以及 HTTP 响应码测试 v2 是否搭建成功。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 返回未代理前的本地公网地址&lt;/span>
curl ip.sb
&lt;span class="c1"># 返回代理过的v2服务器地址，表示搭建成功，若长时间无响应或返回非服务端 IP 地址的内容则表示搭建失败&lt;/span>
proxychains4 curl ip.sb
&lt;span class="c1"># 返回 200 或 301 表示搭建成功，若返回 000 或长时间无反应则表示搭建失败&lt;/span>
proxychains4 curl -so /dev/null -w &lt;span class="s2">&amp;#34;%{http_code}&amp;#34;&lt;/span> google.com -x socks5://127.0.0.1:1090
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="透明网关搭建-1">透明网关搭建&lt;/h3>
&lt;h4 id="v2配置透明代理的入站和dns分流">V2配置透明代理的入站和DNS分流&lt;/h4>
&lt;p>将以下配置内容覆盖原先的v2配置内容，即修改 &lt;code>/etc/v2ray/config.json&lt;/code> 下的内容。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;span class="lnt">147
&lt;/span>&lt;span class="lnt">148
&lt;/span>&lt;span class="lnt">149
&lt;/span>&lt;span class="lnt">150
&lt;/span>&lt;span class="lnt">151
&lt;/span>&lt;span class="lnt">152
&lt;/span>&lt;span class="lnt">153
&lt;/span>&lt;span class="lnt">154
&lt;/span>&lt;span class="lnt">155
&lt;/span>&lt;span class="lnt">156
&lt;/span>&lt;span class="lnt">157
&lt;/span>&lt;span class="lnt">158
&lt;/span>&lt;span class="lnt">159
&lt;/span>&lt;span class="lnt">160
&lt;/span>&lt;span class="lnt">161
&lt;/span>&lt;span class="lnt">162
&lt;/span>&lt;span class="lnt">163
&lt;/span>&lt;span class="lnt">164
&lt;/span>&lt;span class="lnt">165
&lt;/span>&lt;span class="lnt">166
&lt;/span>&lt;span class="lnt">167
&lt;/span>&lt;span class="lnt">168
&lt;/span>&lt;span class="lnt">169
&lt;/span>&lt;span class="lnt">170
&lt;/span>&lt;span class="lnt">171
&lt;/span>&lt;span class="lnt">172
&lt;/span>&lt;span class="lnt">173
&lt;/span>&lt;span class="lnt">174
&lt;/span>&lt;span class="lnt">175
&lt;/span>&lt;span class="lnt">176
&lt;/span>&lt;span class="lnt">177
&lt;/span>&lt;span class="lnt">178
&lt;/span>&lt;span class="lnt">179
&lt;/span>&lt;span class="lnt">180
&lt;/span>&lt;span class="lnt">181
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;inbounds&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;tag&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;transparent&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">12345&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;protocol&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;dokodemo-door&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;settings&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;network&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;tcp,udp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;followRedirect&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;sniffing&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;enabled&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;destOverride&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;http&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;tls&amp;#34;&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;streamSettings&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;sockopt&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;tproxy&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;tproxy&amp;#34;&lt;/span> &lt;span class="err">//&lt;/span> &lt;span class="err">透明代理使用&lt;/span> &lt;span class="err">TPROXY&lt;/span> &lt;span class="err">方式&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1090&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;protocol&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;socks&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">//&lt;/span> &lt;span class="err">入口协议为&lt;/span> &lt;span class="err">SOCKS&lt;/span> &lt;span class="err">5&lt;/span>
&lt;span class="nt">&amp;#34;sniffing&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;enabled&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;destOverride&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;http&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;tls&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;settings&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;auth&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;noauth&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;outbounds&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;tag&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;proxy&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;protocol&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;vmess&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">//&lt;/span> &lt;span class="err">代理服务器&lt;/span>
&lt;span class="nt">&amp;#34;settings&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;vnext&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;address&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;server.com&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">//&lt;/span> &lt;span class="err">服务器地址，请修改为你自己的服务器&lt;/span> &lt;span class="err">IP&lt;/span> &lt;span class="err">或域名&lt;/span>
&lt;span class="nt">&amp;#34;port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">10010&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">//&lt;/span> &lt;span class="err">服务器端口&lt;/span>
&lt;span class="nt">&amp;#34;users&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b831381d-6324-4d53-ad4f-8cda48b30811&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">//&lt;/span> &lt;span class="err">用户&lt;/span> &lt;span class="err">ID，必须与服务器端配置相同&lt;/span>
&lt;span class="nt">&amp;#34;alterId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">32&lt;/span> &lt;span class="err">//&lt;/span> &lt;span class="err">此处的值也应当与服务器相同&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="s2">&amp;#34;streamSettings&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;sockopt&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;mark&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">255&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="s2">&amp;#34;mux&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;enabled&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="err">}&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;tag&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;direct&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;protocol&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;freedom&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;settings&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;domainStrategy&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;UseIP&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;streamSettings&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;sockopt&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;mark&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">255&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;tag&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;block&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;protocol&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;blackhole&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;settings&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;response&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;http&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;tag&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;dns-out&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;protocol&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;dns&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;streamSettings&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;sockopt&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;mark&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">255&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;dns&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;servers&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;8.8.8.8&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">//&lt;/span> &lt;span class="err">非中中国大陆域名使用&lt;/span> &lt;span class="err">Google&lt;/span> &lt;span class="err">的&lt;/span> &lt;span class="err">DNS&lt;/span>
&lt;span class="s2">&amp;#34;1.1.1.1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">//&lt;/span> &lt;span class="err">非中中国大陆域名使用&lt;/span> &lt;span class="err">Cloudflare&lt;/span> &lt;span class="err">的&lt;/span> &lt;span class="err">DNS(备用)&lt;/span>
&lt;span class="s2">&amp;#34;114.114.114.114&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">//&lt;/span> &lt;span class="mi">114&lt;/span> &lt;span class="err">的&lt;/span> &lt;span class="err">DNS&lt;/span> &lt;span class="err">(备用)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;address&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;223.5.5.5&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">//中国大陆域名使用阿里的&lt;/span> &lt;span class="err">DNS&lt;/span>
&lt;span class="nt">&amp;#34;port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">53&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;domains&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;geosite:cn&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;ntp.org&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">//&lt;/span> &lt;span class="err">NTP&lt;/span> &lt;span class="err">服务器&lt;/span>
&lt;span class="s2">&amp;#34;$myserver.address&amp;#34;&lt;/span> &lt;span class="err">//&lt;/span> &lt;span class="err">此处改为你&lt;/span> &lt;span class="err">VPS&lt;/span> &lt;span class="err">的域名&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;routing&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;domainStrategy&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;IPOnDemand&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;rules&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span> &lt;span class="err">//&lt;/span> &lt;span class="err">劫持&lt;/span> &lt;span class="err">53&lt;/span> &lt;span class="err">端口&lt;/span> &lt;span class="err">UDP&lt;/span> &lt;span class="err">流量，使用&lt;/span> &lt;span class="err">V2Ray&lt;/span> &lt;span class="err">的&lt;/span> &lt;span class="err">DNS&lt;/span>
&lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;field&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;inboundTag&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;transparent&amp;#34;&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">53&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;network&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;udp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;outboundTag&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;dns-out&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="err">//&lt;/span> &lt;span class="err">直连&lt;/span> &lt;span class="err">123&lt;/span> &lt;span class="err">端口&lt;/span> &lt;span class="err">UDP&lt;/span> &lt;span class="err">流量（NTP&lt;/span> &lt;span class="err">协议）&lt;/span>
&lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;field&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;inboundTag&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;transparent&amp;#34;&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">123&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;network&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;udp&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;outboundTag&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;direct&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;field&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;ip&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="err">//&lt;/span> &lt;span class="err">设置&lt;/span> &lt;span class="err">DNS&lt;/span> &lt;span class="err">配置中的国内&lt;/span> &lt;span class="err">DNS&lt;/span> &lt;span class="err">服务器地址直连，以达到&lt;/span> &lt;span class="err">DNS&lt;/span> &lt;span class="err">分流目的&lt;/span>
&lt;span class="s2">&amp;#34;223.5.5.5&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;114.114.114.114&amp;#34;&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;outboundTag&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;direct&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;field&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;ip&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="err">//&lt;/span> &lt;span class="err">设置&lt;/span> &lt;span class="err">DNS&lt;/span> &lt;span class="err">配置中的国内&lt;/span> &lt;span class="err">DNS&lt;/span> &lt;span class="err">服务器地址走代理，以达到&lt;/span> &lt;span class="err">DNS&lt;/span> &lt;span class="err">分流目的&lt;/span>
&lt;span class="s2">&amp;#34;8.8.8.8&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;1.1.1.1&amp;#34;&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;outboundTag&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;proxy&amp;#34;&lt;/span> &lt;span class="err">//&lt;/span> &lt;span class="err">改为你自己代理的出站&lt;/span> &lt;span class="err">tag&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="err">//&lt;/span> &lt;span class="err">广告拦截&lt;/span>
&lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;field&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;domain&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;geosite:category-ads-all&amp;#34;&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;outboundTag&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;block&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="err">//&lt;/span> &lt;span class="err">BT&lt;/span> &lt;span class="err">流量直连&lt;/span>
&lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;field&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;protocol&amp;#34;&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="s2">&amp;#34;bittorrent&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;outboundTag&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;direct&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="err">//&lt;/span> &lt;span class="err">直连中国大陆主流网站&lt;/span> &lt;span class="err">ip&lt;/span> &lt;span class="err">和&lt;/span> &lt;span class="err">保留&lt;/span> &lt;span class="err">ip&lt;/span>
&lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;field&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;ip&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;geoip:private&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;geoip:cn&amp;#34;&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;outboundTag&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;direct&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="err">//&lt;/span> &lt;span class="err">直连中国大陆主流网站域名&lt;/span>
&lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;field&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;domain&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;geosite:cn&amp;#34;&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;outboundTag&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;direct&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>同样的，对上述配置中的&lt;code>protocol&lt;/code>以及 &lt;code>vnext&lt;/code> 下的 &lt;code>address&lt;/code> 、 &lt;code>port&lt;/code> 、 &lt;code>id&lt;/code> 、 &lt;code>alterId&lt;/code> 进行修改，这是必须修改的内容，其含义可参照注释，其他内容可不改变，如果懂得配置的话可以自行修改其余内容。&lt;/p>
&lt;h4 id="配置透明代理规则">配置透明代理规则&lt;/h4>
&lt;p>本文使用方法是tproxy，同时保证树莓派和其他客户端均能实现科学上网。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># 设置策略路由&lt;/span>
ip rule add fwmark &lt;span class="m">1&lt;/span> table &lt;span class="m">100&lt;/span>
ip route add &lt;span class="nb">local&lt;/span> 0.0.0.0/0 dev lo table &lt;span class="m">100&lt;/span>
&lt;span class="c1"># 代理局域网设备&lt;/span>
iptables -t mangle -N V2RAY
iptables -t mangle -A V2RAY -d 127.0.0.1/32 -j RETURN
iptables -t mangle -A V2RAY -d 224.0.0.0/4 -j RETURN
iptables -t mangle -A V2RAY -d 255.255.255.255/32 -j RETURN
&lt;span class="c1"># 直连局域网，避免 V2Ray 无法启动时无法连网关的 SSH，如果你配置的是其他网段（如 10.x.x.x 等），则修改成自己的网段&lt;/span>
iptables -t mangle -A V2RAY -d 192.168.0.0/16 -p tcp -j RETURN
&lt;span class="c1"># 直连局域网，53 端口除外（因为要使用 V2Ray 的 DNS 解析)&lt;/span>
iptables -t mangle -A V2RAY -d 192.168.0.0/16 -p udp ! --dport &lt;span class="m">53&lt;/span> -j RETURN
&lt;span class="c1"># 给 UDP 打标记 1，转发至 12345 端口&lt;/span>
iptables -t mangle -A V2RAY -p udp -j TPROXY --on-port &lt;span class="m">12345&lt;/span> --tproxy-mark &lt;span class="m">1&lt;/span>
&lt;span class="c1"># 给 TCP 打标记 1，转发至 12345 端口&lt;/span>
iptables -t mangle -A V2RAY -p tcp -j TPROXY --on-port &lt;span class="m">12345&lt;/span> --tproxy-mark &lt;span class="m">1&lt;/span>
&lt;span class="c1"># 应用规则&lt;/span>
iptables -t mangle -A PREROUTING -j V2RAY
&lt;span class="c1"># 代理网关本机&lt;/span>
iptables -t mangle -N V2RAY_MASK
iptables -t mangle -A V2RAY_MASK -d 224.0.0.0/4 -j RETURN
iptables -t mangle -A V2RAY_MASK -d 255.255.255.255/32 -j RETURN
&lt;span class="c1"># 直连局域网&lt;/span>
iptables -t mangle -A V2RAY_MASK -d 192.168.0.0/16 -p tcp -j RETURN
&lt;span class="c1"># 直连局域网，53 端口除外（因为要使用 V2Ray 的 DNS）&lt;/span>
iptables -t mangle -A V2RAY_MASK -d 192.168.0.0/16 -p udp ! --dport &lt;span class="m">53&lt;/span> -j RETURN
&lt;span class="c1"># 直连 SO_MARK 为 0xff 的流量(0xff 是 16 进制数，数值上等同与上面V2Ray 配置的 255)，此规则目的是避免代理本机(网关)流量出现回环问题&lt;/span>
iptables -t mangle -A V2RAY_MASK -j RETURN -m mark --mark 0xff
&lt;span class="c1"># 给 UDP 打标记,重路由&lt;/span>
iptables -t mangle -A V2RAY_MASK -p udp -j MARK --set-mark &lt;span class="m">1&lt;/span>
&lt;span class="c1"># 给 TCP 打标记，重路由&lt;/span>
iptables -t mangle -A V2RAY_MASK -p tcp -j MARK --set-mark &lt;span class="m">1&lt;/span>
&lt;span class="c1"># 应用规则&lt;/span>
iptables -t mangle -A OUTPUT -j V2RAY_MASK
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="设置开机服务自启">设置开机服务自启&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">mkdir -p /etc/iptables &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> iptables-save &amp;gt; /etc/iptables/rules.v4
&lt;span class="c1"># /etc/systemd/system/ 目录下创建一个名为 tproxyrule.service 的文件，写入以下内容&lt;/span>
&lt;span class="o">[&lt;/span>Unit&lt;span class="o">]&lt;/span>
&lt;span class="nv">Description&lt;/span>&lt;span class="o">=&lt;/span>Tproxy rule
&lt;span class="nv">After&lt;/span>&lt;span class="o">=&lt;/span>network.target
&lt;span class="nv">Wants&lt;/span>&lt;span class="o">=&lt;/span>network.target
&lt;span class="o">[&lt;/span>Service&lt;span class="o">]&lt;/span>
&lt;span class="nv">Type&lt;/span>&lt;span class="o">=&lt;/span>oneshot
&lt;span class="c1">#注意分号前后要有空格&lt;/span>
&lt;span class="nv">ExecStart&lt;/span>&lt;span class="o">=&lt;/span>/sbin/ip rule add fwmark &lt;span class="m">1&lt;/span> table &lt;span class="m">100&lt;/span> &lt;span class="p">;&lt;/span> /sbin/ip route add &lt;span class="nb">local&lt;/span> 0.0.0.0/0 dev lo table &lt;span class="m">100&lt;/span> &lt;span class="p">;&lt;/span> /sbin/iptables-restore /etc/iptables/rules.v4
&lt;span class="o">[&lt;/span>Install&lt;span class="o">]&lt;/span>
&lt;span class="nv">WantedBy&lt;/span>&lt;span class="o">=&lt;/span>multi-user.target
&lt;span class="c1"># 执行以下命令完成开机自启&lt;/span>
systemctl &lt;span class="nb">enable&lt;/span> tproxyrule
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="注意事项-1">注意事项&lt;/h3>
&lt;ol>
&lt;li>下载离线版v2时如果树莓派安装的是官方镜像系统则按照文中方法，如果自行安装了64位系统则需要下载 &lt;code>v2ray-linux-arm64.zip&lt;/code>；&lt;/li>
&lt;li>v2的客户端代理端口有点区别，就是socks下和HTTP下是相差一个数的，具体可自行体会；&lt;/li>
&lt;li>配置文件中需要注意树莓派所在网段以及本地代理地址。&lt;/li>
&lt;/ol>
&lt;h2 id="结束">结束&lt;/h2>
&lt;p>树莓派的使用还有许多可待拓展，本文只是介绍了目前最新的将树莓派作为透明网关的配置方法。&lt;/p></description><category domain="https://linwhitehat.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/">技术分享</category><category domain="https://linwhitehat.github.io/categories/%E6%A0%91%E8%8E%93%E6%B4%BE/">树莓派</category><category domain="https://linwhitehat.github.io/tags/%E9%80%8F%E6%98%8E%E7%BD%91%E5%85%B3/">透明网关</category><category domain="https://linwhitehat.github.io/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/">树莓派</category><category domain="https://linwhitehat.github.io/tags/raspberry/">raspberry</category><category domain="https://linwhitehat.github.io/tags/v2ray/">V2ray</category></item><item><title>玩转树莓派（一）</title><link>https://linwhitehat.github.io/posts/2020/02/29/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%80/</link><guid isPermaLink="true">https://linwhitehat.github.io/posts/2020/02/29/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%80/</guid><pubDate>Sat, 29 Feb 2020 18:26:17 +0000</pubDate><author>eric_lin_cn@outlook.com (L1n)</author><copyright>本文采用 [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh) 许可协议，转载请注明出处。</copyright><description>&lt;p>树莓派，Raspberry Pi，简写为 RasPi。&lt;a href="https://www.raspberrypi.org/">官网地址&lt;/a>&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Raspberry_Pi_B4.webp" alt="Raspberry Pi 4B" title="Raspberry Pi 4B" />&lt;/p>
&lt;!-- more -->
&lt;p>&lt;img src="https://linwhitehat.github.io/images/Raspberry_Pi_Logo.webp" alt="Raspberry Pi Logo" title="Raspberry Pi Logo" />&lt;/p>
&lt;h2 id="基本环境搭建">基本环境搭建&lt;/h2>
&lt;h3 id="树莓派简介">树莓派简介&lt;/h3>
&lt;p>树莓派每一代均使用博通（Broadcom）出产的ARM架构处理器，内存在256MB和4GB之间，主要使用 SD 卡或者 TF 卡作为存储媒体，配备 USB 接口、HDMI 的视频输出（支持声音输出）和 RCA 端子输出，内置 Ethernet/WLAN/Bluetooth 网络链接的方式（依据型号决定），并且可使用多种操作系统。产品线型号分为A型、B型、Zero 型和 ComputeModule 计算卡。树莓派基金会提供了基于ARM架构的 Debian、Arch Linux 和 Fedora 等的发行版系统，可以在官网&lt;sup id="fnref:1">&lt;a href="https://linwhitehat.github.io/posts/2020/02/29/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%80/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>下载。2019年6月底，树莓派基金会发布了树莓派4，处理器升级为1.5GHz的博通 BCM2711（四核Cortex-A72），增大了板载内存容量，为1/2/4GB，蓝牙升级为5.0，拥有2个USB2.0接口，2个USB3.0接口，电源也采用了较新的USB-C接口。&lt;sup id="fnref:2">&lt;a href="https://linwhitehat.github.io/posts/2020/02/29/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%80/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;/p>
&lt;h3 id="组装配件">组装配件&lt;/h3>
&lt;p>我使用的是最新版的树莓派4B&lt;sup id="fnref:3">&lt;a href="https://linwhitehat.github.io/posts/2020/02/29/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%80/#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>，相比以往的版本，最新版的变化还是喜人的，具体参数对比树莓派3B/3B+如下：&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Raspberry_4b.webp" alt="树莓派新旧版参数对比" title="树莓派新旧版参数对比" />&lt;br />
树莓派4B的主板模块功能分布如下图：&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Raspberry_functions.webp" alt="树莓派主板模块" title="树莓派主板模块" />&lt;/p>
&lt;h4 id="基础硬件">基础硬件&lt;/h4>
&lt;p>从淘宝购买到手后的树莓派官方版包含以下基础硬件（无数量说明的硬件均是1件）：&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox" /> 主板（已焊接CPU和内存）&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox" /> typr-c电源&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox" /> 红白外壳&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox" /> 散热片（5片）&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox" /> SD卡（16 GB）&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox" /> USB读卡器&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox" /> HDMI转micro HDMI线&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox" /> VGA转micro HDMI线&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox" /> 散热风扇&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox" /> 固定螺丝（8件）&lt;/li>
&lt;/ul>
&lt;h4 id="安装散热片">安装散热片&lt;/h4>
&lt;p>为了避免树莓派工作期间主板上硬件过热而损毁，需要给主板上的主要硬件进行散热处理。&lt;/p>
&lt;ol>
&lt;li>粘贴散热片&lt;br />
一共有5块大小不一的散热片，分别对CPU、内存、USB管理器、有线网卡、无线网卡进行粘贴，效果图如下：&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Raspberry_hot_piece.webp" alt="树莓派主板散热片粘贴" title="树莓派主板散热片粘贴" />&lt;/li>
&lt;li>安装散热风扇&lt;br />
安装风扇前后可以进行对比 CPU 的温度，使用&lt;code>/opt/vc/bin/vcgencmd measure_temp&lt;/code>可查看具体温度，如果温度不会过高，我个人不建议安装风扇，因为不加控制开关的风扇带来的噪声影响还是很明显的。&lt;br />
散热风扇通常有很多种，风扇的大小建议选择长宽30mm两线制的，一般红色线是正极，黑色线是负极。 所以在树莓派上使用时，红色线应插到GPIO针脚5V上，黑色线应插到针脚GND上，具体针脚位置可参照&lt;a href="https://www.yahboom.com/build.html?id=2678&amp;amp;cid=308">针脚定义&lt;/a>。风扇的LOGO标签是出风口，可以将风扇LOGO对着芯片吹风， 也可以将风扇LOGO朝外，这样也能将主板热量吸走排出去。效果图如下：&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Raspberry_hot_fans.webp" alt="树莓派主板散热风扇安装" title="树莓派主板散热风扇安装" />&lt;/li>
&lt;/ol>
&lt;h3 id="系统镜像及刻录系统">系统镜像及刻录系统&lt;/h3>
&lt;p>树莓派可支持的系统有多个，而初次使用树莓派还是使用官方提供的系统镜像，体验原汁原味的树莓派。从&lt;a href="https://www.raspberrypi.org/downloads/raspbian/">官网地址&lt;/a>下载 Raspbian 最新版系统镜像文件，当然也可以选择&lt;a href="https://www.raspberrypi.org/downloads/noobs/">NOOBS 镜像&lt;/a>，二者本质没有多大差异，官方提供两种方式自然都可以选择。&lt;/p>
&lt;h4 id="格式化sd卡">格式化SD卡&lt;/h4>
&lt;p>使用&lt;a href="https://www.sdcard.org/downloads/formatter/index.html">SD卡格式化软件&lt;/a>对SD卡进行格式化，打开软件后会自动选择SD卡盘符，选择 &lt;code>quick format&lt;/code>后点击 &lt;code>format&lt;/code> 即可完成格式化。不建议使用Windows自带的格式化工具，该工具格式化之后的SD卡性能不佳。&lt;/p>
&lt;h4 id="raspbian镜像安装">Raspbian镜像安装&lt;/h4>
&lt;p>格式化完成后，使用&lt;a href="https://sourceforge.net/projects/win32diskimager/files/latest/download">Win32DiskImager&lt;/a>进行系统镜像烧录。打开 &lt;code>Win32DiskImager&lt;/code> 并选择最新版系统镜像即 &lt;code>2020-02-13-raspbian-buster-full.img&lt;/code>，选择SD卡盘符，点击&lt;code>写入&lt;/code>，等待烧录完成，此时会弹出对话框显示写入成功之类。同时Windows系统会提示无法识别分区是否进行格式化，选择 &lt;code>取消&lt;/code> 即不要格式化，因为Linux系统分区已经写入到SD卡中，格式化将导致之前的烧录工作作废。弹出读卡器并取下SD卡，将SD卡插入树莓派的SD卡槽，SD卡的正面与树莓派主板的背面为同一方向。&lt;/p>
&lt;h4 id="noobs镜像安装">NOOBS镜像安装&lt;/h4>
&lt;p>格式化完成后，将 NOOBS 文件解压并将解压后的文件都移动到SD卡根目录下，弹出读卡器并取下SD卡，将SD卡插入树莓派的SD卡槽，SD卡的正面与树莓派主板的背面为同一方向。&lt;/p>
&lt;h3 id="启动树莓派及初始配置">启动树莓派及初始配置&lt;/h3>
&lt;ol>
&lt;li>启动树莓派&lt;br />
将type-c电源连接树莓派主板的type-c接口，将HDMI转micro HDMI线或VGA转micro HDMI线连接micro HDMI接口0（即靠近type-c电源接口的micro HDMI接口），注意接口方向，接反会导致接口磨损，将外接鼠标、键盘、显示器以及网线连接好，打开树莓派电源开关。&lt;/li>
&lt;li>初始配置&lt;br />
如果是按照 Raspbian 镜像安装的方法烧录的系统，则开机后将直接进入树莓派系统界面，若是按照 NOOBS 镜像安装系统，则启动后出现 NOOBS 界面，此时选择首选项即 &lt;code>Raspbian[RECOMMANDDED]&lt;/code> 然后点击安装（Install），等待安装完成重启即可进入系统界面。&lt;br />
第一次进入树莓派系统，会提示进行初始配置，根据提示设置地区、语言、新密码，然后WiFi设置和更新软件部分可以先跳过（skip），如果没有连接网线则可以设置连接WiFi。系统提示重启选择&lt;code>暂不重启&lt;/code>。&lt;/li>
&lt;/ol>
&lt;h3 id="远程登录树莓派">远程登录树莓派&lt;/h3>
&lt;p>初次配置完成树莓派后，为了之后方便管理树莓派，而不需要额外的外接设备，便要设置远程登录，最方便的是设置 SSH 服务，树莓派默认安装了该服务但是没开启。&lt;/p>
&lt;ol>
&lt;li>SSH&lt;br />
打开终端，输入 &lt;code>sudo raspi-config&lt;/code>，选择 &lt;code>5 Interfacing Options&lt;/code>，选择 &lt;code>SSH&lt;/code>，询问是否开启 SSH 服务选择&lt;code>是&lt;/code>，之后点击 &lt;code>OK&lt;/code>，开启服务后，选择 &lt;code>Finish&lt;/code> 退出设置界面。&lt;br />
为了保证远程登录时树莓派的IP地址是不变的，需要固定树莓派的IP地址即将其地址设置为静态IP，设置方法如下：&lt;br />
在终端下，输入 &lt;code>sudo nano /etc/dhcpcd.conf&lt;/code>，找到 &lt;code>Example static IP configuration&lt;/code>，做以下修改：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="gd">- # interface eth0
&lt;/span>&lt;span class="gd">- # static ip_address=192.168.1.20/24
&lt;/span>&lt;span class="gd">- # static routers=192.168.1.1
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ interface eth0 # 若是连接WiFi下，则改为 interface wlan 0
&lt;/span>&lt;span class="gi">+ static ip_address=192.168.1.20/24
&lt;/span>&lt;span class="gi">+ static routers=192.168.1.1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>远程桌面（xdrp）&lt;br />
在树莓派终端下执行 &lt;code>sudo apt-get install xrdp&lt;/code>，在Windows下可以登录树莓派的远程桌面，按下快捷键 &lt;code>win + R&lt;/code>输入&lt;code>mstsc&lt;/code>，输入树莓派的 IP 地址后点击连接，在认证界面输入树莓派的账号及密码即可登录远程桌面。如若树莓派操作系统安装xrdp后，在windows里用mstsc打开对应的IP地址，登录的过程中出现如下错误（IP地址，用户名，密码正确的情况下），则在树莓派终端执行 &lt;code>sudo apt-get install tightvncserver&lt;/code>然后重启树莓派即可。&lt;/li>
&lt;/ol>
&lt;h3 id="基础配置">基础配置&lt;/h3>
&lt;h4 id="启用root">启用root&lt;/h4>
&lt;p>初次登录树莓派的用户账号是pi，开启 root 用户便于更多需要高权限的操作。&lt;/p>
&lt;ol>
&lt;li>设置 root 账号密码&lt;br />
在树莓派终端执行&lt;code>sudo passwd root&lt;/code>，输入两次想设置的root密码即可/&lt;/li>
&lt;li>解锁root账号&lt;br />
树莓派终端执行&lt;code>sudo passwd --unlock root&lt;/code>即可。&lt;/li>
&lt;li>切换到root账号&lt;br />
在终端执行 &lt;code>su root&lt;/code>，输入root密码，切换到root用户下终端的起始符号会变更为 &lt;code>#&lt;/code>，在终端输入&lt;code>exit&lt;/code>便能切换回pi用户。&lt;/li>
&lt;/ol>
&lt;h4 id="添加中文输入法">添加中文输入法&lt;/h4>
&lt;p>树莓派默认使用英文输入法，想要在树莓派中输入中文可以安装中文字库以及中文输入法。&lt;/p>
&lt;ol>
&lt;li>安装中文字库&lt;br />
在树莓派终端输入 &lt;code>sudo apt-get install ttf-wqy-zenhei&lt;/code>。&lt;/li>
&lt;li>安装中文输入法&lt;br />
在树莓派终端输入 &lt;code>sudo apt-get install fcitx fcitx-googlepinyin fcitx-module-cloudpinyin fcitx-sunpinyin&lt;/code>。&lt;/li>
&lt;li>设置系统支持中文&lt;br />
在树莓派终端输入 &lt;code>sudo raspi-config&lt;/code>，选择 &lt;code>4 Localisation Options&lt;/code>，然后选择 &lt;code>I1 Change Locale&lt;/code>，之后一直按&lt;code>↓&lt;/code>按钮，直到出现 &lt;code>zh_CN GB2312``zh_CN.GB18030 GB18030``zh_CN.GBK GBK``zh_CN.UTF-8 UTF-8&lt;/code>四个选项，在四个选项前按下空格键即可选中同时显示&lt;code>*&lt;/code>，按下回车键确认，之后按&lt;code>↓&lt;/code>直到最后，选择zh_CN.UTF-8，按回车确认。退出设置界面，终端提示如下图即表示配置成功。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/Raspberry_zh.png" alt="系统安装成功" title="系统安装成功" />&lt;/li>
&lt;li>添加中文输入法&lt;br />
打开系统首选项，选择 &lt;code>Fcitx&lt;/code>，点击左下角的&lt;code>+&lt;/code>，将&lt;code>仅显示当前语言&lt;/code>的&lt;code>✔&lt;/code>去掉，下滑至最底部，选择Google拼音或者Sunpinyin并点击确认即可。切换中文按下快捷键 &lt;code>ctrl+space&lt;/code>，在中文输入法下可以按下快捷键 &lt;code>Ctrl+Shift&lt;/code>切换中英文输入法。&lt;/li>
&lt;/ol>
&lt;h4 id="更换软件源">更换软件源&lt;/h4>
&lt;p>树莓派官方系统raspbian自带的是国外的软件源，在国内使用经常会遇到无法下载软件的问题。通过修改系统配置&lt;code>sources.list&lt;/code>为国内软件源即可解决网络问题。&lt;/p>
&lt;ol>
&lt;li>清华源&lt;sup id="fnref:4">&lt;a href="https://linwhitehat.github.io/posts/2020/02/29/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%80/#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>&lt;br />
在终端输入 &lt;code>sudo nano /etc/apt/sources.list&lt;/code>，添加以下内容：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="gd">- 编辑 `/etc/apt/sources.list` 文件，删除或注释原文件所有内容，用以下内容取代：
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contrib
&lt;/span>&lt;span class="gi">+ deb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contrib
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在终端输入 &lt;code>sudo nano /etc/apt/sources.list.d/raspi.list&lt;/code>，添加以下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="gd">- # 编辑 `/etc/apt/sources.list.d/raspi.list` 文件，删除原文件所有内容，用以下内容取代：
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ deb http://mirrors.tuna.tsinghua.edu.cn/raspberrypi/ buster main ui
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>中科大源&lt;sup id="fnref:5">&lt;a href="https://linwhitehat.github.io/posts/2020/02/29/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%80/#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>&lt;br />
将上述源内容中 &lt;code>tuna.tsinghua.edu.cn/raspberrypi/&lt;/code> 改为 &lt;code>ustc.edu.cn/raspbian/&lt;/code>即可。&lt;/li>
&lt;/ol>
&lt;h3 id="树莓派led灯指示">树莓派LED灯指示&lt;/h3>
&lt;p>在使用树莓派过程中，由于一般不对树莓派安装过多外接设备，而是进行远程控制，因此LED灯的状态对判断树莓派的情况具有很大作用。此部分内容参照树莓派实验室对LED灯的解释[2]。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th align="center">LED&lt;/th>
&lt;th align="center">颜色&lt;/th>
&lt;th align="center">功能&lt;/th>
&lt;th align="center">正常状态&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td align="center">ACT&lt;/td>
&lt;td align="center">绿色&lt;/td>
&lt;td align="center">card status&lt;/td>
&lt;td align="center">闪烁:SD卡正在活动（类似电脑的硬盘灯）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center">PWR&lt;/td>
&lt;td align="center">红色&lt;/td>
&lt;td align="center">power&lt;/td>
&lt;td align="center">不闪烁:正常&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center">FDX&lt;/td>
&lt;td align="center">橙&lt;/td>
&lt;td align="center">full duplex&lt;/td>
&lt;td align="center">亮:全双工/不亮:半双工&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center">LNK&lt;/td>
&lt;td align="center">橙&lt;/td>
&lt;td align="center">link&lt;/td>
&lt;td align="center">亮:网络连接成功&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center">100&lt;/td>
&lt;td align="center">橙&lt;/td>
&lt;td align="center">100 Mbps&lt;/td>
&lt;td align="center">亮:100 Mbps/不亮:10 Mbps&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="注意事项">注意事项&lt;/h3>
&lt;ol>
&lt;li>禁止将树莓派的引脚短路，特别是VCC和GND，短路会造成芯片烧毁无法恢复。&lt;/li>
&lt;li>树莓派启动需要几十秒时间，打开电源后1分钟内不可以关闭电源，会影响树莓派的使用寿命。&lt;/li>
&lt;li>SD卡烧录系统完成时，系统会提示格式化，此时不需要格式化，点击取消即可。若点了格式化后树莓派会提示缺失文件，需要重新烧录系统。&lt;/li>
&lt;li>树莓派4B的HDMI接口变成两个micro-HDMI接口（hdmi0和hdmi1），可以接入两个显示器。如果只连接一个显示器，一定要插入hdmi0接口，也就是靠近type-C电源接口的那一个，才可以正常显示；如果只插入hdmi1接口，会出现显示器无法显示的情况。&lt;/li>
&lt;/ol>
&lt;h2 id="进阶配置">进阶配置&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://linwhitehat.github.io/Blog/2020/03/24/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%EF%BC%88%E4%BA%8C%EF%BC%89.html">树莓派搭建透明网关&lt;/a>&lt;/li>
&lt;li>&lt;a href="">定时邮件通知动态公网IP&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="结束">结束&lt;/h2>
&lt;p>树莓派目前已经具有很好的生态以及广泛的使用群体，也有不少技术论坛和官方技术博客，其本身可以实现很多功能需求，对于有需要和想玩树莓派的人可以逐渐深入接触，也许将带来奇妙的体验。&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr />
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://www.raspberrypi.org/">树莓派官网&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/29/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%80/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;a href="https://zh.wikipedia.org/wiki/%E6%A0%91%E8%8E%93%E6%B4%BE">树莓派-维基百科&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/29/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%80/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>&lt;a href="https://www.yahboom.com/study/raspberry4B">树莓派4B指南&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/29/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%80/#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>&lt;a href="https://mirror.tuna.tsinghua.edu.cn/help/raspbian/">清华源&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/29/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%80/#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:5" role="doc-endnote">
&lt;p>&lt;a href="http://mirrors.ustc.edu.cn/help/raspbian.html">中科大源&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/29/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%80/#fnref:5" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description><category domain="https://linwhitehat.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/">技术分享</category><category domain="https://linwhitehat.github.io/categories/%E6%A0%91%E8%8E%93%E6%B4%BE/">树莓派</category><category domain="https://linwhitehat.github.io/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/">树莓派</category><category domain="https://linwhitehat.github.io/tags/raspberry/">raspberry</category></item><item><title>HTML系列</title><link>https://linwhitehat.github.io/posts/2020/02/23/html%E7%B3%BB%E5%88%97/</link><guid isPermaLink="true">https://linwhitehat.github.io/posts/2020/02/23/html%E7%B3%BB%E5%88%97/</guid><pubDate>Sun, 23 Feb 2020 15:00:03 +0000</pubDate><author>eric_lin_cn@outlook.com (L1n)</author><copyright>本文采用 [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh) 许可协议，转载请注明出处。</copyright><description>&lt;p>这篇博文是在自定义博客页面中不断回顾和使用 HTML 知识后做的记录，以前学的前端知识尽管是基础知识，但是只是前端的皮毛，对 HTML5 以及脚本甚至最新的W3C认证的WEB语言&lt;code>WebAssembly&lt;/code>，因此本文依据博客制作完善过程的前端应用将对应知识进行记录分享。&lt;/p>
&lt;!-- more -->
&lt;h2 id="html5">HTML5&lt;/h2>
&lt;h3 id="网页背景音乐">网页背景音乐&lt;/h3>
&lt;p>传统的在 HTML 页面中存在多种方法能进行插入音频，除了浏览器中插入浏览器插件外，在 HTML 中可以使用&lt;code>embed&lt;/code>和&lt;code>object&lt;/code>标签&lt;sup id="fnref:1">&lt;a href="https://linwhitehat.github.io/posts/2020/02/23/html%E7%B3%BB%E5%88%97/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>。&lt;/p>
&lt;h4 id="embed元素">&lt;code>&amp;lt;embed&amp;gt;&lt;/code>元素&lt;/h4>
&lt;p>此标签元素可定义外部资源的容器，是 HTML5 标签。使用此标签，可以对外部资源进行引用并定义资源嵌入网页的容器，引入 MP3 资源如下:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">embed&lt;/span> &lt;span class="na">height&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;100&amp;#34;&lt;/span> &lt;span class="na">width&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;100&amp;#34;&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;song.mp3&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>具体使用效果可参考我的一篇博客中的教程说明，可参阅&lt;a href="https://linwhitehat.github.io/Blog/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96.html">博客主题优化-添加音乐&lt;/a>。&lt;/p>
&lt;h4 id="object元素">&lt;code>&amp;lt;object&amp;gt;&lt;/code>元素&lt;/h4>
&lt;p>此标签元素与&lt;code>embed&lt;/code>元素功能基本相同，引入 MP3 资源如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">object&lt;/span> &lt;span class="na">height&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;100&amp;#34;&lt;/span> &lt;span class="na">width&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;100&amp;#34;&lt;/span> &lt;span class="na">data&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;song.mp3&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">object&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="audio标签">&lt;code>&amp;lt;audio&amp;gt;&lt;/code>标签&lt;/h4>
&lt;p>本文推荐在 HTML 中使用此元素标签，此元素是一个 HTML5 元素，在所有浏览器中均有效&lt;sup id="fnref:2">&lt;a href="https://linwhitehat.github.io/posts/2020/02/23/html%E7%B3%BB%E5%88%97/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;sup id="fnref:3">&lt;a href="https://linwhitehat.github.io/posts/2020/02/23/html%E7%B3%BB%E5%88%97/#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>。示例如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">audio&lt;/span> &lt;span class="na">controls&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;controls&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">source&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;song.mp3&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
Your browser does not support this audio format.
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">audio&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>建议在标签之间写入文本，意在旧浏览器访问设置此标签的网站时能够显示文本内容。&lt;br />
此标签包含的属性如下，更多属性说明如在 Firefox 浏览器中的所有属性说明可参照&lt;sup id="fnref:4">&lt;a href="https://linwhitehat.github.io/posts/2020/02/23/html%E7%B3%BB%E5%88%97/#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>属性&lt;/th>
&lt;th align="center">值&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>autoplay&lt;/td>
&lt;td align="center">布尔值&lt;/td>
&lt;td>音频资源加载后自动播放，默认值为&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>controls&lt;/td>
&lt;td align="center">controls&lt;/td>
&lt;td>在页面中显示控制播放窗口&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>loop&lt;/td>
&lt;td align="center">布尔值&lt;/td>
&lt;td>音频资源循环播放&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>preload&lt;/td>
&lt;td align="center">&lt;code>none&lt;/code>/&lt;code>metadata&lt;/code>/&lt;code>auto&lt;/code>&lt;/td>
&lt;td>当所在页面加载时便进行资源加载&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>muted&lt;/td>
&lt;td align="center">muted&lt;/td>
&lt;td>音频设置静音&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>src&lt;/td>
&lt;td align="center">url&lt;/td>
&lt;td>音频资源的链接地址，可以使用&lt;code>&amp;lt;source&amp;gt;&lt;/code>标签设置&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>浏览器支持情况如下，更多浏览器支持情况参照浏览器兼容性&lt;sup id="fnref:4">&lt;a href="https://linwhitehat.github.io/posts/2020/02/23/html%E7%B3%BB%E5%88%97/#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>支持情况&lt;/th>
&lt;th align="center">IE&lt;/th>
&lt;th align="center">Edge&lt;/th>
&lt;th align="center">Firefox&lt;/th>
&lt;th align="center">Chrome&lt;/th>
&lt;th align="center">Safari&lt;/th>
&lt;th>Opera&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>audio标签&lt;/td>
&lt;td align="center">9+&lt;/td>
&lt;td align="center">12+&lt;/td>
&lt;td align="center">3.5+&lt;/td>
&lt;td align="center">3+&lt;/td>
&lt;td align="center">3.1+&lt;/td>
&lt;td>10.5+&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>buffered属性&lt;/td>
&lt;td align="center">unknown&lt;/td>
&lt;td align="center">yes&lt;/td>
&lt;td align="center">4+&lt;/td>
&lt;td align="center">unknown&lt;/td>
&lt;td align="center">unknown&lt;/td>
&lt;td>unknown&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>preload属性&lt;/td>
&lt;td align="center">9+&lt;/td>
&lt;td align="center">12+&lt;/td>
&lt;td align="center">4+&lt;/td>
&lt;td align="center">64+在属性&lt;code>metadata&lt;/code>中默认配置&lt;/td>
&lt;td align="center">3.1+&lt;/td>
&lt;td>51+在属性&lt;code>metadata&lt;/code>中默认配置&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>注意：&lt;/strong>&lt;br />
不同浏览器对支持播放的音频格式存在差异，如果要满足多种浏览器的音频格式支持，可以使用多个&lt;code>&amp;lt;source&amp;gt;&lt;/code>标签加载多种音频格式的资源。&lt;/p>
&lt;h2 id="结束">结束&lt;/h2>
&lt;p>本文博文将对前端中 HTML 的语法进行整理，整理进程以实际使用为参照，对新加入的语法及语言应用也会适当更新在博文中。&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr />
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://www.w3school.com.cn/html/html_audio.asp">W3school HTML 音频&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/23/html%E7%B3%BB%E5%88%97/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;a href="https://blog.csdn.net/ithomer/article/details/48622023">HTML5 标签audio添加网页背景音乐代码&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/23/html%E7%B3%BB%E5%88%97/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>&lt;a href="https://www.w3school.com.cn/tags/tag_audio.asp">HTML &lt;audio> 标签&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/23/html%E7%B3%BB%E5%88%97/#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/audio">audio&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/23/html%E7%B3%BB%E5%88%97/#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description><category domain="https://linwhitehat.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/">技术分享</category><category domain="https://linwhitehat.github.io/categories/%E5%89%8D%E7%AB%AF/">前端</category><category domain="https://linwhitehat.github.io/tags/html/">HTML</category></item><item><title>Git专栏系列</title><link>https://linwhitehat.github.io/posts/2020/02/17/git%E4%B8%93%E6%A0%8F/</link><guid isPermaLink="true">https://linwhitehat.github.io/posts/2020/02/17/git%E4%B8%93%E6%A0%8F/</guid><pubDate>Mon, 17 Feb 2020 18:26:17 +0000</pubDate><author>eric_lin_cn@outlook.com (L1n)</author><copyright>本文采用 [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh) 许可协议，转载请注明出处。</copyright><description>&lt;p>随着对 GitHub 和 Gitlab 使用频次增加，对版本管理和使用需求逐渐增加，学会基本的 Git 技能对于工科生已经是必备技巧了，但是还是要不断学会更加灵巧的使用，同时分布式管理版本需要有意识的做好版本信息说明，且分支、权限等设置对于 Gitlab 使用十分重要，一起学习Git吧。&lt;/p>
&lt;!-- more -->
&lt;h2 id="基础">基础&lt;/h2>
&lt;h3 id="存储">存储&lt;/h3>
&lt;p>Git 和其它版本控制系统（包括 Subversion 和近似工具）的主要差别在于 Git 对待数据的方法。 概念上来区分，其它大部分系统以文件变更列表的方式存储信息。 这类系统（CVS、Subversion、Perforce、Bazaar 等等）将它们保存的信息看作是一组基本文件和每个文件随时间逐步累积的差异。Git 不按照前述方式对待或保存数据。 反之，Git 更像是把数据看作是对小型文件系统的一组快照。 每次你提交更新，或在 Git 中保存项目状态时，它主要对当时的全部文件制作一个快照并保存这个快照的索引。 为了高效，如果文件没有修改，Git 不再重新存储该文件，而是只保留一个链接指向之前存储的文件。 Git 对待数据更像是一个 &lt;strong>快照流&lt;/strong>。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/git-1.png" alt="Git 数据存储处理方式" title="Git 数据存储处理方式" />&lt;/p>
&lt;h3 id="本地处理">本地处理&lt;/h3>
&lt;p>Git 中的绝大多数操作都只需要访问本地文件和资源，一般不需要来自网络上其它计算机的信息。如果要浏览项目的历史，Git 不需外连到服务器去获取历史，然后再显示出来——它只需直接从本地数据库中读取便能立即看到项目历史。 如果想查看当前版本与一个月前的版本之间引入的修改，Git 会查找到一个月前的文件做一次本地的差异计算，而不是由远程服务器处理或从远程服务器拉回旧版本文件再来本地处理。&lt;/p>
&lt;h3 id="状态">状态&lt;/h3>
&lt;p>Git 有三种状态，所有文件文件可能处于其中之一，包括：已提交（committed）、已修改（modified）和已暂存（staged）。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>status&lt;/th>
&lt;th align="center">committed&lt;/th>
&lt;th align="center">modified&lt;/th>
&lt;th>staged&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>说明&lt;/td>
&lt;td align="center">已提交表示数据已经安全的保存在本地数据库中&lt;/td>
&lt;td align="center">已修改表示修改了文件，但还没保存到数据库中&lt;/td>
&lt;td>已暂存表示对一个已修改文件的当前版本做了标记，使之包含在下次提交的快照中&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>由此引入 Git 项目的三个工作区域的概念：Git 仓库、工作目录以及暂存区域。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/git-2.webp" alt="工作目录、暂存区域以及 Git 仓库" title="工作目录、暂存区域以及 Git 仓库" />&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>工作区域&lt;/th>
&lt;th align="center">Git 仓库目录&lt;/th>
&lt;th align="center">工作目录&lt;/th>
&lt;th>暂存区域&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>说明&lt;/td>
&lt;td align="center">是 Git 用来保存项目的元数据和对象数据库的地方。这是 Git 中最重要的部分，从其它计算机克隆仓库时，拷贝的就是这里的数据。&lt;/td>
&lt;td align="center">是对项目的某个版本独立提取出来的内容。这些从 Git 仓库的压缩数据库中提取出来的文件，放在磁盘上供你使用或修改。&lt;/td>
&lt;td>是一个文件，保存了下次将提交的文件列表信息，一般在 Git 仓库目录中。有时候也被称作“索引”，不过一般说法还是叫暂存区域。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="git工作流程">Git工作流程&lt;/h3>
&lt;p>依据状态而言，主要是三个步骤：&lt;/p>
&lt;ol>
&lt;li>在工作目录中修改文件；&lt;/li>
&lt;li>暂存文件，将文件的快照放入暂存区域；&lt;/li>
&lt;li>提交更新，找到暂存区域的文件，将快照永久性存储到 Git 仓库目录。&lt;/li>
&lt;/ol>
&lt;h3 id="git使用">Git使用&lt;/h3>
&lt;p>Git的使用可以基于两种方式，一种是命令行，一种是GUI。其中GUI模式可以下载使用&lt;code>Github Desktop&lt;/code>、&lt;code>Sourcetree&lt;/code>、&lt;code>tortoiseGit&lt;/code>等，当前已经存在很多良好设计的GUI软件，可参照此处&lt;sup id="fnref:1">&lt;a href="https://linwhitehat.github.io/posts/2020/02/17/git%E4%B8%93%E6%A0%8F/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>。本文后续使用都将基于命令行方式，因为GUI方式基本较易掌握。&lt;/p>
&lt;h3 id="git安装与配置">Git安装与配置&lt;/h3>
&lt;p>由于更多使用是在Windows平台，因此相关博文内容也是基于Windows。&lt;/p>
&lt;h4 id="安装">安装&lt;/h4>
&lt;p>访问&lt;a href="https://git-scm.com/download/win">Downloading Git&lt;/a>进行下载，这是 Git for Windows 项目，也叫 msysGit。&lt;/p>
&lt;h4 id="配置">配置&lt;/h4>
&lt;p>这里不对 Git 的配置做过多叙述，只说明用户配置，因为这个是必须配置。使用下述语句进行配置用户名和邮箱：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git config --global user.name &lt;span class="s2">&amp;#34;Your Name&amp;#34;&lt;/span>
git config --global user.email youremail@example.com
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>需要说明的是，如果使用了 &lt;code>--global&lt;/code> 选项，那么该命令只需要运行一次，因为之后无论在此系统上做任何事情， Git 都会使用那些信息。 当针对特定项目使用不同的用户名称与邮件地址时，可以在那个项目目录下运行没有 &lt;code>--global&lt;/code> 选项的命令来配置。&lt;/p>
&lt;h3 id="基本使用">基本使用&lt;/h3>
&lt;p>当使用 Git 需要对相应命令进行查询时可以使用下述命令之一在使用手册中进行查询：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git &lt;span class="nb">help&lt;/span> &amp;lt;verb&amp;gt;
git &amp;lt;verb&amp;gt; --help
man git-&amp;lt;verb&amp;gt;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="获取-git-仓库">获取 Git 仓库&lt;/h4>
&lt;p>一般是对 GitHub 或 Gitlab 仓库进行获取，对于刚创建的仓库，一般内容是空的或只存在&lt;code>README&lt;/code>文件，若是空仓库，GitHub 或 Gitlab 会提示用户需要执行的操作对仓库进行初始化。此处叙述两种场景：&lt;/p>
&lt;ol>
&lt;li>在本地已存在的m目录中初始化仓库&lt;br />
在本地目录中打开&lt;code>git bash&lt;/code>，输入&lt;code>git init&lt;/code>，该命令将创建一个名为 &lt;code>.git&lt;/code> 的子目录，这个子目录含有初始化的 Git 仓库中所有的必须文件，这些文件是 Git 仓库的核心。当本地目录已经存在项目内容，可以之间输入以下命令进行追踪：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git add .
git commit -m &lt;span class="s1">&amp;#39;initial project version&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>克隆现有的远程仓库&lt;br />
使用下述命令进行仓库克隆到本地：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git clone &lt;span class="o">[&lt;/span>url&lt;span class="o">]&lt;/span>
git clone &lt;span class="o">[&lt;/span>url&lt;span class="o">]&lt;/span> localname &lt;span class="c1">#自定义克隆到本地的仓库名localname&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>克隆支持多种传输协议，包括&lt;code>https://&lt;/code>、&lt;code>git://&lt;/code>和SSH传输协议如&lt;code>user@server:path/to/repo.git&lt;/code>，常见是使用&lt;code>https://&lt;/code>。&lt;/p>
&lt;h4 id="提交到仓库">提交到仓库&lt;/h4>
&lt;p>一般提交仓库是添加内容、删除内容、添加说明、查看状态以及推送与拉取数据，其他更多详细内容可参照&lt;sup id="fnref:2">&lt;a href="https://linwhitehat.github.io/posts/2020/02/17/git%E4%B8%93%E6%A0%8F/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>。&lt;/p>
&lt;ol>
&lt;li>检查当前文件状态，&lt;code>git status&lt;/code>；&lt;/li>
&lt;li>跟踪即添加文件，&lt;code>git add filename&lt;/code>；&lt;/li>
&lt;li>提交文件说明，&lt;code>git commit -m &amp;quot;description&amp;quot;&lt;/code>；&lt;/li>
&lt;li>删除本地仓库内容，&lt;code>git rm file&lt;/code>或&lt;code>git rm -r folder&lt;/code>；&lt;/li>
&lt;li>推送数据到远程，&lt;code>git push&lt;/code>；&lt;/li>
&lt;li>拉取数据到本地，&lt;code>git pull&lt;/code>。&lt;/li>
&lt;/ol>
&lt;p>上述教程及图片来源&lt;sup id="fnref:2">&lt;a href="https://linwhitehat.github.io/posts/2020/02/17/git%E4%B8%93%E6%A0%8F/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>。使用 Git 部署 Gitlab 的流程可参照&lt;sup id="fnref:3">&lt;a href="https://linwhitehat.github.io/posts/2020/02/17/git%E4%B8%93%E6%A0%8F/#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>或查看下述&lt;a href="https://linwhitehat.github.io/posts/2020/02/17/git%E4%B8%93%E6%A0%8F/#Git-Connect">章节内容&lt;/a>。&lt;/p>
&lt;h2 id="span-idgit-connectgit连接githubspan">&lt;span id="Git-Connect">Git连接GitHub&lt;/span>&lt;/h2>
&lt;h3 id="ssh">SSH&lt;/h3>
&lt;p>使用 SSH 协议可以连接远程服务器和服务并向它们验证。 利用 SSH 密钥可以连接 GitHub，而无需在每次访问时提供用户名或密码。&lt;sup id="fnref:4">&lt;a href="https://linwhitehat.github.io/posts/2020/02/17/git%E4%B8%93%E6%A0%8F/#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>&lt;/p>
&lt;h3 id="检查ssh密钥">检查SSH密钥&lt;/h3>
&lt;p>本文以 Windows 为例，在生成SSH密钥前先检查本地是否已经存在密钥，避免覆盖而影响前述配置。步骤如下：&lt;/p>
&lt;ol>
&lt;li>打开&lt;code>git bash&lt;/code>；&lt;/li>
&lt;li>输入&lt;code>ls -al ~/.ssh&lt;/code>查看是否存在SSH密钥，如果有则会在终端中显示存在的密钥；&lt;/li>
&lt;li>检查目录列表以查看是否已经有 SSH 公钥。 默认情况下，公钥的文件名是以下之一：&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>id_rsa.pub&lt;/li>
&lt;li>id_ecdsa.pub&lt;/li>
&lt;li>id_ed25519.pub&lt;/li>
&lt;/ul>
&lt;h3 id="生成ssh密钥">生成SSH密钥&lt;/h3>
&lt;p>若当前不存在SSH密钥则需要生成。生成新 SSH 密钥以用于身份验证，然后将其添加到 ssh-agent。步骤如下:&lt;/p>
&lt;ol>
&lt;li>打开&lt;code>git bash&lt;/code>；&lt;/li>
&lt;li>输入以下内容创建以所提供的电子邮件地址为标签的新 SSH 密钥：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">ssh-keygen -t rsa -b &lt;span class="m">4096&lt;/span> -C &lt;span class="s2">&amp;#34;your_email@example.com&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>之后终端会显示：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&amp;gt; Generating public/private rsa key pair.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>提示“Enter a file in which to save the key（输入要保存密钥的文件）”时如下所示，按 Enter 键。 这将接受默认文件位置。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&amp;gt; Enter a file in which to save the key &lt;span class="o">(&lt;/span>/c/Users/you/.ssh/id_rsa&lt;span class="o">)&lt;/span>:&lt;span class="o">[&lt;/span>Press enter&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>在提示时输入安全密码，若不输入则密码为空，但是不影响生成密钥。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&amp;gt; Enter passphrase &lt;span class="o">(&lt;/span>empty &lt;span class="k">for&lt;/span> no passphrase&lt;span class="o">)&lt;/span>: &lt;span class="o">[&lt;/span>Type a passphrase&lt;span class="o">]&lt;/span>
&amp;gt; Enter same passphrase again: &lt;span class="o">[&lt;/span>Type passphrase again&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="将ssh密钥添加到ssh-agent">将SSH密钥添加到ssh-agent&lt;/h3>
&lt;p>如果已安装 &lt;a href="https://desktop.github.com/">GitHub Desktop&lt;/a>，可使用它克隆仓库，而无需处理 SSH 密钥。 它还附带 &lt;code>Git Bash&lt;/code> 工具，这是在 Windows 上运行 &lt;code>git&lt;/code> 命令的首选方法。&lt;br />
添加步骤如下：&lt;/p>
&lt;ol>
&lt;li>确保 ssh-agent 正在运行：&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>如果使用随 GitHub Desktop 一起安装的 Git Shell，则 ssh-agent 应该正在运行；&lt;/li>
&lt;li>如果使用的是其他终端提示符，例如 Git for Windows，可以根据“&lt;a href="https://help.github.com/cn/github/authenticating-to-github/working-with-ssh-key-passphrases">使用 SSH 密钥密码&lt;/a>”中的“自动启动 ssh-agent”说明进行操作，或者手动启动：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 在后台启动 ssh-agent&lt;/span>
&lt;span class="nb">eval&lt;/span> &lt;span class="k">$(&lt;/span>ssh-agent -s&lt;span class="k">)&lt;/span>
&amp;gt; Agent pid &lt;span class="m">59566&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>将 SSH 私钥添加到 ssh-agent。 如果创建了不同名称的密钥，或者要添加不同名称的现有密钥，请将命令中的 id_rsa 替换为对应私钥文件的名称：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">ssh-add ~/.ssh/id_rsa
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="添加-ssh密钥到github账号">添加 SSH密钥到GitHub账号&lt;/h3>
&lt;p>在新增 SSH 密钥到 GitHub 帐户后，便能使用 SSH 重新配置任何本地仓库。步骤如下：&lt;/p>
&lt;ol>
&lt;li>复制 SSH密钥&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">clip &amp;lt; ~/.ssh/id_rsa.pub
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>进入GitHub账号的Setting；&lt;/li>
&lt;li>在用户设置侧边栏中，单击 SSH and GPG keys（SSH 和 GPG 密钥）；&lt;/li>
&lt;li>单击 New SSH key（新 SSH 密钥）或 Add SSH key（添加 SSH 密钥）；&lt;/li>
&lt;li>在 &amp;quot;Title&amp;quot;（标题）字段中，为新密钥添加描述性标签；&lt;/li>
&lt;li>将密钥粘贴到 &amp;quot;Key&amp;quot;（密钥）字段，点击 Add SSH Key（添加SSH密钥）。&lt;/li>
&lt;/ol>
&lt;h3 id="本地ssh测试">本地SSH测试&lt;/h3>
&lt;p>测试连接时，需要使用密码（即之前创建的 SSH 密钥密码）验证此操作。测试步骤如下:&lt;/p>
&lt;ol>
&lt;li>打开&lt;code>git bash&lt;/code>；&lt;/li>
&lt;li>输入以下内容：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">ssh -T git@github.com
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>终端返回以下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&amp;gt; The authenticity of host &lt;span class="s1">&amp;#39;github.com (IP ADDRESS)&amp;#39;&lt;/span> can&lt;span class="err">&amp;#39;&lt;/span>t be established.
&amp;gt; RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
&amp;gt; Are you sure you want to &lt;span class="k">continue&lt;/span> connecting &lt;span class="o">(&lt;/span>yes/no&lt;span class="o">)&lt;/span>?
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>或以下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&amp;gt; The authenticity of host &lt;span class="s1">&amp;#39;github.com (IP ADDRESS)&amp;#39;&lt;/span> can&lt;span class="err">&amp;#39;&lt;/span>t be established.
&amp;gt; RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.
&amp;gt; Are you sure you want to &lt;span class="k">continue&lt;/span> connecting &lt;span class="o">(&lt;/span>yes/no&lt;span class="o">)&lt;/span>?
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>验证看到的消息中的指纹匹配步骤 2 中的消息之一，然后输入 &lt;code>yes&lt;/code>，测试成功则会看到下述内容：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&amp;gt; Hi username! You&lt;span class="err">&amp;#39;&lt;/span>ve successfully authenticated, but GitHub does not
&amp;gt; provide shell access.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>验证生成的消息包含用户名；&lt;/li>
&lt;li>若出现权限被拒绝等错误，请参照此处&lt;sup id="fnref:5">&lt;a href="https://linwhitehat.github.io/posts/2020/02/17/git%E4%B8%93%E6%A0%8F/#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>。&lt;/li>
&lt;/ol>
&lt;h2 id="特殊文件说明">特殊文件说明&lt;/h2>
&lt;h3 id="gitkeep">.gitkeep&lt;/h3>
&lt;p>这个文件之前我也没遇到过，直到最近准备在组织给建立的 Gitlab 项目上传内容时，准备将空项目&lt;code>pull&lt;/code>下来时，发现本地目录出现了&lt;code>.gitkeep&lt;/code>文件，由此产生好奇，进而查阅资料后发现它的作用是为了使一个空文件夹能够被正常同步，即当文件夹中没有任何内容时加入&lt;code>.gitkeep&lt;/code>使得文件夹能够被同步。&lt;/p>
&lt;h3 id="gitignore">.gitignore&lt;/h3>
&lt;p>这个文件可以自行在本地 Git 根目录下创建，用于设置需要忽略的文件，使得 Git 不会处理这部分文件。配置可参照&lt;sup id="fnref:6">&lt;a href="https://linwhitehat.github.io/posts/2020/02/17/git%E4%B8%93%E6%A0%8F/#fn:6" class="footnote-ref" role="doc-noteref">6&lt;/a>&lt;/sup>，需要忽略的文件，设置原则如下：&lt;/p>
&lt;ol>
&lt;li>忽略操作系统自动生成的文件，比如缩略图等；&lt;/li>
&lt;li>忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如Java编译产生的&lt;code>.class&lt;/code>文件；&lt;/li>
&lt;li>忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件，一般是博客配置涉及的源码内容。&lt;/li>
&lt;/ol>
&lt;h2 id="常见问题解决">常见问题&amp;amp;解决&lt;/h2>
&lt;h3 id="gitlab使用git-clonegitxxx被拒绝">Gitlab使用&lt;code>git clone@git.xxx&lt;/code>被拒绝&lt;/h3>
&lt;p>在第一次对 Gitlab 上面的项目进行&lt;code>clone&lt;/code>时发现服务器拒绝访问，且&lt;code>22&lt;/code>端口无法连接通信，意味着使用&lt;code>ssh&lt;/code>连接项目仓库时无法正常连接，发生这种情况可检查以下情况是否存在:&lt;/p>
&lt;ol>
&lt;li>Gitlab 账号是否导入&lt;code>SSH KEY&lt;/code>&lt;/li>
&lt;li>咨询所在 Gitlab 项目的组织管理员是否将&lt;code>22&lt;/code>端口关闭，以及确认权限分配情况&lt;/li>
&lt;/ol>
&lt;p>这种情况下，可以使用&lt;code>https&lt;/code>的访问方式进行项目管理，访问方式变化如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="gd">- git clone git@git.123.com:abc/test.git
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ git clone https://git.123.com/abc/test.git
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="多个-ssh-key-管理">多个 SSH KEY 管理&lt;/h3>
&lt;p>当同时使用 Github 和 Gitlab 时，一般是私人和办公的情况，此时使用的邮箱账号是不同的，而要使用 Git 进行项目管理就需要配置 SSH KEY，为了避免第二次生成 SSH KEY 时将原先的 SSH KEY 覆盖，在此记录一下解决方法。&lt;/p>
&lt;h4 id="已存在-github-再配置-gitlab">已存在 Github 再配置 Gitlab&lt;/h4>
&lt;p>一般个人会先拥有 Github，我也是先使用了 Github，因此经过了一次配置 SSH KEY，此时在&lt;code>git bash&lt;/code>查看本地&lt;code>~/.ssh&lt;/code>，如果存在&lt;code>id_rsa&lt;/code>则说明已经存在公钥，则按照下述步骤进行配置：&lt;/p>
&lt;ol>
&lt;li>第二个 SSH KEY生成（我是 Gitlab）&lt;br />
打开&lt;code>git bash&lt;/code>，执行以下命令，其中&lt;code>email&lt;/code>填写自己的邮箱地址：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">ssh-keygen -t rsa -C &lt;span class="s2">&amp;#34;email&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>出现以下信息时，将公钥名称做修改如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">Generating public/private rsa key pair.
Enter file in which to save the key &lt;span class="o">(&lt;/span>/c/Users/Yourname/.ssh/id_rsa&lt;span class="o">)&lt;/span>: /c/Users/Yourname/.ssh/id_rsa_gitlab
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中&lt;code>Yourname&lt;/code>即Windows下用户名，输入的内容即将默认信息中的&lt;code>id_rsa&lt;/code>进行命名修改，之后可以默认回车，也可以根据自身情况设置。&lt;br />
配置完成之后，查看&lt;code>~/.ssh&lt;/code>可以看到多出两个文件，且命名包括&lt;code>id_rsa_gitlab&lt;/code>即完成公钥生成。&lt;br />
2. 由于是在微软下使用的&lt;code>msysgit&lt;/code>，在&lt;code>git bash&lt;/code>中输入以下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">eval&lt;/span> &lt;span class="k">$(&lt;/span>ssh-agent -s&lt;span class="k">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果使用的是 Github 官方的bash工具，则输入&lt;code>ssh-agent -s&lt;/code>。&lt;br />
上述操作用于打开ssh-agent，否则会在添加私钥信息时报错&lt;code>Could not open a connection to your authentication agent&lt;/code>。&lt;br />
3. 添加私钥&lt;br />
在&lt;code>git bash&lt;/code>中输入以下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">ssh-add ~/.ssh/id_rsa
ssh-add ~/.ssh/id_rsa_gitlab
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中&lt;code>id_rsa&lt;/code>是我用于 Github 的密钥文件，若提示文件或目录不存在，则使用绝对地址。&lt;br />
4. 配置&lt;code>config&lt;/code>&lt;br />
在&lt;code>~/.ssh&lt;/code>下创建&lt;code>config&lt;/code>文件，添加下述内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="gi">+ # gitlab
&lt;/span>&lt;span class="gi">+ Host git.iboxpay.com //这里填公司的git网址
&lt;/span>&lt;span class="gi">+ HostName git.iboxpay.com //这里填公司的git网址
&lt;/span>&lt;span class="gi">+ PreferredAuthentications publickey
&lt;/span>&lt;span class="gi">+ IdentityFile ~/.ssh/id_rsa_gitlab
&lt;/span>&lt;span class="gi">+ User zhangjun
&lt;/span>&lt;span class="gi">&lt;/span>
&lt;span class="gi">+ # github
&lt;/span>&lt;span class="gi">+ Host github.com
&lt;/span>&lt;span class="gi">+ HostName github.com
&lt;/span>&lt;span class="gi">+ PreferredAuthentications publickey
&lt;/span>&lt;span class="gi">+ IdentityFile ~/.ssh/id_rsa_github
&lt;/span>&lt;span class="gi">+ User ZJsnowman
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="5">
&lt;li>在 Gitlab 添加公钥&lt;br />
配置完密钥管理，在 Gitlab 的设置中添加之前生成的 SSH KEY即可。&lt;/li>
&lt;/ol>
&lt;h4 id="配置完gitlab后github不能正常管理项目">配置完Gitlab后Github不能正常管理项目&lt;/h4>
&lt;p>当配置了双 SSH KEY后，对原先的Github项目进行版本管理，发现在&lt;code>push&lt;/code>的时候无法使用原先的认证信息进行远程连接，而在设置了 Gitlab 的用户信息之后（即配置&lt;code>git username / git email&lt;/code>）发现GitHub项目管理显示项目需要用户认证，此时我存在的情况是我将全局的用户信息配置进行重置，并单独为Gitlab项目建立局部的用户信息，可能将原先的配置用户信息删除，因此重新配置全局用户信息即可正常对GitHub项目管理控制，同时可修改&lt;code>config&lt;/code>内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="gi">+ # github
&lt;/span>&lt;span class="gi">+ # Host github.com
&lt;/span>&lt;span class="gi">+ # HostName github.com
&lt;/span>&lt;span class="gi">+ # PreferredAuthentications publickey
&lt;/span>&lt;span class="gi">+ # IdentityFile ~/.ssh/id_rsa_github
&lt;/span>&lt;span class="gi">+ # User ZJsnowman
&lt;/span>&lt;span class="gi">+ Host *
&lt;/span>&lt;span class="gi">+ PreferredAuthentications publickey,password
&lt;/span>&lt;span class="gi">+ IdentityFile ~/.ssh/id_rsa
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="结束">结束&lt;/h2>
&lt;p>本文是对 Git 的使用及本身遇到的一些问题及解决方法进行记录，希望能对遇到相似问题的朋友提供有用的内容。&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr />
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://www.zhihu.com/question/22932048">Git 有哪些好用的图形化客户端&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/17/git%E4%B8%93%E6%A0%8F/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;a href="https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%85%B3%E4%BA%8E%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6">git教程&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/17/git%E4%B8%93%E6%A0%8F/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>&lt;a href="https://www.jianshu.com/p/c91ea165eaa4">Gitlab创建新项目&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/17/git%E4%B8%93%E6%A0%8F/#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>&lt;a href="https://help.github.com/cn/github/authenticating-to-github/connecting-to-github-with-ssh">使用 SSH 连接到 GitHub&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/17/git%E4%B8%93%E6%A0%8F/#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:5" role="doc-endnote">
&lt;p>&lt;a href="https://help.github.com/cn/github/authenticating-to-github/error-permission-denied-publickey">错误：权限被拒绝（公钥）&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/17/git%E4%B8%93%E6%A0%8F/#fnref:5" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:6" role="doc-endnote">
&lt;p>&lt;a href="https://github.com/github/gitignore">gitignore&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/17/git%E4%B8%93%E6%A0%8F/#fnref:6" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description><category domain="https://linwhitehat.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/">技术分享</category><category domain="https://linwhitehat.github.io/categories/code/">Code</category><category domain="https://linwhitehat.github.io/tags/github/">GitHub</category><category domain="https://linwhitehat.github.io/tags/gitlab/">Gitlab</category><category domain="https://linwhitehat.github.io/tags/git/">Git</category></item><item><title>Markdown·博客写作</title><link>https://linwhitehat.github.io/posts/2020/02/17/markdown%E5%86%99%E4%BD%9C/</link><guid isPermaLink="true">https://linwhitehat.github.io/posts/2020/02/17/markdown%E5%86%99%E4%BD%9C/</guid><pubDate>Mon, 17 Feb 2020 00:26:17 +0000</pubDate><author>eric_lin_cn@outlook.com (L1n)</author><copyright>本文采用 [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh) 许可协议，转载请注明出处。</copyright><description>&lt;p>博客撰写使用的是&lt;code>Markdown&lt;/code>，一般博客搭建教程会推荐Hexo写作&lt;sup id="fnref:1">&lt;a href="https://linwhitehat.github.io/posts/2020/02/17/markdown%E5%86%99%E4%BD%9C/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>给初学者进行博客撰写，但其实&lt;code>Markdown&lt;/code>具有很多丰富的语法，同时支持Html语法，运用得当，将可以写出排版优美，内容丰富的文章，此篇博客默认读者了解Markdown的基本语法，但是也会提及，参照来自《Learning-Markdown》&lt;sup id="fnref:2">&lt;a href="https://linwhitehat.github.io/posts/2020/02/17/markdown%E5%86%99%E4%BD%9C/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/markdown_1.webp" alt="Markdown" title="Markdown" />&lt;/p>
&lt;!-- more -->
&lt;h2 id="关于markdown">关于Markdown&lt;/h2>
&lt;p>Markdown 是一种轻量级标记语言，创始人为约翰·格鲁伯（John Gruber）。它允许“使用易读易写的纯文本格式编写文档，然后转换成有效的 XHTML（或者 HTML）文档”。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。更多可参照&lt;a href="https://zh.wikipedia.org/wiki/Markdown">维基百科&lt;/a>。&lt;/p>
&lt;h3 id="选择-markdown">选择 Markdown&lt;/h3>
&lt;p>主要原因在于 Markdown 很适合用于编写文档、记录笔记、攥写文章，当然其他因素包括：&lt;/p>
&lt;ul>
&lt;li>它基于纯文本，方便修改和共享；&lt;/li>
&lt;li>几乎可以在所有的文本编辑器中编写；&lt;/li>
&lt;li>有众多编程语言的实现，以及应用的相关扩展；&lt;/li>
&lt;li>在 GitHub 等网站中有很好的应用；&lt;/li>
&lt;li>很容易转换为 HTML 文档或其他格式。&lt;/li>
&lt;/ul>
&lt;h3 id="兼容-html">兼容 HTML&lt;/h3>
&lt;p>Markdown 完全兼容 HTML 语法，可以直接在 Markdown 文档中插入 HTML 内容。&lt;/p>
&lt;h2 id="基础语法详解">基础语法详解&lt;/h2>
&lt;p>本文列述的语法是基于 John Gruber 定义的&lt;a href="https://daringfireball.net/projects/markdown/syntax">Markdown Syntax&lt;/a>，当然 Markdown 还有其他不同的编译解释语法，可以后续关注。在 Hexo 博客中解析语法不完全遵循此处的语法，但是本文列述的语法是基本语法，算是通用的，如果本地使用 MarkdownPad 编辑器，那么本文语法完全适用。&lt;/p>
&lt;h3 id="段落与换行">段落与换行&lt;/h3>
&lt;ol>
&lt;li>段落的前后必须是空行&lt;br />
空行指的是行内什么都没有，或者只有空白符（空格或制表符），相邻两行文本，如果中间没有空行 会显示在一行中（换行符被转换为空格）。&lt;/li>
&lt;li>段落内换行（&lt;code>&amp;lt;br&amp;gt;&lt;/code>）&lt;br />
可以在前一行的末尾加入至少两个空格，然后换行写其它的文字。&lt;/li>
&lt;li>Markdown 中的多数区块都需要在两个空行之间。&lt;/li>
&lt;/ol>
&lt;h3 id="标题">标题&lt;/h3>
&lt;p>标题样式有两种：&lt;/p>
&lt;ol>
&lt;li>Setext 形式&lt;br />
这种形式只支持&lt;code>H1&lt;/code>和&lt;code>H2&lt;/code>的标题样式，即使用&lt;code>=&lt;/code>和&lt;code>-&lt;/code>分别表示标题1和标题2，符号数量没有限制，原则以文本看起来舒服为主，使用如下:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">H1
====
H2
----
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>atx 形式&lt;br />
这种方式更为常用，即使用&lt;code>#&lt;/code>的数量对标题进行表示，数量的多少即代表标题的样式，如&lt;code>#&lt;/code>表示标题1，&lt;code>##&lt;/code>表示标题2，使用方式有两种种，可任选使用：&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>使用对称的 &lt;code>#&lt;/code> 括住标题文本，如&lt;code>## Title ##&lt;/code>；&lt;/li>
&lt;li>只在标题文本左侧使用&lt;code>#&lt;/code>，如&lt;code>## Tile&lt;/code>。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>注意&lt;/strong>&lt;br />
标题符号左侧不能出现空格，但空格可以在标题文本中使用。&lt;/p>
&lt;h3 id="引用">引用&lt;/h3>
&lt;p>要在文章中显示引用内容，可以在开头使用&lt;code>&amp;gt;&lt;/code>，则之后的文本都将被标记为引用，引用的方式如下：&lt;/p>
&lt;ol>
&lt;li>单行引用&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="k">&amp;gt; &lt;/span>&lt;span class="ge">引用内容
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>多行引用&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">&amp;gt;多行引用
&amp;gt;可以在每行前加 &lt;span class="sb">`&amp;gt;`&lt;/span>
&amp;gt;如果仅在第一行使用 &lt;span class="sb">`&amp;gt;`&lt;/span>
后面相邻的行即使省略 &lt;span class="sb">`&amp;gt;`&lt;/span>，也会变成引用内容
&amp;gt;如果引用内容需要换行，
&amp;gt;可以在行尾添加两个空格
&lt;span class="k">&amp;gt;
&lt;/span>&lt;span class="k">&lt;/span>&lt;span class="ge">&amp;gt;或者在引用内容中加一个空行
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>嵌套引用&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">&amp;gt;也可以在引用中
&amp;gt;&amp;gt;使用嵌套的引用
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="列表">列表&lt;/h3>
&lt;p>列表分为三种，分别是无序列表，有序列表和嵌套的列表。无序和有序的区别即列表显示内容前的符号是否是数字，嵌套列表即多种列表嵌套使用。列表具体使用如下:&lt;/p>
&lt;ol>
&lt;li>无序列表&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="k">*&lt;/span> 可以使用 &lt;span class="sb">`*`&lt;/span> 作为标记，文本需要间隔一个空格后输入；
+ 也可以使用 &lt;span class="sb">`+`&lt;/span>；
&lt;span class="k">-&lt;/span> 或者 &lt;span class="sb">`-`&lt;/span>。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>有序列表&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="k">1.&lt;/span> 有序列表以数字和 . 开始，同时 . 与文本内容之间同样需要一个空格；
&lt;span class="k">3.&lt;/span> 数字的序列并不会影响生成的列表序列；
&lt;span class="k">4.&lt;/span> 但仍然推荐按照自然顺序（1.2.3...）编写。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>嵌套列表&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="k">1.&lt;/span> 第一层
+ 1-1
+ 1-2
&lt;span class="k">2.&lt;/span> 无序列表和有序列表可以随意相互嵌套
&lt;span class="k">1.&lt;/span> 2-1
&lt;span class="k">2.&lt;/span> 2-2
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="代码">代码&lt;/h3>
&lt;p>在技术博客中，代码往往缺少不了，因为代码示例是最直接的展示，代码的表示主要有两种：&lt;/p>
&lt;ol>
&lt;li>代码块&lt;br />
使用缩进表示代码区域，代码块前后需要有至少一个空行，且每行代码前需要有至少一个 Tab 或四个空格；&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> // Tab开头
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Markdown&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> // 四个空格开头
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>代码区域也可以使用连续三个`即 ``` 来表示起止位置，即代码块的起始和结束位置，格式具体如下：&lt;/p>
&lt;pre>&lt;code>``` key
代码段
&lt;/code>&lt;/pre>&lt;pre>&lt;code>
2. 行内代码
在文本之间插入代码，当只需要展示少量变量或代码可以使用这种方式。通过单个 ` 在代码内容前后表示起止，插入行内代码（ 该符号即英文输入法下数字 1 键左侧的那个按键）。
3. 代码高亮[^8]
为了让代码部分看起来更加美观和符合语法高亮，markdown中有对应的语言标记，通过对代码块中的 `key` 进行标记替换便能实现高亮效果。参照表格如下：
|language|key|language|key|
|--------|:-:|--------|:-:|
|1C|1c|ActionScript|actionscript|
|Apache|apache|AppleScript|applescript|
|AsciiDoc|asciidoc|AspectJ|asciidoc|
|AutoHotkey|autohotkey|AVR Assembler|avrasm|
|Axapta|axapta|Bash|bash|
|BrainFuck|brainfuck|||
|Cap’n Proto|capnproto|Clojure REPL|clojure|
|Clojure|clojure|CMake|cmake|
|CoffeeScript|coffeescript|C++|cpp|
|C#|cs|CSS|css|
|D|d|Dart|d|
|Delphi|delphi|Diff|diff|
|Django|django|DOS.bat|dos|
|Dust|dust|Elixir|elixir|
|ERB(Embedded Ruby)|erb|Erlang REPL|erlang-repl|
|Erlang|erlang|FIX|fix|
|F#|fsharp|G-code(ISO 6983)|gcode|
|Gherkin|gherkin|GLSL|glsl|
|Go|go|Gradle|gradle|
|Groovy|groovy|Haml|haml|
|Handlebars|handlebars|Haskell|haskell|
|Haxe|haxe|HTML|html|
|HTTP|http|Ini file|ini|
|Java|java|JavaScript|javascript|
|JSON|json|Lasso|lasso|
|Less|less|Lisp|lisp|
|LiveCode|livecodeserver|LiveScript|livescript|
|Lua|lua|Makefile|makefile|
|Markdown|markdown|Mathematica|mathematica|
|Matlab|matlab|MEL (Maya Embedded Language)|mel|
|Mercury|mercury|Mizar|mizar|
|Monkey|monkey|Nginx|nginx|
|Nimrod|nimrod|Nix|nix|
|NSIS|nsis|Objective C|objectivec|
|OCaml|ocaml|Oxygene|oxygene|
|Parser 3|parser3|Perl|perl|
|PHP|php|PowerShell|powershell|
|Processing|processing|Python’s profiler output|profile|
|Protocol Buffers|protobuf|Puppet|puppet|
|Python|python|Q|q|
|R|r|RenderMan RIB|rib|
|Roboconf|roboconf|RenderMan RSL|rsl|
|Ruby|ruby|Oracle Rules Language|ruleslanguage|
|Rust|rust|Scala|scala|
|Scheme|scheme|Scilab|scilab|
|SCSS|scss|Smali|smali|
|SmallTalk|smalltalk|SML|sml|
|SQL|sql|Stata|stata|
|STEP Part21(ISO 10303-21)|step21|Stylus|stylus|
|Swift|swift|Tcl|tcl|
|Tex|tex|text|text/plain|
|Thrift|thrift|Twig|twig|
|TypeScript|typescript|Vala|vala|
|VB.NET|vbnet|VBScript in HTML|vbscript-html|
|VBScript|vbscript|Verilog|verilog|
|VHDL|vhdl|Vim Script|vim|
|Intel x86 Assembly|x86asm|XL|xl|
|XML|xml|YAML|yml|
### 分隔线
在一行中使用三个或更多的`*`、`-`或`_`表示分隔线，字符间可以存在空格但是不能存在其他字符，使用如下：
``` markdown
***
---
&lt;/code>&lt;/pre>&lt;h3 id="超链接">超链接&lt;/h3>
&lt;p>在攥写文档中对文本加上超链接，当阅读到相应内容想直接访问时可以点击文件即跳转访问。超链接的表示有三种方式：&lt;/p>
&lt;ol>
&lt;li>行内式&lt;br />
这是最常见的一种使用超链接的方式，使用格式为&lt;code>[link text](URL)&lt;/code>，其中 URL 可以是网络链接也可以是本地链接。&lt;/li>
&lt;li>参考式&lt;br />
参考式链接的写法相当于行内式拆分成两部分，并通过一个 &lt;em>识别符&lt;/em> 来连接两部分。参考式能尽量保持文章结构的简单，也方便统一管理 URL。这种方式表示如下:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>定义链接,&lt;code>[link text][识别符]&lt;/code>，识别符可以是字母、数字、空白或标点符号，识别符不区分大小写；&lt;/li>
&lt;li>定义链接内容，&lt;code>[识别符]: URL &amp;quot;title&amp;quot;&lt;/code>，URL可以使用 &lt;code>&amp;lt;&amp;gt;&lt;/code> 包括起来，title 可以使用 &amp;quot;&amp;quot;、''、() 包括；&lt;/li>
&lt;li>省略识别符也可以表示，定义链接及内容为&lt;code>[link text][]&lt;/code>，&lt;code>[link text]: URL &amp;quot;title&amp;quot;&lt;/code>。&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>自动链接&lt;br />
使用&lt;code>&amp;lt;&amp;gt;&lt;/code>包括的URL或邮箱地址会被自动转换为超链接。&lt;/li>
&lt;/ol>
&lt;h3 id="图片">图片&lt;/h3>
&lt;p>在文档中插入图片的方式与插入超链接的方式基本一致，语法的差异在于插入图片需要在最前面加一个感叹号&lt;code>!&lt;/code>，插入图片方式如下：&lt;/p>
&lt;ol>
&lt;li>行内式&lt;br />
插入图片格式为&lt;code>![pic text](URL &amp;quot;title&amp;quot;)&lt;/code>，方括号中的部分是图片的替代文本，括号中的 'title' 部分和超链接一样，是可选的。&lt;/li>
&lt;li>参考式&lt;br />
参考式插入图片格式为&lt;code>![pic text][识别符]&lt;/code>，&lt;code>[识别符]: URL &amp;quot;title&amp;quot;&lt;/code>。&lt;/li>
&lt;li>指定图片显示大小&lt;br />
在 Markdown 中对图片大小及位置进行设置需要使用 HTML 语法，使用&lt;code>&amp;lt;img /&amp;gt;&lt;/code>标签属性设定图片大小，示例如下：&lt;br />
&lt;code>&amp;lt;img src=&amp;quot;URL&amp;quot; alt=&amp;quot;Alt&amp;quot; title=&amp;quot;Tiltle&amp;quot; width=&amp;quot;50&amp;quot; height=&amp;quot;50&amp;quot; /&amp;gt;&lt;/code>&lt;/li>
&lt;/ol>
&lt;h3 id="强调">强调&lt;/h3>
&lt;p>通过不同文本样式对特殊的文本内容进行强调，这里讲述斜体和加粗的使用。&lt;/p>
&lt;ol>
&lt;li>斜体，使用&lt;code>*&lt;/code>成对表示，将需要斜体展示的文本放置在成对的&lt;code>*&lt;/code>之间；&lt;/li>
&lt;li>加粗，使用&lt;code>**&lt;/code>成对表示，将需要加粗展示的文本放置在成对的&lt;code>**&lt;/code>之间。&lt;/li>
&lt;/ol>
&lt;p>上述的符号也可以使用&lt;code>_&lt;/code>替换&lt;code>*&lt;/code>。&lt;/p>
&lt;h3 id="字符转义">字符转义&lt;/h3>
&lt;p>在 Markdown 中存在一些特殊字符，如前述的插入代码、斜体等，要正常显示字符且使其不表达特殊作用则需要对其进行转义。反斜线（&lt;code>\&lt;/code>）用于插入在 Markdown 语法中有特殊作用的字符。&lt;/p>
&lt;h2 id="扩展语法">扩展语法&lt;/h2>
&lt;h3 id="删除线">删除线&lt;/h3>
&lt;p>删除线一般很少用，当旧文档的内容存在失效时，为了显示新旧的差异，可以在失效内容上显示删除线，表示该内容已经不适用。&lt;br />
删除线使用即加上波浪线，表示为&lt;code>~~失效内容~~&lt;/code>，效果为：&lt;del>失效内容&lt;/del>。&lt;/p>
&lt;h3 id="代码块和语法高亮">代码块和语法高亮&lt;/h3>
&lt;p>根据前述介绍的插入代码块方法可以插入代码，但是要使文档代码更美观，使不同语言的代码能够显示对应语法高亮。此时需要使用 ``` 作为代码块区域标识，在起始的 ``` 之后的&lt;code>key&lt;/code>写上代码块对应的程序语言名称，如代码为 Javascript ，起始位置则写为：&lt;/p>
&lt;pre>&lt;code>``` javascript
code
&lt;/code>&lt;/pre>&lt;pre>&lt;code>
### 表格
表格可以用于展示多种比较的内容项，而表格的展示主要包括表头和单元格，使用`|`进行单元格分隔，使用`-`分隔表头和其他行，三行两列的表格表示如下：
&lt;/code>&lt;/pre>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>name&lt;/th>
&lt;th>age&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>LearnShare&lt;/td>
&lt;td>12&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Mike&lt;/td>
&lt;td>32&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;pre>&lt;code>
要使表格内容对齐，可以在第二行的分界处使用下述标记内容进行对齐：
- `:---` 代表左对齐
- `:--:` 代表居中对齐
- `---:` 代表右对齐
**注意**
在Hexo博客中加入表格时需要注意先空行，否则在解析时会出现错误，表格无法显示，同时也可以使用 HTML 语法进行表格添加，表格美化可参照[^3]。
### ToDo列表
ToDo列表也是 Task List，展示待做的事情。使用如下:
``` markdown
- [ ] Eat
- [x] Code
- [x] HTML
- [x] CSS
- [x] JavaScript
- [ ] Sleep
&lt;/code>&lt;/pre>&lt;h3 id="目录">目录&lt;/h3>
&lt;p>给攥写的文章加上目录内容，在文中需要显示文章目录结构的位置，独立一行写上&lt;code>[TOC]&lt;/code>。&lt;/p>
&lt;h3 id="插入emoji表情">插入Emoji表情&lt;/h3>
&lt;p>插入 Emoji 表情主要是在 GitHub 和博客中可能会用到，这里介绍三种方式如下，来源参照&lt;sup id="fnref:3">&lt;a href="https://linwhitehat.github.io/posts/2020/02/17/markdown%E5%86%99%E4%BD%9C/#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>。&lt;/p>
&lt;ol>
&lt;li>图片格式&lt;br />
使用 HTML 的图片标签&lt;code>&amp;lt;img&amp;gt;&lt;/code>插入图像，此方法需要知道 Emoji 表情的链接地址，使用效果如下：&lt;img src="https://www.webpagefx.com/tools/emoji-cheat-sheet/graphics/emojis/octocat.png" height="40" width="40" align="middle">&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>推荐 Emoji 源：&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>GitHub / GitHub_Icon：&lt;a href="https://blog.codecarrot.net/markdown-emoji-markup/">github markdown emoji markup&lt;/a>&lt;/li>
&lt;li>iemoji：&lt;a href="https://www.iemoji.com/">iEmoji&lt;/a>&lt;/li>
&lt;li>webpagefx：&lt;a href="https://www.webfx.com/tools/emoji-cheat-sheet/">WebFX EMOJI CHEAT SHEET&lt;/a>&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>源码粘贴&lt;br />
这种方式较为推荐，因为 Markdown 兼容 HTML 语法，因此 HTML 支持复制粘贴 Emoji 表情也可以直接在 Markdown 中使用。这里推荐&lt;a href="https://emojipedia.org/">emojipedia&lt;/a>和&lt;a href="https://www.emojicopy.com/">emojicopy&lt;/a>，可以搜索所需的表情然后点击&lt;code>copy&lt;/code>即可直接粘贴到文中相应位置。&lt;/li>
&lt;li>Unicode编码&lt;br />
Emoji表情在 Unicode 标准编码中已经集成，直接使用 Unicode 编码也能表示 Emoji 表情。在&lt;a href="http://unicode.org/emoji/charts/full-emoji-list.html">Emoji Charts&lt;/a>可查找每个 Emoji 表情的 Unicode 编码。&lt;/li>
&lt;/ol>
&lt;h2 id="博客写作">博客写作&lt;/h2>
&lt;p>在了解上述 Markdown 语法之后，基本能完成博客的撰写，这里介绍一些博客撰写的注意地方。博客的维护中重要的一项即博客文章，而文章有时候不一定能一次性写完，但是又不希望未写完就发布到博客中，也不希望一直存放在博客文件目录外，此时便可以使用&lt;code>草稿 draft&lt;/code>进行存放未完成的文章。博客写作并不是简单写完一篇文章发布就结束，一篇优质博文需要细心和耐心，对于需要注意的地方本文会进行记录分享。参照来源&lt;sup id="fnref:4">&lt;a href="https://linwhitehat.github.io/posts/2020/02/17/markdown%E5%86%99%E4%BD%9C/#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>。&lt;/p>
&lt;h3 id="新建文章">新建文章&lt;/h3>
&lt;p>创建文章有两种方式，一种是在&lt;code>git bash&lt;/code>下生成即&lt;code>hexo new [layout] &amp;lt;title&amp;gt;&lt;/code>，一种是手动新建即在文章目录文件夹中手动建立。&lt;/p>
&lt;h3 id="布局layout">布局（layout）&lt;/h3>
&lt;p>在 Hexo 中有三种默认布局即&lt;code>post&lt;/code>、&lt;code>page&lt;/code>和&lt;code>draft&lt;/code>，若不希望文章被 Hexo 布局渲染，可以在文章的 Front-Matter 中设置&lt;code>layout: false&lt;/code>。&lt;/p>
&lt;h3 id="草稿draft">草稿（draft）&lt;/h3>
&lt;p>草稿创建后一般存放在&lt;code>../hexo/source/_drafts&lt;/code>目录下，草稿默认不会发布到博客中显示。&lt;/p>
&lt;h3 id="front-matter">Front Matter&lt;/h3>
&lt;p>Front-Matter 即文章中最上面的设置区，以&lt;code>---&lt;/code>作为分隔，更多可参照&lt;sup id="fnref:5">&lt;a href="https://linwhitehat.github.io/posts/2020/02/17/markdown%E5%86%99%E4%BD%9C/#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>，默认的参数如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>参数名称&lt;/th>
&lt;th align="center">描述&lt;/th>
&lt;th>默认值&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>layout&lt;/td>
&lt;td align="center">布局&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>title&lt;/td>
&lt;td align="center">标题&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>date&lt;/td>
&lt;td align="center">建立日期&lt;/td>
&lt;td>文件创建时间&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>updated&lt;/td>
&lt;td align="center">更新日期&lt;/td>
&lt;td>文件更新日期&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>comments&lt;/td>
&lt;td align="center">开启文章评论&lt;/td>
&lt;td>true&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>tags&lt;/td>
&lt;td align="center">标签&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>categories&lt;/td>
&lt;td align="center">分类&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="模板scaffolds">模板（scaffolds）&lt;/h3>
&lt;p>此处为 Hexo 对文章建立时采用的模板，可以在新建文章时选择模板，如&lt;code>hexo new scaffold_1 &amp;quot;file&amp;quot;&lt;/code>则会根据自定义的模板&lt;code>../scaffolds/scaffold_1.md&lt;/code>对新建的文章按照相同的样式进行初始化。&lt;/p>
&lt;h3 id="分类及标签">分类及标签&lt;/h3>
&lt;p>在 Front-Matter 中对文章的参数&lt;code>分类-categories&lt;/code>和&lt;code>标签-tags&lt;/code>进行设置，具体可参照前述&lt;code>Front Matter&lt;/code>一节。这里要说明的是，对标签和分类进行设置有两种方式：&lt;/p>
&lt;ol>
&lt;li>类似无序表格的方式即使用&lt;code>-&lt;/code>进行表示，如:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">tags:
&lt;span class="k">-&lt;/span> tag_1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>使用中括号表示多个标签或分类，如：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">tags: [tag_1, tag_2]
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="readme写作">README写作&lt;/h2>
&lt;p>在GitHub建立项目往往都需要一份README做项目的介绍说明，README的目的主要是让读者更容易和快速了解项目并使用，但是一份糟糕的README可能让读者陷入“糊涂”的境地，非当没有起到作用还让读者花费更多时间去理解项目内容，因此一份良好的README对项目本身十分重要。尽管这一章节没法详尽去叙述一篇README怎么写好，但是已经有大量热门的项目都具备良好的README，同时也有一些教科书式README可以参考&lt;sup id="fnref:6">&lt;a href="https://linwhitehat.github.io/posts/2020/02/17/markdown%E5%86%99%E4%BD%9C/#fn:6" class="footnote-ref" role="doc-noteref">6&lt;/a>&lt;/sup>&lt;sup id="fnref:7">&lt;a href="https://linwhitehat.github.io/posts/2020/02/17/markdown%E5%86%99%E4%BD%9C/#fn:7" class="footnote-ref" role="doc-noteref">7&lt;/a>&lt;/sup>&lt;sup id="fnref:8">&lt;a href="https://linwhitehat.github.io/posts/2020/02/17/markdown%E5%86%99%E4%BD%9C/#fn:8" class="footnote-ref" role="doc-noteref">8&lt;/a>&lt;/sup>。&lt;br />
在这一部分我可能先补充一些README里较为不熟悉的部分，比如badge部分-&amp;gt;如何建立合适的svg。&lt;/p>
&lt;h3 id="badge">Badge&lt;/h3>
&lt;p>这部分可能一些使用GitHub的人会又熟悉又陌生，因为这部分其实并非README必须，但是在热门的项目中时常能看到，这部分内容可以为项目内容做评估也可以展示项目的特色，通常都是以&lt;code>svg&lt;/code>格式展现，可以视作徽标。徽标的制作可以基于&lt;code>shields.io&lt;/code>&lt;sup id="fnref:9">&lt;a href="https://linwhitehat.github.io/posts/2020/02/17/markdown%E5%86%99%E4%BD%9C/#fn:9" class="footnote-ref" role="doc-noteref">9&lt;/a>&lt;/sup>，这里提供了大量的摸板。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/markdown_2.webp" alt="badge colors" title="badge colors" />&lt;/p>
&lt;h4 id="徽标的基本格式如下">徽标的基本格式如下：&lt;/h4>
&lt;ol>
&lt;li>图标格式&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>https://img.shields.io/badge/{徽标标题}-{徽标内容}-{徽标颜色}.svg
&lt;/code>&lt;/pre>&lt;ol start="2">
&lt;li>带链接图标格式&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>[![](https://img.shields.io/badge/{徽标标题}-{徽标内容}-{徽标颜色}.svg)]({linkUrl})
&lt;/code>&lt;/pre>&lt;ol start="3">
&lt;li>带logo图标格式&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>https://img.shields.io/badge/{徽标标题}-{徽标内容}-{徽标颜色}.svg?logo={徽标图形名称}
&lt;/code>&lt;/pre>&lt;ol start="4">
&lt;li>带&lt;code>quert string&lt;/code>参数&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>https://img.shields.io/badge/{徽标标题}-{徽标内容}-{徽标颜色}.svg?{参数名1}={参数值1}&amp;amp;{参数名2}={参数值2}
&lt;/code>&lt;/pre>&lt;h4 id="徽标效果">徽标效果&lt;/h4>
&lt;ol>
&lt;li>
&lt;p>效果1&lt;br />
&lt;a href="https://linwhitehat.github.io/Blog/">&lt;img src="https://img.shields.io/badge/blog-@lin-red.svg" alt="" />&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>效果2&lt;br />
&lt;img src="https://img.shields.io/badge/blog-@lin-success.svg?style=flat-square" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>效果3&lt;br />
&lt;img src="https://img.shields.io/badge/blog-@lin-blue.svg?style=flat-square&amp;amp;logo=python" alt="" />&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="结束">结束&lt;/h2>
&lt;p>这篇博文基本介绍了 Markdown 和博客撰写的基本内容，看完这些内容能够实现自己博客的博文撰写，同时能规范写作语法并使内容排版整洁美观，后续进阶语法可以继续阅读相关阅读推荐篇章。&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr />
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://hexo.io/zh-cn/docs/writing.html">Hexo写作&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/17/markdown%E5%86%99%E4%BD%9C/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;a href="http://xianbai.me/learn-md/index.html">Learning-Markdown&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/17/markdown%E5%86%99%E4%BD%9C/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>&lt;a href="https://blog.csdn.net/u014636245/article/details/82945997">在博客中插入emoji表情&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/17/markdown%E5%86%99%E4%BD%9C/#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>&lt;a href="https://baiqiantao.github.io/%E5%85%B6%E4%BB%96/%E5%B7%A5%E5%85%B7/RraEBz/#%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E5%A4%B9-asset">Hexo 博客 github.io MD&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/17/markdown%E5%86%99%E4%BD%9C/#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:5" role="doc-endnote">
&lt;p>&lt;a href="https://jekyllrb.com/docs/front-matter/">Front Matter&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/17/markdown%E5%86%99%E4%BD%9C/#fnref:5" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:6" role="doc-endnote">
&lt;p>&lt;a href="https://www.zhihu.com/question/299390628">有哪些 GitHub 项目的 README 堪称教科书？&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/17/markdown%E5%86%99%E4%BD%9C/#fnref:6" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:7" role="doc-endnote">
&lt;p>&lt;a href="https://www.jianshu.com/p/813b70d5b0de">开发工具总结（9）之开源项目的README文档的最全最规范写法&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/17/markdown%E5%86%99%E4%BD%9C/#fnref:7" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:8" role="doc-endnote">
&lt;p>&lt;a href="https://www.zhihu.com/question/29100816">如何写好Github中的readme？&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/17/markdown%E5%86%99%E4%BD%9C/#fnref:8" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:9" role="doc-endnote">
&lt;p>&lt;a href="https://shields.io/">shields.io&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/17/markdown%E5%86%99%E4%BD%9C/#fnref:9" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description><category domain="https://linwhitehat.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/">技术分享</category><category domain="https://linwhitehat.github.io/categories/markdown/">Markdown</category><category domain="https://linwhitehat.github.io/tags/%E5%86%99%E4%BD%9C/">写作</category></item><item><title>个人信息隐私保护的法律及技术双重角度思考</title><link>https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/</link><guid isPermaLink="true">https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/</guid><pubDate>Wed, 12 Feb 2020 18:26:17 +0000</pubDate><author>eric_lin_cn@outlook.com (L1n)</author><copyright>本文采用 [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh) 许可协议，转载请注明出处。</copyright><description>&lt;p>在新型网络环境下，中国在个人信息隐私保护方面愈发重视，本文从法律和技术两方面介绍了相关情况，并通过案例简析及借鉴国外相关法律，提出在现有法律基础上健全个人信息隐私保护范围、判定依据、明确权利内涵等建议，并建议结合区块链和云计算取证等新兴技术为个人信息隐私保护提供技术支持。&lt;/p>
&lt;!-- more -->
&lt;h2 id="背景介绍">背景介绍&lt;/h2>
&lt;p>  中国互联网信息中心在2019年2月发布的第43次《中国互联网络发展状况统计报告》显示，截至2018年12月，中国网民规模达到8.29亿，全年新增网民5653万，互联网普及率达到59.6%，手机网民规模达到8.17亿，新增手机网民6433万，网民中手机使用比例达到98.6%。从数据中可知，中国已然是互联网大国，每天各类移动端APP、各类网络应用服务访问数量多不胜数，加之云计算、区块链、大数据等互联网新型技术的兴起和盛行，大数据物联网时代成为当下新型互联网时代的代名词。&lt;br />
  处于新型互联网时代下的生活看似愈加便利快捷，但是百度CEO李彦宏在2018年3月26日的中国发展高层论坛中的一句话却引人深思，他说：“中国人对隐私问题的态度更开放，也相对来说没那么敏感。如果他们可以用隐私换取便利、安全或者效率。在很多情况下，他们就愿意这么做。当然我们也要遵循一些原则，如果这个数据能让用户受益，他们又愿意给我们用，我们就会去使用它的。我想这就是我们能做什么和不能做什么的基本标准。”新型互联网时代下，数据对于企业发展的重要性不言而喻，同样的，数据安全对于个人而言也尤为重要，尤其是涉及个人隐私等重要信息。每个人都希望社会生活更加便捷高效，但是并不意味着可以无条件牺牲个人信息，而应在有较好个人信息保障环境下，由个人自主选择提供个人信息的情景下，由互联网提供生活的便捷。&lt;br />
  然而，当下中国的互联网环境，无论是法律体系制度、企业的自觉度、个人的保护意识，还是信息保护技术的发展，都尚未达到令人满意的程度，中国网络个人信息保护无论在法制还是技术上都任重道远。本文通过研究新型网络环境下的中国已有隐私保护法律现状及技术发展状况，对如何更好地实施个人信息隐私保护，从法律健全和技术支持两方面提出思考和建议。&lt;/p>
&lt;h2 id="法律层面的分析及建议">法律层面的分析及建议&lt;/h2>
&lt;p>  关于个人信息保护，不同行业机构都存在零散的规定条款&lt;sup id="fnref:1">&lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;sup id="fnref:2">&lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>，而在全国范围实行的法律条文有主要如下：&lt;/p>
&lt;ul>
&lt;li>《电信和互联网用户个人信息保护规定》的第四条和第九条，列举了在电信和互联网服务提供中对个人信息的定义和保护规定；&lt;/li>
&lt;li>《网络安全法》中四十四条、四十五条和七十六条，对收集个人信息的合法性和保护规定进行明确；&lt;/li>
&lt;li>《民法总则》第一百一十条和第一百一十一条，规定了隐私权以及个人信息受法律保护；&lt;/li>
&lt;li>《侵权责任法》第二条，明确规定隐私权是公民的基本权利；&lt;/li>
&lt;li>《关于加强网络信息保护的决定》第一条，指出公民个人信息受国家和法律保护。&lt;br />
  总体而言，我国法律体系中尽管有涉及个人信息保护的相关规定，但是没有针对个人信息保护的专门法律及相应实施细则。在个人信息保护法律体系还未健全的情况下，国家互联网应急响应中心在2019年4月发布《2018年我国互联网网络安全态势综述》显示，个人用户信息包括姓名、身份证、个人资产、银行账户、地址等隐私遭到窃取的人数多达150万，移动应用APP在高权限下获取用户信息，假冒 “热点”APP等诱骗用户下载并提供个人信息等，都使得用户隐私信息遭到泄露。2018年圆通快递公司外泄约10亿用户信息，华住酒店集团泄露约5亿用户信息，万豪酒店泄露约5亿用户信息，顺丰速运泄露约3亿用户信息，这些只是影响较大而被披露才为人所知，实际上被泄露的个人用户信息可能还有更多。而作为用户个人，并不知道自己的信息何时被收集、何时被用于何事，除企业机构未能较好地保障用户信息原因外，无明确的可落地的实施细则也是重要因素。&lt;br />
  此外，互联网环境本身是一个匿名化网络环境，尽管不像暗网、深网等对网络内容实施高度匿名化，但是也并非真实世界环境，由此也引发了如网络暴力、虚假消息传播、不良信息传播等负面影响事件。对此，国家通过网络实名制的方式，希望改善网络环境并为更有力的监管提供条件&lt;sup id="fnref:3">&lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>。&lt;br />
  面对当下的网络环境因素，个人信息与隐私是否已经具备良好的保障机制？当前的法律体系对个人信息保护还需要哪方面的完善和细化？在新型网络环境下大数据的应用是否也能由新型技术进行保护数据的隐私属性不被利用？实施全面网络实名制是否可行？面对多种多样的新技术应用场景如何保障个人信息的安全性？这些疑问或许在很多人心中都存在，但如何消除疑问，如何解决困惑，是摆在立法执法部门面前亟待应对和解决的问题。&lt;br />
  国外在个人信息保护立法方面，或多或少走在了中国前面，不少国家或组织已发布了相关法律和条例，例如《个人信息保护法》、《通用数据保护条例》、《个人数据法案》、《消费者隐私权利保护法案》等，为个人信息保护提供法理依据。&lt;br />
  直接照搬国外的个人信息保护法律条例显然不适用于中国特色社会主义环境，中国并没有像美国一样的自身重视个人隐私的历史文化和像德国一样的法制土壤&lt;sup id="fnref:4">&lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>。但我认为，对于西方的隐私保护法律中对个人信息和隐私的保护范围、判定依据、新型权利等条文，中国是可以借鉴的。例如，个人信息需要保护的属性包含哪些？其个体性和公共性是否应该规定限制的范围，还是依据不同情景进行动态平衡其判定标准？被遗忘权是否应归属到个人信息保护的权利范围？这些是可以参考国外的法律法规，并依据中国自身的网络环境和个人信息保护情况，吸收并制定更为合适中国国情的法律条文。&lt;br />
  而对于网络实名制&lt;sup id="fnref:5">&lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>&lt;sup id="fnref:6">&lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fn:6" class="footnote-ref" role="doc-noteref">6&lt;/a>&lt;/sup>&lt;sup id="fnref:7">&lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fn:7" class="footnote-ref" role="doc-noteref">7&lt;/a>&lt;/sup>，尽管中国已经出台相关政策法规逐步推行网络实名制，但对于完全网络实名制仍在观望。我认为网络实名制推行的初衷是好的，是为了促进网络环境更加健康，但是网络实名制需要考虑其推行程度，即权衡匿名化是否不能存在于未来网络之中。本人支持有限制的实名制的观点&lt;sup id="fnref:8">&lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fn:8" class="footnote-ref" role="doc-noteref">8&lt;/a>&lt;/sup>。网络实名制也有其积极作用，但是网络匿名化并非一无是处。网络匿名化本身使得一部分人能够更为理性的发表言论而无需担心遭到恶意报复，这在人民监督政府工作以及举报不良行为上有着积极作用；而实名制对于利用匿名网络而随意发动网络暴力、散播不良信息的行为有着遏制作用。因此，建议在需要实名化监管的领域推行实名制，而对于容易泄露隐私信息的领域采取匿名化。当然，匿名化不意味着肆意而为，匿名表达也需要受到约束和限制&lt;sup id="fnref:9">&lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fn:9" class="footnote-ref" role="doc-noteref">9&lt;/a>&lt;/sup>，对于违反约束的匿名表达可以依靠技术手段进行控制。&lt;/li>
&lt;/ul>
&lt;h2 id="技术层面的分析及建议">技术层面的分析及建议&lt;/h2>
&lt;p>  在法律制度难以监管的领域，可以通过技术进行弥补，从技术应用层面保护个人信息隐私。密码算法的更新迭代、取证技术的升级、匿名技术的衍变等技术应用都为隐私保护提供了技术保障，并为应对愈加复杂和潜在未知安全威胁的网络提供了对抗技术。&lt;br />
  以网络实名制推行为例，韩国是世界首个全面推行网络实名制的国家，但是推行进程在四五年之后便惨遭终结&lt;sup id="fnref:10">&lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fn:10" class="footnote-ref" role="doc-noteref">10&lt;/a>&lt;/sup>。一个主要原因便是实名制之后的保障技术还不够牢固，黑客攻击数据库并贩卖个人实名数据，致使实名制弊端凸显。同时，在大数据时代下，数据挖掘与关联分析技术得到应用，这无疑增加了隐私保护的困难程度。针对此类问题，学者们提出了多种匿名模型和算法，包括k-匿名规则、l-多样性模型、t-接近模型等基于数据发布的隐私保护技术，以及包括用户分类的隐私保护数据挖掘算法、基于安全多方计算与随机干扰结合的算法等针对数据挖掘的数据扰动隐私保护技术。&lt;br />
  但是，数据隐私保护技术也存在着难点亟待突破，如全同态加密方案难以高性能实现具体应用、差分隐私保护算法的时间复杂度较高、大数据的爆发式增长带来的原有保护算法的扩展性问题等，这些既是中国隐私保护所要面对和攻克的技术难关，也是世界性的难题。&lt;/p>
&lt;h2 id="总述">总述&lt;/h2>
&lt;p>  基于以上论述，我个人认为，随着时代发展，个人自我隐私保护意识逐渐增强，隐私保护法等相关法律的出台呼声日益增长，更为细化的个人信息保护法规必将成为中国法律体系中的一员。而需要重点考虑的是：执法机构如何监查企业单位是否存在违法利用个人信息行为，对于个人的隐私采集知情权的维护应该如何具体化，对现有的隐私协议问题如何解决，用户面对冗长且带有法学专业术语的协议信息难以捕捉关键信息的问题如何应对，等等。&lt;br />
  我建议，可以通过业界规定条文的试行，明确企业采集、使用、处理个人信息及涉及隐私的规范化流程；通过中和企业和个人用户之间对隐私信息的理解差异性，减少潜在的违法收集个人信息的擦边球行为；通过简化提炼隐私协议中的关键信息，让用户能直观清晰的了解与自身信息相关的采集与使用条款；同时，对人工智能带来的新产业模式（如无人驾驶中需要采集大量的真实信息数据，其中也会包括对乘车人的拍照等）等特定领域或新型领域相关的隐私保护，是否能在法律中留有空间并适应时代的发展调整，进而仍能对隐私保护提供法理依据。&lt;br />
  面对固有隐私保护技术的瓶颈，或许去中心化思想的区块链技术能起到革新作用&lt;sup id="fnref:11">&lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fn:11" class="footnote-ref" role="doc-noteref">11&lt;/a>&lt;/sup>，通过区块链技术的防丢失、防篡改、可追溯、可扩展性强、成本低等特性，为隐私信息提供更为高效的保护技术方案未尝不可，同时结合云计算取证技术为预防信息的违法利用提供进一步技术保障&lt;sup id="fnref:12">&lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fn:12" class="footnote-ref" role="doc-noteref">12&lt;/a>&lt;/sup>。&lt;br />
  最终要实现个人信息与隐私的保护效果，我相信这是需要个人、企业、法律标准、技术支持等因素互相融合实现的，要做到事前知情同意、事中风险评估、事后个案认定，相信隐私保护在未来健全的法律保障和成熟的技术支持下，能够为每个人带来更加安稳、便捷的物联网生活。&lt;/p>
&lt;h2 id="附录">附录&lt;/h2>
&lt;p>  国内法律条款中规定个人信息保护的条款：&lt;/p>
&lt;ol>
&lt;li>《电信和互联网用户个人信息保护规定》&lt;br />
第四条“本规定所称用户个人信息，是指电信业务经营者和互联网信息服务提供者在提供服务的过程中收集的用户姓名、出生日期、身份证件号码、住址、电话号码、账号和密码等能够单独或者与其他信息结合识别用户的信息以及用户使用服务的时间、地点等信息。”&lt;br />
第九条“未经用户同意，电信业务经营者、互联网信息服务提供者不得收集、使用用户个人信息。”&lt;/li>
&lt;li>《网络安全法》&lt;br />
第四十四条“任何个人和组织不得窃取或者以其他非法方式获取个人信息，不得非法出售或者非法向他人提供个人信息。”&lt;br />
第四十五条“依法负有网络安全监督管理职责的部门及其工作人员，必须对在履行职责中知悉的个人信息、隐私和商业秘密严格保密，不得泄露、出售或者非法向他人提供。”&lt;br />
第七十六条“本法下列用语的含义：&lt;br />
（一）网络，是指由计算机或者其他信息终端及相关设备组成的按照一定的规则和程序对信息进行收集、存储、传输、交换、处理的系统。&lt;br />
（二）网络安全，是指通过采取必要措施，防范对网络的攻击、侵入、干扰、破坏和非法使用以及意外事故，使网络处于稳定可靠运行的状态，以及保障网络数据的完整性、保密性、可用性的能力。&lt;br />
（三）网络运营者，是指网络的所有者、管理者和网络服务提供者。&lt;br />
（四）网络数据，是指通过网络收集、存储、传输、处理和产生的各种电子数据。&lt;br />
（五）个人信息，是指以电子或者其他方式记录的能够单独或者与其他信息结合识别自然人个人身份的各种信息，包括但不限于自然人的姓名、出生日期、身份证件号码、个人生物识别信息、住址、电话号码等。”&lt;/li>
&lt;li>《民法总则》&lt;br />
第一百一十条“自然人享有生命权、身体权、健康权、姓名权、肖像权、名誉权、荣誉权、隐私权、婚姻自主权等权利。法人、非法人组织享有名称权、名誉权、荣誉权等权利。”&lt;br />
第一百一十一条“自然人的个人信息受法律保护。任何组织和个人需要获取他人个人信息的，应当依法取得并确保信息安全，不得非法收集、使用、加工、传输他人个人信息，不得非法买卖、提供或者公开他人个人信息。”&lt;/li>
&lt;li>《侵权责任法》&lt;br />
第二条“侵害民事权益，应当依照本法承担侵权责任。本法所称民事权益，包括生命权、健康权、姓名权、名誉权、荣誉权、肖像权、隐私权、婚姻自主权、监护权、所有权、用益物权、担保物权、著作权、专利权、商标专用权、发现权、股权、继承权等人身、财产权益。”&lt;/li>
&lt;li>《关于加强网络信息保护的决定》&lt;br />
为了保护网络信息安全，保障公民、法人和其他组织的合法权益，维护国家安全和社会公共利益，特作如下决定：&lt;br />
一、国家保护能够识别公民个人身份和涉及公民个人隐私的电子信息。&lt;br />
任何组织和个人不得窃取或者以其他非法方式获取公民个人电子信息，不得出售或者非法向他人提供公民个人电子信息。&lt;/li>
&lt;/ol>
&lt;h2 id="发表">发表&lt;/h2>
&lt;p>  本篇文章已由「中国保密协会科学技术分会」协助发表于&lt;a href="https://mp.weixin.qq.com/s?__biz=MzIxMzI4ODI1MA==&amp;amp;mid=100000019&amp;amp;idx=1&amp;amp;sn=1842ac2ecc36047801d7d3d2176b647b&amp;amp;scene=18&amp;amp;xtrack=1&amp;amp;key=7d42e6f9dbc0e89199c107e6a8c8f5daef5d81e8c6ebd110471080554fa8f4a74119648d55ae607f92bb29617201a312497c4a08755bb092f57b9d074083b1eae63dbe28fe79ac5c6e794feb93f0bc76&amp;amp;ascene=1&amp;amp;uin=MTU3NTM1MzgzNw%3D%3D&amp;amp;devicetype=Windows+10&amp;amp;version=62080079&amp;amp;lang=zh_CN&amp;amp;exportkey=Ay54GAGxN%2FwUbAOXLcBaCf0%3D&amp;amp;pass_ticket=YvQE42U%2F9qwq7gt7gS3Qa1XSSgUMMf%2FdiIcRyDgktSwwuPhLv1pTuH2y18iO1ReZ">中国保密协会科学技术分会官微&lt;/a>，可在官微文章中查找。&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr />
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>齐爱民,张哲.识别与再识别：个人信息的概念界定与立法选择[J].重庆大学学报,2018,24(2):119-131 &lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>韩旭至.个人信息概念的法教义学分析[J].重庆大学学报,2018,24(2):154-165 &lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>李丽.秩序还是自由[J].法制与社会,2009.8,23:103-104 &lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>靳海婷.美、德个人信息宪法保护路径比较与启示[J].重庆邮电大学学报,2018,30(4):46-55 &lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:5" role="doc-endnote">
&lt;p>张欢,杨霖.身份映射关系：网络实名制的法理基础[J].山西高等学校社会科学学报,2009,21(4):97-104 &lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fnref:5" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:6" role="doc-endnote">
&lt;p>陈远,邹晶.网络实名制——规范网络信息传播的必由之路[J].2009,1:66-69 &lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fnref:6" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:7" role="doc-endnote">
&lt;p>周永坤.网络实名制立法评析[J].暨南学报,2013,2:1-8 &lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fnref:7" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:8" role="doc-endnote">
&lt;p>路鹃.网络匿名表达权在司法实践中的冲突与平衡[J].西南政法大学学报,2018,20(6):110-118 &lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fnref:8" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:9" role="doc-endnote">
&lt;p>杨福忠.公民网络匿名表达权之宪法保护——兼论网络实名制的正当性[J].法商研究,2012,5:32-39 &lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fnref:9" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:10" role="doc-endnote">
&lt;p>康美丽,曹凯.韩国网络实名制对我国网络管理的借鉴意义研究[J].情报杂志,2010,29:62-66 &lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fnref:10" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:11" role="doc-endnote">
&lt;p>周亮瑾.基于区块链和分布式数据库的铁路旅客隐私保护技术研究[D].北京：中国铁道科学研究院,2018 &lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fnref:11" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:12" role="doc-endnote">
&lt;p>李维奉,羌卫中,李伟明,邹德清.云环境隐私侵犯取证研究[J].网络与信息安全学报,2018,1(4):26-35 &lt;a href="https://linwhitehat.github.io/posts/2020/02/12/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E6%B3%95%E5%BE%8B%E5%8F%8A%E6%8A%80%E6%9C%AF%E5%8F%8C%E9%87%8D%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83/#fnref:12" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description><category domain="https://linwhitehat.github.io/categories/%E5%AD%A6%E6%9C%AF/">学术</category><category domain="https://linwhitehat.github.io/categories/%E6%B3%95%E5%BE%8B/">法律</category><category domain="https://linwhitehat.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%B3%95/">网络安全法</category><category domain="https://linwhitehat.github.io/tags/%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4/">隐私保护</category><category domain="https://linwhitehat.github.io/tags/%E6%B3%95%E5%BE%8B%E4%B8%8E%E6%8A%80%E6%9C%AF/">法律与技术</category><category domain="https://linwhitehat.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%9E%E5%90%8D%E5%88%B6/">网络实名制</category></item><item><title>Hexo博客部署PWA</title><link>https://linwhitehat.github.io/posts/2020/02/09/hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2pwa/</link><guid isPermaLink="true">https://linwhitehat.github.io/posts/2020/02/09/hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2pwa/</guid><pubDate>Sun, 09 Feb 2020 18:26:17 +0000</pubDate><author>eric_lin_cn@outlook.com (L1n)</author><copyright>本文采用 [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh) 许可协议，转载请注明出处。</copyright><description>&lt;p>渐进式网络应用程序（Progressive Web Apps，PWA）是一种运用现代的 Web API 以及传统的渐进式增强策略创建的跨平台 Web 应用程序。这类应用程序应用广泛、功能丰富，结合现代化浏览器提供的功能和移动设备的体验优势，使其具有与原生应用相同的用户体验优势。&lt;sup id="fnref:1">&lt;a href="https://linwhitehat.github.io/posts/2020/02/09/hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2pwa/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;!-- more -->
&lt;h2 id="pwa介绍">PWA介绍&lt;/h2>
&lt;p>当博客网站实现了 PWA 功能后，使用 Google Chrome 浏览器访问时，就会发现浏览器地址栏右侧有一个带圈的 ➕ 符号，并会提醒你安装此网页到桌面。如果你是用手机访问的话，Chrome 就会在页面的底部提醒你安装网站。&lt;br />
PWA的特点&lt;sup id="fnref:2">&lt;a href="https://linwhitehat.github.io/posts/2020/02/09/hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2pwa/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>：&lt;/p>
&lt;ul>
&lt;li>安装博客到电脑或手机，以原生应用相同的方式浏览博客；&lt;/li>
&lt;li>博客浏览速度更快；&lt;/li>
&lt;li>可以离线浏览博客；&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>对于读者，博客可一触即达，且无浏览器的地址栏、菜单栏等「无关」干扰；对于博客，非常有利于博客的用户留存率，也利于博客的品牌形象;&lt;/li>
&lt;li>可以利用 Service Worker 的缓存特点，极大地加速你的博客;&lt;/li>
&lt;li>能让你的博客更贴近 APP 的形象。&lt;/li>
&lt;/ol>
&lt;p>PWA部署对博客具有不少要求，需要网站支持全站HTTPS、响应式布局等，具体可参见&lt;a href="https://developers.google.com/web/progressive-web-apps/checklist">Checklist&lt;/a>，同时可以在网站&lt;a href="https://www.webpagetest.org/lighthouse">Lighthouse&lt;/a>检查博客网站是否满足PWA的要求。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/pwa-lighthouse.webp" alt="Lighthouse检测结果" title="Lighthouse检测结果" />&lt;/p>
&lt;h2 id="pwa插件部署">PWA插件部署&lt;/h2>
&lt;p>Hexo支持PWA部署的插件有三款，来自网上教程&lt;sup id="fnref:2">&lt;a href="https://linwhitehat.github.io/posts/2020/02/09/hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2pwa/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>的分享，三款插件各有利弊，同时另一款插件不局限于Hexo使用，且更具优点。实现PWA的Hexo插件：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>插件名称&lt;/th>
&lt;th align="center">安装方法&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://github.com/zoumiaojiang/hexo-service-worker">hexo-sercive-worker&lt;/a>&lt;/td>
&lt;td align="center">&lt;code>npm install hexo-service-worker --save&lt;/code>&lt;/td>
&lt;td>&lt;a href="https://linwhitehat.github.io/posts/2020/02/09/hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2pwa/#service-worker">hexo-service-worker配置&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/JLHwung/hexo-offline">hexo-offline&lt;/a>&lt;/td>
&lt;td align="center">&lt;code>npm install hexo-offline --save&lt;/code>&lt;/td>
&lt;td>&lt;a href="https://linwhitehat.github.io/posts/2020/02/09/hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2pwa/#offline">hexo-offline配置&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/lavas-project/hexo-pwa">hexo-pwa&lt;/a>&lt;/td>
&lt;td align="center">&lt;code>npm install hexo-pwa --save&lt;/code>&lt;/td>
&lt;td>&lt;a href="https://linwhitehat.github.io/posts/2020/02/09/hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2pwa/#hexo-pwa">hexo-pwa配置&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="span-idservice-workerhexo-service-worker配置span">&lt;span id="service-worker">hexo-service-worker配置&lt;/span>&lt;/h3>
&lt;p>在博客站点配置文件&lt;code>../hexo/_config.yml&lt;/code>中配置&lt;code>service worker&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="c"># offline config passed to sw-precache.&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">service_worker&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">maximumFileSizeToCacheInBytes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">5242880&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">staticFileGlobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- public/about/index.html&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- public/favicon.ico&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- public/manifest.json&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">stripPrefix&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>public&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">verbose&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">runtimeCaching&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">urlPattern&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/&lt;span class="cp">**/*&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">handler&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>cacheFirst&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">origin&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>hostname&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>配置说明&lt;/strong>：&lt;/p>
&lt;ol>
&lt;li>&lt;code>staticFileGlobs&lt;/code>是首次加载时主动缓存的文件，根据自身实际修改，建议不设置博客首页即&lt;code>index.html&lt;/code>，否则要去除首页或更新为&lt;code>Workbox&lt;/code>时用户需要手动清除浏览器缓存才能更新，但不加上首页可能导致无法离线访问博客。&lt;/li>
&lt;li>&lt;code>origin&lt;/code>中&lt;code>hostname&lt;/code>修改为博客域名。&lt;/li>
&lt;li>博客支持全站HTTPS。&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>存在问题&lt;/strong>&lt;br />
存在&lt;code>sw.js&lt;/code>无法被浏览器识别的情况，网站无法自动更新，访问者需要手动清楚缓存才能访问最新内容。&lt;/p>
&lt;h3 id="span-idofflinehexo-offline配置span">&lt;span id="offline">hexo-offline配置&lt;/span>&lt;/h3>
&lt;p>配置与&lt;code>hexo-service-worker&lt;/code>基本一致，在博客站点配置文件&lt;code>../hexo/_config.yml&lt;/code>中配置&lt;code>offline&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="c"># offline config passed to sw-precache.&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">offline&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">maximumFileSizeToCacheInBytes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">5242880&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">staticFileGlobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- public/about/index.html&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- public/favicon.ico&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- public/manifest.json&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">stripPrefix&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>public&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">verbose&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">runtimeCaching&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="k">urlPattern&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/&lt;span class="cp">**/*&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">handler&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>cacheFirst&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">origin&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>hostname&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>配置说明参照&lt;code>hexo-service-worker配置说明&lt;/code>。&lt;/p>
&lt;h3 id="span-idhexo-pwahexo-pwa配置span">&lt;span id="hexo-pwa">hexo-pwa配置&lt;/span>&lt;/h3>
&lt;p>此处配置已经包含&lt;code>manifest.json&lt;/code>的配置即无需额外配置&lt;code>manifest.json&lt;/code>，当插件运行时会自动生成&lt;code>manifest.json&lt;/code>，在博客站点配置文件&lt;code>../hexo/_config.yml&lt;/code>中添加以下内容：&lt;/p>
&lt;details>
&lt;summary>点击查看具体代码&lt;/summary>
``` yaml
pwa:
manifest:
path: /manifest.json
body:
name: hexo
short_name: hexo
icons:
- src: /images/android-chrome-192x192.png
sizes: 192x192
type: image/png
- src: /images/android-chrome-512x512.png
sizes: 512x512
type: image/png
start_url: /index.html
theme_color: '#ffffff'
background_color: '#ffffff'
display: standalone
serviceWorker:
path: /sw.js
preload:
urls:
- /
posts: 5
opts:
networkTimeoutSeconds: 5
routes:
- pattern: !!js/regexp /hm.baidu.com/
strategy: networkOnly
- pattern: !!js/regexp /.*\.(js|css|jpg|jpeg|png|gif)$/
strategy: cacheFirst
- pattern: !!js/regexp /\//
strategy: networkFirst
priority: 5
```
&lt;/details>
**配置说明**
1. `manifest`部分即对应`manifest.json`的配置；
2. `serviceWorker`对应缓存信息配置。`preload`中`posts`表示需要缓存的文章数量，`urls`表示需要缓存的页面地址，填写格式即加入缓存页面对应的目录名称，如下：
``` yaml
# 缓存首页
- /
# 缓存标签页
- /tags/
```
&lt;h3 id="span-idmanifest配置manifestjson实现pwa添加到桌面span">&lt;span id="manifest">配置&lt;code>manifest.json&lt;/code>实现PWA添加到桌面&lt;/span>&lt;/h3>
&lt;p>要实现PWA必须要配置&lt;code>manifest.json&lt;/code>，因为PWA的启动需要依赖其中的配置，当前各版本浏览器对其支持情况可参照&lt;a href="https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Browser_compatibility_for_manifest.json">Browser compatibility for manifest.json&lt;/a>。&lt;br />
配置&lt;code>manifest.json&lt;/code>需要配置应用图标、名称等基本信息，在&lt;code>../hexo/source&lt;/code>下新建&lt;code>manifest.json&lt;/code>，基本的配置信息参照如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;short_name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;短名称&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;这是一个完整名称&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;icon&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;src&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;icon.png&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;image/png&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;sizes&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;512x512&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;background_color&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;#2196f3&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;display&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;standalone&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;start_url&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;index.html&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>配置信息也可以在&lt;a href="https://app-manifest.firebaseapp.com/">Web App Manifest Generator&lt;/a>进行生成，更多详细配置可参照LAVAS&lt;sup id="fnref:3">&lt;a href="https://linwhitehat.github.io/posts/2020/02/09/hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2pwa/#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>。&lt;br />
在博客中配置引用&lt;code>manifest.json&lt;/code>，在博客的&lt;code>&amp;lt;head&amp;gt;&lt;/code>标签引入，在&lt;code>../next/_config.yml&lt;/code>主题配置文件中开启自定义文件&lt;code>head.swig&lt;/code>（自定义主题样式可参照另一篇博客《&lt;a href="https://linwhitehat.github.io/%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96.html">博客优化(Hexo博客Next主题自定义设计)&lt;/a>》），添加下属引用内容：&lt;/p>
&lt;pre>&lt;code class="language-swig" data-lang="swig">&amp;lt;link rel=&amp;quot;manifest&amp;quot; href=&amp;quot;/manifest.json&amp;quot;&amp;gt;
&lt;/code>&lt;/pre>&lt;p>博客部署完成后，可在chrome浏览的开发者模式窗口（按&lt;code>F12&lt;/code>）查看&lt;code>Application&lt;/code>，即可看到配置的信息以及网站缓存信息。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/pwa-manifest.webp" alt="查看部署结果" title="查看部署结果" />&lt;/p>
&lt;h3 id="workbox部署">Workbox部署&lt;/h3>
&lt;p>当前博客实现PWA使用的方式，部署步骤如下：&lt;/p>
&lt;ol>
&lt;li>配置&lt;code>manifest.json&lt;/code>，具体参照&lt;a href="https://linwhitehat.github.io/posts/2020/02/09/hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2pwa/#manifest">配置manifest.json&lt;/a>。&lt;/li>
&lt;li>安装&lt;a href="https://nodejs.org/zh-cn/download/">Node.js&lt;/a>（Hexo博客基于Node.js，因此跳过此步）。&lt;/li>
&lt;li>安装插件&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">npm install workbox-build gulp gulp-uglify readable-stream uglify-es --save-dev
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>安装&lt;code>gulp&lt;/code>插件&lt;br />
安装&lt;code>gulp&lt;/code>记得需要在全局环境下进行安装，不要只在博客根目录下的环境进行安装，否则会导致&lt;code>gulp&lt;/code>无法正常执行。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">npm install gulp --save &lt;span class="c1">#安装gulp&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="5">
&lt;li>在博客站点根目录新建配置文件&lt;code>../hexo/gulpfile.js&lt;/code>，添加内容如下：&lt;/li>
&lt;/ol>
&lt;details>
&lt;summary>点击查看具体代码&lt;/summary>
``` javascript
const gulp = require("gulp");
const workbox = require("workbox-build");
const uglifyes = require('uglify-es');
const composer = require('gulp-uglify/composer');
const uglify = composer(uglifyes, console);
const pipeline = require('readable-stream').pipeline;
&lt;p>gulp.task('generate-service-worker', () =&amp;gt; {&lt;br />
return workbox.injectManifest({&lt;br />
swSrc: './sw-template.js',&lt;br />
swDest: './public/sw.js',&lt;br />
globDirectory: './public',&lt;br />
globPatterns: [&lt;br />
&amp;quot;**/*.{html,css,js,json,woff2}&amp;quot;&lt;br />
],&lt;br />
modifyURLPrefix: {&lt;br />
&amp;quot;&amp;quot;: &amp;quot;./&amp;quot;&lt;br />
}&lt;br />
});&lt;br />
});&lt;/p>
&lt;p>gulp.task(&amp;quot;uglify&amp;quot;, function () {&lt;br />
return pipeline(&lt;br />
gulp.src(&amp;quot;./public/sw.js&amp;quot;),&lt;br />
uglify(),&lt;br />
gulp.dest(&amp;quot;./public&amp;quot;)&lt;br />
);&lt;br />
});&lt;/p>
&lt;p>gulp.task(&amp;quot;build&amp;quot;, gulp.series(&amp;quot;generate-service-worker&amp;quot;, &amp;quot;uglify&amp;quot;));&lt;/p>
&lt;pre>&lt;code>&amp;lt;/details&amp;gt;
**配置说明**
1）`globPatterns`表示需要缓存的文件匹配模式，这里将`html`、`css`、`js`、`json`和`woff2`类型文件进行缓存，当博客首次加载时会自动缓存这些文件；
2）若是博客使用`gulp`压缩了源码，以上配置内容与之前配置信息重复的部分可忽略。
6. 在博客站点根目录新建配置文件`../hexo/sw-template.js`，添加内容如下：
&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;点击查看具体代码&amp;lt;/summary&amp;gt;
``` javascript
const workboxVersion = '5.0.0';
importScripts(`https://storage.googleapis.com/workbox-cdn/releases/${workboxVersion}/workbox-sw.js`);
workbox.core.setCacheNameDetails({
prefix: &amp;quot;Blog_name&amp;quot;
});
workbox.core.skipWaiting();
workbox.core.clientsClaim();
workbox.precaching.precacheAndRoute(self.__WB_MANIFEST);
workbox.precaching.cleanupOutdatedCaches();
// Images
workbox.routing.registerRoute(
/\.(?:png|jpg|jpeg|gif|bmp|webp|svg|ico)$/,
new workbox.strategies.CacheFirst({
cacheName: &amp;quot;images&amp;quot;,
plugins: [
new workbox.expiration.ExpirationPlugin({
maxEntries: 1000,
maxAgeSeconds: 60 * 60 * 24 * 30
}),
new workbox.cacheableResponse.CacheableResponsePlugin({
statuses: [0, 200]
})
]
})
);
// Fonts
workbox.routing.registerRoute(
/\.(?:eot|ttf|woff|woff2)$/,
new workbox.strategies.CacheFirst({
cacheName: &amp;quot;fonts&amp;quot;,
plugins: [
new workbox.expiration.ExpirationPlugin({
maxEntries: 1000,
maxAgeSeconds: 60 * 60 * 24 * 30
}),
new workbox.cacheableResponse.CacheableResponsePlugin({
statuses: [0, 200]
})
]
})
);
// Google Fonts
workbox.routing.registerRoute(
/^https:\/\/fonts\.googleapis\.com/,
new workbox.strategies.StaleWhileRevalidate({
cacheName: &amp;quot;google-fonts-stylesheets&amp;quot;
})
);
workbox.routing.registerRoute(
/^https:\/\/fonts\.gstatic\.com/,
new workbox.strategies.CacheFirst({
cacheName: 'google-fonts-webfonts',
plugins: [
new workbox.expiration.ExpirationPlugin({
maxEntries: 1000,
maxAgeSeconds: 60 * 60 * 24 * 30
}),
new workbox.cacheableResponse.CacheableResponsePlugin({
statuses: [0, 200]
})
]
})
);
// Static Libraries
workbox.routing.registerRoute(
/^https:\/\/cdn\.jsdelivr\.net/,
new workbox.strategies.CacheFirst({
cacheName: &amp;quot;static-libs&amp;quot;,
plugins: [
new workbox.expiration.ExpirationPlugin({
maxEntries: 1000,
maxAgeSeconds: 60 * 60 * 24 * 30
}),
new workbox.cacheableResponse.CacheableResponsePlugin({
statuses: [0, 200]
})
]
})
);
// External Images
workbox.routing.registerRoute(
/^https:\/\/raw\.githubusercontent\.com\/reuixiy\/hugo-theme-meme\/master\/static\/icons\/.*/,
new workbox.strategies.CacheFirst({
cacheName: &amp;quot;external-images&amp;quot;,
plugins: [
new workbox.expiration.ExpirationPlugin({
maxEntries: 1000,
maxAgeSeconds: 60 * 60 * 24 * 30
}),
new workbox.cacheableResponse.CacheableResponsePlugin({
statuses: [0, 200]
})
]
})
);
workbox.googleAnalytics.initialize();
&lt;/code>&lt;/pre> &lt;/details>
**配置说明**
1）`prefix`参数内容`Blog_name`修改为博客名称，具体参照[Workbox_v5.0.0](https://github.com/GoogleChrome/workbox/releases)；
2）将参数`workboxVersion`修改为最新发布版，其他内容可根据自身情况修改；
3）其他缓存策略参考[相关文档](https://developers.google.com/web/tools/workbox/modules/workbox-strategies)，不建议缓存视频和图片。
7. 注册`Service Worker`
&lt;p>在博客HTML页面加入&lt;code>Service Worker&lt;/code>注册信息及页面更新提醒，在&lt;code>../next/layout/_layout.swig&lt;/code>中找到&lt;code>&amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;&lt;/code>标签对，在标签内加入以下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-JavaScript" data-lang="JavaScript">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">div&lt;/span> &lt;span class="kr">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;app-refresh&amp;#34;&lt;/span> &lt;span class="nx">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;app-refresh&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">div&lt;/span> &lt;span class="kr">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;app-refresh-wrap&amp;#34;&lt;/span> &lt;span class="nx">onclick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;location.reload()&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">label&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="nx">已更新最新版本&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/label&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">span&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="nx">点击刷新&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/span&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/div&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/div&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;serviceWorker&amp;#39;&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nx">navigator&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">navigator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">serviceWorker&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">controller&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">navigator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">serviceWorker&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;controllerchange&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">showNotification&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;load&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">navigator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">serviceWorker&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">register&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/sw.js&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">showNotification&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">querySelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;meta[name=theme-color]&amp;#39;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">content&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;#000&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;app-refresh&amp;#39;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">className&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="s1">&amp;#39; app-refresh-show&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/script&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="8">
&lt;li>添加CSS样式&lt;/li>
&lt;/ol>
&lt;p>在自定义样式文件&lt;code>../hexo/source/_data/styles.styl&lt;/code>中修改，添加以下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">app-refresh&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#000&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">line-height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">overflow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">hidden&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">fixed&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">top&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">left&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">right&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">z-index&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">42&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">padding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">transition&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">all&lt;/span> &lt;span class="mf">.3&lt;/span>&lt;span class="kt">s&lt;/span> &lt;span class="kc">ease&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">app-refresh-wrap&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">flex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#fff&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">app-refresh-wrap&lt;/span> &lt;span class="nt">label&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">flex&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">app-refresh-show&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="9">
&lt;li>避免&lt;code>manifest.json&lt;/code>在部署时被修改&lt;/li>
&lt;/ol>
&lt;p>在博客配置文件&lt;code>../hexo/_config.yml&lt;/code>找到&lt;code>skip_render&lt;/code>，做出以下修改：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="k">+ skip_render&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>README.md&lt;span class="p">,&lt;/span>manifest.json&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="10">
&lt;li>部署&lt;/li>
&lt;/ol>
&lt;p>运行以下命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">hexo clean
hexo g
gulp build
hexo d
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="结束">结束&lt;/h2>
&lt;p>这篇博客是Hexo博客优化系列的补充，为博客部署PWA，使博客在多平台能快捷访问且支持离线访问，同时在部署过程中将遇到的问题及解决方式进行分享，同时感谢博主&lt;code>Guan Qirui&lt;/code>在博客优化中给予的帮助。&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr />
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/Progressive_web_apps">渐进式 Web 应用（PWA）|MDN web docs&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/09/hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2pwa/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;a href="https://guanqr.com/study/blog/realize-pwa/">博客实现PWA&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/09/hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2pwa/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>&lt;a href="https://lavas.baidu.com/pwa/engage-retain-users/add-to-home-screen/introduction">manifest.json 简介&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/02/09/hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2pwa/#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description><category domain="https://linwhitehat.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/">技术分享</category><category domain="https://linwhitehat.github.io/categories/%E5%8D%9A%E5%AE%A2/">博客</category><category domain="https://linwhitehat.github.io/tags/hexo/">Hexo</category><category domain="https://linwhitehat.github.io/tags/pwa/">PWA</category><category domain="https://linwhitehat.github.io/tags/gulp/">gulp</category></item><item><title>博客优化(Hexo博客Next主题设计)</title><link>https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/</link><guid isPermaLink="true">https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/</guid><pubDate>Thu, 30 Jan 2020 18:26:17 +0000</pubDate><author>eric_lin_cn@outlook.com (L1n)</author><copyright>本文采用 [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh) 许可协议，转载请注明出处。</copyright><description>&lt;p>博客搭建完成后，最初的博客雏形一般都比较朴素，功能也有限，所以可以通过优化主题来进行美化博客外观和拓展博客功能。本篇文章主要以可正常访问的Hexo.Mist原型博客为基础，根据自身需求加以优化，而最新版（V7.7）中其实包含很多美化设置，但是默认是关闭状态，同时个性化配置需要修改配置文件等，即使出现一个字母的差错也会导致失效，因此本文对配置文件会具体说明，而目录均是按照我的博客搭建博文中说明的目录结构，可以根据自身目录结构进行转换，博文中展示的图片可能来自参考文章，若参考文章内容与实际存在差异会附上实际图片。&lt;/p>
&lt;!-- more -->
&lt;h2 id="优化主题">优化主题&lt;/h2>
&lt;p>我的个人博客是&lt;a href="https://linwhitehat.github.io/">林深时见璐&lt;/a>，本文优化的效果可以访问博客进行观看。&lt;/p>
&lt;h3 id="阅读全文设置">阅读全文设置&lt;/h3>
&lt;p>由于初始博客并没有设置摘要的形式，因此博客首页会展示每篇博文的全文，显得十分冗长，为此设置&lt;code>阅读全文&lt;/code>能简化博客首页，且让博文能以简短的摘要进行展示。&lt;sup id="fnref:1">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;p>设置方法采用的是在博文中选择适当位置进行内容截断，填写以下内容：&lt;/p>
&lt;pre>&lt;code> &amp;lt;!-- more --&amp;gt;
&lt;/code>&lt;/pre>&lt;p>这样首页便只会展示在截断位置前的内容。&lt;/p>
&lt;h3 id="分类板块二级目录显示">&lt;code>分类板块&lt;/code>二级目录显示&lt;/h3>
&lt;p>在类别模块，往往只显示一种类别，但有时候博客之间归属一大类却各有差异，因此设计二级分类目录，使得类别简洁的同时又能将具体博文区别。因为Hexo原生支持父子分类，在博文撰写的&lt;code>md&lt;/code>文件首部&lt;code>categories&lt;/code>下原先的类别A下再写一个类别B，即可得到父子类的效果，A为父类，B为子类，示例如下&lt;sup id="fnref:2">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff"> categories:
- 技术
- 博客搭建
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="点击侧边栏头像返回首页">点击侧边栏头像返回首页&lt;/h3>
&lt;p>在Next V7.7.0版本配置中修改方式与以前版本存在差异，未测试之前版本效果，本人配置方式如下：&lt;br />
1）找到侧边栏配置文件&lt;code>../next/layout/_partials/sidebar/site-overview.swig&lt;/code>；&lt;br />
2）找到头像配置位置&lt;code>class=&amp;quot;site-author-image&amp;quot;&lt;/code>；&lt;br />
3）设置点击头像跳转，需将对应头像配置修改如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="gi">+ &amp;lt;a href=&amp;#34;/&amp;#34;&amp;gt;
&lt;/span>&lt;span class="gi">&lt;/span> &amp;lt;img class=&amp;#34;site-author-image&amp;#34; itemprop=&amp;#34;image&amp;#34; alt=&amp;#34;{{ author }}&amp;#34;
src=&amp;#34;{{ url_for(theme.avatar.url) }}&amp;#34;&amp;gt;
&lt;span class="gi">+ &amp;lt;/a&amp;gt;
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="评论系统使用utteranc">评论系统使用&lt;code>utteranc&lt;/code>&lt;/h3>
&lt;p>原先使用的是主题自带的&lt;code>gitalk&lt;/code>作为博客评论系统，而更改为&lt;code>utteranc&lt;/code>的原因有两个：&lt;br />
1）&lt;code>gitalk&lt;/code>存在原始配置泄露及访问授权等&lt;a href="https://github.com/gitalk/gitalk/issues/343" title="https://github.com/gitalk/gitalk/issues/343">问题&lt;/a>，&lt;code>utteranc&lt;/code>具备细粒度的权限控制，且接受隐私项目授权；&lt;br />
2）二者都是基于GitHub的issue系统进行评论，很好转换。&lt;/p>
&lt;p>转换评论系统首先将&lt;code>gitalk&lt;/code>在&lt;code>../next/_config.yml&lt;/code>中设置为&lt;code>false&lt;/code>，将GitHub中授权的应用删除。安装&lt;code>utteranc&lt;/code>步骤如下&lt;sup id="fnref:3">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>：&lt;br />
1）在GitHub APP中安装&lt;code>utterances&lt;/code>，链接为&lt;a href="https://github.com/apps/utterances">https://github.com/apps/utterances&lt;/a>，安装后如图：&lt;br />
&lt;img src="https://wangjiezhe.com/posts/2018-10-29-Hexo-NexT-3/5bd723ae73cb3.webp" alt="utterance应用安装" title="utterance应用安装" />&lt;br />
2）安装插件，在hexo文件目录下打开&lt;code>git bash&lt;/code>，安装如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> npm install theme-next/hexo-next-utteranc
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3）在&lt;code>../next/layout/_third-party/comments/&lt;/code>中新建文件&lt;code>utterances.swig&lt;/code>，写入以下内容：&lt;/p>
&lt;pre>&lt;code class="language-swig" data-lang="swig">{% if theme.utteranc.enable %}
&amp;lt;script src=&amp;quot;https://utteranc.es/client.js&amp;quot;
repo=&amp;quot;{{ theme.utteranc.repo }}&amp;quot;
issue-term=&amp;quot;{{ theme.utteranc.issue_term }}&amp;quot;
theme=&amp;quot;{{ theme.utteranc.theme }}&amp;quot;
crossorigin=&amp;quot;anonymous&amp;quot;
async&amp;gt;
&amp;lt;/script&amp;gt;
{% endif %}
&lt;/code>&lt;/pre>&lt;p>4）在&lt;code>../next/layout/_partials/comments.swig&lt;/code>中找到最后一句&lt;code>elseif&lt;/code>并在其中的&lt;code>&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;/code>后面增添以下内容：&lt;/p>
&lt;pre>&lt;code class="language-swig" data-lang="swig">{% elseif theme.utteranc.enable %}
&amp;lt;div class=&amp;quot;comments&amp;quot; id=&amp;quot;comments&amp;quot;&amp;gt;
{% include '../_third-party/comments/utterances.swig' %}
&amp;lt;/div&amp;gt;
&lt;/code>&lt;/pre>&lt;p>5）在&lt;code>../next/_config.yml&lt;/code>添加下面的配置内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="c"># Demo: https://utteranc.es/ http://trumandu.github.io/about/&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">utteranc&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">enable&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">repo&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>linwhitehat/linwhitehat.github.io&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">pathname&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>pathname&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># theme: github-light,github-dark,github-dark-orange&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">theme&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>github-light&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">cdn&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>https&lt;span class="p">:&lt;/span>//utteranc.es/client.js&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># If you want to modify priority, please config in **hexo**&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#priority:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>更新完博客配置后，便能看到之前使用gitalk留下的评论，同时也能发表新评论。&lt;/p>
&lt;h4 id="更新utteranc评论系统配置说明">更新&lt;code>utteranc&lt;/code>评论系统配置说明&lt;/h4>
&lt;p>1）新版配置简化，上述配置中&lt;code>3）&lt;/code>和&lt;code>4）&lt;/code>部分可忽略，若忽略配置后未生效可尝试加上；&lt;br />
2）原先设置中&lt;code>pathname&lt;/code>设置改为&lt;code>title&lt;/code>，避免URL中带有中文字符编码导致评论issue显示中文为编码，修改后issue名称即博客文章标题。&lt;/p>
&lt;h3 id="图片设置">图片设置&lt;/h3>
&lt;ol>
&lt;li>图片放大查看的功能，这是默认功能，可以选择使用的插件&lt;code>fancybox&lt;/code>或&lt;code>mediumzoom&lt;/code>，我使用后者，在&lt;code>../next/_config.yml&lt;/code>中搜索&lt;code>mediumzoom&lt;/code>，将&lt;code>false&lt;/code>改为&lt;code>true&lt;/code>。&lt;/li>
&lt;li>图片标题说明，当前的配置情况下，即使使用下面展示的markdown语法中的图片说明也无法正常显示在博客中，其中&lt;code>Optional title&lt;/code>是图片的title属性，若使用Next主题中的&lt;code>fancybox&lt;/code>插件则自动会显示，其他的配置则需要更改Hexo渲染组件。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">![&lt;span class="nt">Alt text&lt;/span>](&lt;span class="na">../img.jpg &amp;#34;Optional title&amp;#34;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>修改渲染配置步骤如下：&lt;br />
1）在&lt;code>../hexo/node_modules/marked/lib/marked.js&lt;/code>中进行下述修改，其中&lt;code>-&lt;/code>表示删除&lt;code>+&lt;/code>表示增加：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff">Renderer.prototype.image = function(href, title, text) {
&lt;span class="gd">- href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);
&lt;/span>&lt;span class="gd">- if (href === null) {
&lt;/span>&lt;span class="gd">- return text;
&lt;/span>&lt;span class="gd">-}
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ if (this.options.baseUrl &amp;amp;&amp;amp; !originIndependentUrl.test(href)) {
&lt;/span>&lt;span class="gi">+ href = resolveUrl(this.options.baseUrl, href);
&lt;/span>&lt;span class="gi">+ }
&lt;/span>&lt;span class="gi">+ var out = &amp;#39;&amp;lt;img src=&amp;#34;&amp;#39; + href + &amp;#39;&amp;#34; alt=&amp;#34;&amp;#39; + text + &amp;#39;&amp;#34;&amp;#39;;
&lt;/span>&lt;span class="gi">&lt;/span> if (title) {
&lt;span class="gd">- out += &amp;#39; title=&amp;#34;&amp;#39; + title + &amp;#39;&amp;#34;&amp;#39;;
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ out += &amp;#39;&amp;gt;&amp;#39; + &amp;#39;&amp;lt;i class=&amp;#34;img-caption&amp;#34;&amp;gt;&amp;#39; + &amp;#39;◎ &amp;#39; + title + &amp;#39;&amp;lt;/i&amp;#39;;
&lt;/span>&lt;span class="gi">&lt;/span> }
out += this.options.xhtml ? &amp;#39;/&amp;gt;&amp;#39; : &amp;#39;&amp;gt;&amp;#39;;
return out;
};
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2）增加自定义CSS样式，在&lt;code>../source/_data/styles.styl&lt;/code>中增加以下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">img-caption&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">font-style&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">normal&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">margin&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mf">.7&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">90&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#555&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">block&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">text-align&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">text-indent&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">font-family&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">STKaiti&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">serif&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>图片居中&lt;br />
在&lt;code>../next/source/css/_schemes/Mist/_posts-expanded.styl&lt;/code>中找到&lt;code>.posts-expand&lt;/code>中的下列内容&lt;sup id="fnref:4">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">post-body&lt;/span> &lt;span class="nt">img&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">margin-left&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将其修改为：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">post-body&lt;/span> &lt;span class="nt">img&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">margin&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="kc">auto&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="博文脚注">博文脚注&lt;/h3>
&lt;p>脚注也可以叫注脚，Hexo自带的默认markdown编辑器渲染效果不支持脚注的显示，因此安装插件进行渲染支持，我使用的是&lt;a href="https://github.com/kchen0x/hexo-reference" title="https://github.com/kchen0x/hexo-reference">hexo-reference&lt;/a>，整体效果更可观，安装如下&lt;sup id="fnref:5">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>&lt;sup id="fnref:6">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:6" class="footnote-ref" role="doc-noteref">6&lt;/a>&lt;/sup>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> npm install hexo-reference --save
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在博客撰写的md文件中使用如下（&lt;code>^&lt;/code>和数字之间不需要空格）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown"> 博客脚注[^ 1]。
[^ 1]: 我的博客。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="修改篇尾的标签符号">修改篇尾的标签符号&lt;/h3>
&lt;p>默认的标签符号是&lt;code>#&lt;/code>，可以使用自带的标签图案，修改方式即在&lt;code>../next/_config.yml&lt;/code>中将&lt;code>tag_icon&lt;/code>更改为&lt;code>true&lt;/code>。&lt;br />
&lt;img src="https://i.imgur.com/LVHYdOp.png" alt="old_tag" title="old_tag" />&lt;br />
&lt;img src="https://i.imgur.com/KVFYpSF.png" alt="new_tag" title="new_tag" />&lt;/p>
&lt;h3 id="修改分割线">修改分割线&lt;/h3>
&lt;p>原先的默认分割线是虚线，将其修改为实线，在&lt;code>../next/source/css/_common/scaffolding/base.styl&lt;/code>中将下属配置删除&lt;sup id="fnref:7">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:7" class="footnote-ref" role="doc-noteref">7&lt;/a>&lt;/sup>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">background-image&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">repeating-linear-gradient&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">-45deg&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">white&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">white&lt;/span> &lt;span class="nt">4px&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">transparent&lt;/span> &lt;span class="nt">4px&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">transparent&lt;/span> &lt;span class="nt">8px&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="页脚显示博客运行时间">页脚显示博客运行时间&lt;/h3>
&lt;p>在博客页脚显示博客运行时间&lt;sup id="fnref:8">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:8" class="footnote-ref" role="doc-noteref">8&lt;/a>&lt;/sup>，这个在默认主题配置中并没有，因此需要自己添加，修改配置文件是&lt;code>../next/layout/_partials/footer.swig&lt;/code>，在配置文件中找到你想显示在博客页脚的位置，比如我配置在主题版本信息下，显示效果如图：&lt;br />
&lt;img src="https://linwhitehat.github.io/images/run_time_result.png" alt="博客运行时间" title="博客运行时间显示效果" />&lt;br />
不同配置位置可以自行尝试修改，具体添加代码如下：&lt;/p>
&lt;details>
&lt;summary>点击查看具体代码&lt;/summary>
``` swig
&lt;div id="days">&lt;/div>
&lt;script>
function show_date_time(){
window.setTimeout("show_date_time()", 1000);
BirthDay=new Date("01/10/2019 00:13:14");//修改为自己的blog建站时间
today=new Date();
timeold=(today.getTime()-BirthDay.getTime());
sectimeold=timeold/1000
secondsold=Math.floor(sectimeold);
msPerDay=24*60*60*1000
e_daysold=timeold/msPerDay
daysold=Math.floor(e_daysold);
e_hrsold=(e_daysold-daysold)*24;
hrsold=setzero(Math.floor(e_hrsold));
e_minsold=(e_hrsold-hrsold)*60;
minsold=setzero(Math.floor((e_hrsold-hrsold)*60));
seconds=setzero(Math.floor((e_minsold-minsold)*60));
document.getElementById('days').innerHTML="本站已安全运行"+daysold+"天"+hrsold+"小时"+minsold+"分"+seconds+"秒";
}
function setzero(i){
if (i&lt;10)
{i="0" + i};
return i;
}
show_date_time();
&lt;/script>
```
&lt;/details>
&lt;h3 id="显示博客阅读数量">显示博客阅读数量&lt;/h3>
&lt;p>已经有许多教程，在博客主题配置中也有多种选择，根据网上教程的介绍，busuanzi插件只能在博文显示阅读数，因此我选择部署LeanCloud插件来显示阅读数，但是在部署过程中遇到不少问题，而且没有在任何教程中找到完整的说明，尽管网上也有可行的教程&lt;sup id="fnref:9">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:9" class="footnote-ref" role="doc-noteref">9&lt;/a>&lt;/sup>，我还是记录下来。&lt;/p>
&lt;h4 id="注册">注册&lt;/h4>
&lt;p>在&lt;a href="https://www.leancloud.cn/">LeanCloud&lt;/a>官网中进行注册并登录。&lt;/p>
&lt;h4 id="应用配置">应用配置&lt;/h4>
&lt;p>进入控制台之后，点击&lt;code>创建应用&lt;/code>，填写应用名称，&lt;code>计价方案&lt;/code>选择开发版，创建成功之后，在对应应用右上角点击齿轮状的设置，如图：&lt;br />
&lt;img src="https://raw.githubusercontent.com/lmnsyunhao/blog-pica/master/hexo-leancloud-plugin-installation-tutor/3.png" alt="LeanCloud应用设置" title="LeanCloud应用设置" />&lt;br />
在设置界面，选择&lt;code>存储&lt;/code>，选择&lt;code>创建Class&lt;/code>，&lt;code>Class名称&lt;/code>输入&lt;code>Counter&lt;/code>，因为这个类名与Next主题兼容，默认ACL权限设置为&lt;code>无限制&lt;/code>即所有用户可读可写。&lt;br />
在设置界面，选择&lt;code>设置&lt;/code>，选择&lt;code>应用Keys&lt;/code>，将界面显示的&lt;code>AppID&lt;/code>和&lt;code>AppKey&lt;/code>复制，在主题配置文件修改时需要使用。&lt;br />
在上述的&lt;code>设置&lt;/code>选项下选择&lt;code>安全中心&lt;/code>，在&lt;code>Web安全域名&lt;/code>的填写框中输入博客的完整域名，保证统计数据只在记录的域名中有效。&lt;/p>
&lt;h4 id="博客配置">博客配置&lt;/h4>
&lt;p>在博客的&lt;code>../next/_config.yml&lt;/code>配置文件中，找到&lt;code>leancloud_visitors&lt;/code>，设置配置信息如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="c"># Show number of visitors to each article.&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># You can visit https://leancloud.cn get AppID and AppKey.&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">leancloud_visitors&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">enable&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">app_id&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">app_key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Dependencies: https://github.com/theme-next/hexo-leancloud-counter-security&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># If you don&amp;#39;t care about security in lc counter and just want to use it directly&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># (without hexo-leancloud-counter-security plugin), set the `security` to `false`.&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">security&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">betterPerformance&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>app_id&lt;/code>处填写应用配置时复制的&lt;code>AppID&lt;/code>，&lt;code>app_key&lt;/code>填写应用配置时复制的&lt;code>AppKey&lt;/code>。&lt;/p>
&lt;h4 id="安全插件安装及部署">安全插件安装及部署&lt;/h4>
&lt;p>如果上述配置完成后，更新部署博客，能够正常显示阅读数量，后续的内容可以选择跳过。&lt;br />
如果上述配置不能正常显示阅读数量，且存在&lt;code>Counter not initialized! See more at console err msg.&lt;/code>的问题，此时在博客页面打开控制台（Chrome下按&lt;code>F12&lt;/code>或右键选择&lt;code>检查&lt;/code>），点击&lt;code>Console&lt;/code>查看是否存在下图显示内容：&lt;br />
&lt;img src="https://raw.githubusercontent.com/lmnsyunhao/blog-pica/master/hexo-leancloud-plugin-installation-tutor/8.png" alt="Count类未初始化问题" title="Count类未初始化问题" />&lt;br />
这是因为LeanCloud插件存在安全问题，需要安装另一个插件&lt;code>hexo-leancloud-counter-security&lt;/code>进行完善。&lt;br />
首先在&lt;code>../next/_config.yml&lt;/code>主题配置文件中的&lt;code>leancloud_visitors&lt;/code>找到&lt;code>security&lt;/code>选项，将其改为&lt;code>true&lt;/code>，同时确认同一配置文件下的&lt;code>valine&lt;/code>部分的&lt;code>enable&lt;/code>和&lt;code>visitor&lt;/code>是&lt;code>false&lt;/code>，因为这两者会产生冲突，如果使用&lt;code>valine&lt;/code>作为评论系统，可以参照网上教程进行冲突解决。&lt;br />
然后在博客根目录下打开&lt;code>git bash&lt;/code>或&lt;code>CMD&lt;/code>，安装插件：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">npm install hexo-leancloud-counter-security --save
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>由于插件存在依赖性，出现&lt;code>Error: Cannot find module 'babel-runtime/regenerator'&lt;/code>错误时需要再安装模块&lt;code>babel-runtime&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">npm install babel-runtime --save
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>安装完成之后，注册用户，其中&lt;code>用户名&lt;/code>和&lt;code>密码&lt;/code>替换为你要设置的用户名和密码内容（不需要和LeanCloud的登陆名和登陆密码一样）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">hexo lc-counter r 用户名 密码
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>之后修改博客配置文件&lt;code>../hexo/_config.yml&lt;/code>，添加以下内容（所有选项都必须填写，此处的&lt;code>username&lt;/code>和&lt;code>password&lt;/code>即刚刚注册的用户名和密码，网上有教程认为此处空白可等部署时输入，但我部署时会因为配置缺少导致出错，所以建议配置中直接写入），否则部署时会报错&lt;code>TypeError: Cannot read property ‘enable_sync’ of undefined&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="k">leancloud_counter_security&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">enable_sync&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">app_id&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&amp;lt;&amp;lt;your&lt;span class="w"> &lt;/span>app&lt;span class="w"> &lt;/span>id&amp;gt;&lt;span class="sd">&amp;gt;
&lt;/span>&lt;span class="sd"> app_key: &amp;lt;&amp;lt;your app key&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">username&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&amp;lt;&amp;lt;your&lt;span class="w"> &lt;/span>username&amp;gt;&lt;span class="sd">&amp;gt;
&lt;/span>&lt;span class="sd"> password: &amp;lt;&amp;lt;your password&amp;gt;&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>之后在同一配置文件下的&lt;code>deploy&lt;/code>部分，做以下修改：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="k">deploy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="sd">-
&lt;/span>&lt;span class="sd"> type: git&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">repo&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>https&lt;span class="p">:&lt;/span>//github.com/username/username.github.io&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">branch&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>master&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="sd">-
&lt;/span>&lt;span class="sd"> type: leancloud_counter_security_sync&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>由于搭建博客时已经部署到GitHub，要同时部署git和leancloud需要在配置文件中写清楚，其中git部分的&lt;code>username&lt;/code>是对应博客的GitHub用户名，可参照我的博客&lt;a href="https://linwhitehat.github.io/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.html">搭建个人博客(hexo+next+github）&lt;/a>中的说明。&lt;br />
完成插件安装和配置修改后，到LeanCloud的应用中查看&lt;code>存储&lt;/code>下的&lt;code>_User&lt;/code>项，是否已经添加刚刚注册的用户，如图：&lt;br />
&lt;img src="https://raw.githubusercontent.com/lmnsyunhao/blog-pica/master/hexo-leancloud-plugin-installation-tutor/9.png" alt="LeanCloud用户查看" title="LeanCloud用户查看" />&lt;br />
存在用户后，查看&lt;code>Counter&lt;/code>项，对表权限进行修改，点击&lt;code>Counter&lt;/code>，选择&lt;code>权限&lt;/code>，点击&lt;code>修改&lt;/code>，分别修改&lt;code>add_fields&lt;/code>、&lt;code>create&lt;/code>和&lt;code>delete&lt;/code>。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/LeanCloud_Counter.webp" alt="Counter权限修改" title="Counter权限修改" />&lt;br />
&lt;code>add_fields&lt;/code>和&lt;code>create&lt;/code>两项的修改步骤一致：&lt;br />
1）选择&lt;code>指定用户&lt;/code>&lt;br />
2）输入已注册的用户名，添加&lt;br />
&lt;img src="https://raw.githubusercontent.com/lmnsyunhao/blog-pica/master/hexo-leancloud-plugin-installation-tutor/11.png" alt="添加用户" title="添加用户" />&lt;br />
3）查看已添加用户正常显示&lt;br />
&lt;img src="https://raw.githubusercontent.com/lmnsyunhao/blog-pica/master/hexo-leancloud-plugin-installation-tutor/12.png" alt="用户添加成功效果" title="用户添加成功效果" />&lt;br />
对于&lt;code>delete&lt;/code>项，只保留上述第一个步骤即可，不需要添加用户。&lt;br />
如果希望保护访问数据不被篡改，可以选择&lt;code>云引擎&lt;/code>，选择&lt;code>部署&lt;/code>，选择&lt;code>在线编辑&lt;/code>，点击&lt;code>创建函数&lt;/code>，选项依次选择&lt;code>Hook&lt;/code>、&lt;code>beforeUpdate&lt;/code>和&lt;code>Counter&lt;/code>，在函数中添加以下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kd">var&lt;/span> &lt;span class="nx">query&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">AV&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Query&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Counter&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">request&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">updatedKeys&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">indexOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;time&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">query&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">request&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">obj&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">obj&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;time&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="nx">request&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;time&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">AV&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Cloud&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nb">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Invalid update!&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/lmnsyunhao/blog-pica/master/hexo-leancloud-plugin-installation-tutor/18.png" alt="云引擎设置内容" title="云引擎设置内容" />&lt;br />
保存上述设置之后，可看到添加的函数，点击&lt;code>部署&lt;/code>，等待部署完成即可。&lt;br />
&lt;img src="https://raw.githubusercontent.com/lmnsyunhao/blog-pica/master/hexo-leancloud-plugin-installation-tutor/21.png" alt="部署完成日志" title="部署完成日志" />&lt;/p>
&lt;h4 id="修改lean-analyticsswig配置">修改lean-analytics.swig配置&lt;/h4>
&lt;p>如果上述配置完成后正常显示阅读数可跳过这部分，若出现阅读数不正常且显示为0，可参照此部分&lt;sup id="fnref:10">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:10" class="footnote-ref" role="doc-noteref">10&lt;/a>&lt;/sup>，原因可能是LeanCloud接口出现变化。对&lt;code>..\next\layout_third-party\statistics\lean-analytics.swig&lt;/code>做以下修改：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff"># 修改第13行，-表示删除，+表示添加
&lt;span class="gd">- Counter(&amp;#39;get&amp;#39;, `/classes/Counter?where=${JSON.stringify({ url })}`)
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ Counter(&amp;#39;get&amp;#39;, `/classes/Counter?where=${encodeURIComponent(JSON.stringify({ url }))}&amp;amp;limit=1`)
&lt;/span>&lt;span class="gi">&lt;/span>
# 修改第58行
&lt;span class="gd">- Counter(&amp;#39;get&amp;#39;, `/classes/Counter?where=${JSON.stringify({ url: { &amp;#39;$in&amp;#39;: entries } })}`)
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ Counter(&amp;#39;get&amp;#39;, `?where=${encodeURIComponent(JSON.stringify({ url: { &amp;#39;$in&amp;#39;: entries } }))}`)
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="设置中文缩进">设置中文缩进&lt;/h3>
&lt;p>中文撰写时习惯首行缩进，但是直接输入空格不能奏效，网上有教程可以设置自动缩进&lt;code>2 em&lt;/code>，但是这样设置后还需要对不需要缩进的位置进行单独设置，同时自动缩进可能对排版不友好的文章不友好，可能在不该缩进的地方都给缩进了，所以我选择在写博文时手动在需要缩进的地方进行设置，即手动输入空格，此处将习惯的&lt;code>space&lt;/code>即空格键输入换成&lt;code>&amp;amp;emsp;&lt;/code>或&lt;code>&amp;amp;#8195;&lt;/code>即可&lt;sup id="fnref:11">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:11" class="footnote-ref" role="doc-noteref">11&lt;/a>&lt;/sup>，输入两个即缩进两格，注意分号&lt;code>;&lt;/code>不要漏掉，其他空格替换符如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">半方大的空白： &lt;span class="sb">`&amp;amp;ensp;`&lt;/span> or &lt;span class="sb">`&amp;amp;#8194;`&lt;/span>
全方大的空白： &lt;span class="sb">`&amp;amp;emsp;`&lt;/span> or &lt;span class="sb">`&amp;amp;#8195;`&lt;/span>
不断行的空白格： &lt;span class="sb">`&amp;amp;nbsp;`&lt;/span> or &lt;span class="sb">`&amp;amp;#160;`&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="静态代码压缩">静态代码压缩&lt;/h3>
&lt;p>为了让博客源码显得紧凑，也为了让网站加载速度变快，使用&lt;code>gulp&lt;/code>对博客源码进行压缩。&lt;sup id="fnref:12">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:12" class="footnote-ref" role="doc-noteref">12&lt;/a>&lt;/sup>&lt;br />
1）安装&lt;code>gulp&lt;/code>插件&lt;br />
安装&lt;code>gulp&lt;/code>记得需要在全局环境下进行安装，不要只在博客根目录下的环境进行安装，否则会导致&lt;code>gulp&lt;/code>无法正常执行。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">npm install gulp --save &lt;span class="c1">#安装gulp&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2）安装功能模块&lt;br />
以下功能模块会在后续配置中使用，可以根据个人实际需要进行选择安装，一般建议&lt;code>html&lt;/code>和&lt;code>css&lt;/code>相关源码进行压缩，所以对应模块建议安装。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 安装功能模块&lt;/span>
npm install gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin --save
&lt;span class="c1"># 额外的功能模块&lt;/span>
npm install gulp-debug gulp-clean-css gulp-changed gulp-if gulp-plumber gulp-babel babel-preset-env del --save
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3）&lt;code>gulpfile.js&lt;/code>配置&lt;br />
在博客根目录&lt;code>../hexo&lt;/code>新建文件&lt;code>gulpfile.js&lt;/code>，添加以下配置信息，可根据自身需要进行修改：&lt;/p>
&lt;details>
&lt;summary>点击查看具体代码&lt;/summary>
``` javascript
var gulp = require("gulp");
var debug = require("gulp-debug");
var cleancss = require("gulp-clean-css"); //css压缩组件
var uglify = require("gulp-uglify"); //js压缩组件
var htmlmin = require("gulp-htmlmin"); //html压缩组件
var htmlclean = require("gulp-htmlclean"); //html清理组件
var imagemin = require("gulp-imagemin"); //图片压缩组件
var changed = require("gulp-changed"); //文件更改校验组件
var gulpif = require("gulp-if"); //任务 帮助调用组件
var plumber = require("gulp-plumber"); //容错组件（发生错误不跳出任务，并报出错误内容）
var isScriptAll = true; //是否处理所有文件，(true|处理所有文件)(false|只处理有更改的文件)
var isDebug = true; //是否调试显示 编译通过的文件
var gulpBabel = require("gulp-babel");
var es2015Preset = require("babel-preset-es2015");
var del = require("del");
var Hexo = require("hexo");
var hexo = new Hexo(process.cwd(), {}); // 初始化一个hexo对象
&lt;p>// 清除public文件夹&lt;br />
gulp.task(&amp;quot;clean&amp;quot;, function() {&lt;br />
return del([&amp;quot;public/**/*&amp;quot;]);&lt;br />
});&lt;/p>
&lt;p>// 下面几个跟hexo有关的操作，主要通过hexo.call()去执行，注意return&lt;br />
// 创建静态页面 （等同 hexo generate）&lt;br />
gulp.task(&amp;quot;generate&amp;quot;, function() {&lt;br />
return hexo.init().then(function() {&lt;br />
return hexo&lt;br />
.call(&amp;quot;generate&amp;quot;, {&lt;br />
watch: false&lt;br />
})&lt;br />
.then(function() {&lt;br />
return hexo.exit();&lt;br />
})&lt;br />
.catch(function(err) {&lt;br />
return hexo.exit(err);&lt;br />
});&lt;br />
});&lt;br />
});&lt;/p>
&lt;p>// 启动Hexo服务器&lt;br />
gulp.task(&amp;quot;server&amp;quot;, function() {&lt;br />
return hexo&lt;br />
.init()&lt;br />
.then(function() {&lt;br />
return hexo.call(&amp;quot;server&amp;quot;, {});&lt;br />
})&lt;br />
.catch(function(err) {&lt;br />
console.log(err);&lt;br />
});&lt;br />
});&lt;/p>
&lt;p>// 部署到服务器&lt;br />
gulp.task(&amp;quot;deploy&amp;quot;, function() {&lt;br />
return hexo.init().then(function() {&lt;br />
return hexo&lt;br />
.call(&amp;quot;deploy&amp;quot;, {&lt;br />
watch: false&lt;br />
})&lt;br />
.then(function() {&lt;br />
return hexo.exit();&lt;br />
})&lt;br />
.catch(function(err) {&lt;br />
return hexo.exit(err);&lt;br />
});&lt;br />
});&lt;br />
});&lt;/p>
&lt;p>// 压缩public目录下的js文件&lt;br />
gulp.task(&amp;quot;compressJs&amp;quot;, function() {&lt;br />
return gulp&lt;br />
.src([&amp;quot;./public/&lt;strong>/*.js&amp;quot;, &amp;quot;!./public/libs/&lt;/strong>&amp;quot;]) //排除的js&lt;br />
.pipe(gulpif(!isScriptAll, changed(&amp;quot;./public&amp;quot;)))&lt;br />
.pipe(gulpif(isDebug, debug({ title: &amp;quot;Compress JS:&amp;quot; })))&lt;br />
.pipe(plumber())&lt;br />
.pipe(&lt;br />
gulpBabel({&lt;br />
presets: [es2015Preset] // es5检查机制&lt;br />
})&lt;br />
)&lt;br />
.pipe(uglify()) //调用压缩组件方法uglify(),对合并的文件进行压缩&lt;br />
.pipe(gulp.dest(&amp;quot;./public&amp;quot;)); //输出到目标目录&lt;br />
});&lt;/p>
&lt;p>// 压缩public目录下的css文件&lt;br />
gulp.task(&amp;quot;compressCss&amp;quot;, function() {&lt;br />
var option = {&lt;br />
rebase: false,&lt;br />
//advanced: true, //类型：Boolean 默认：true [是否开启高级优化（合并选择器等）]&lt;br />
compatibility: &amp;quot;ie7&amp;quot; //保留ie7及以下兼容写法 类型：String 默认：''or'&lt;em>' [启用兼容模式； 'ie7'：IE7兼容模式，'ie8'：IE8兼容模式，'&lt;/em>'：IE9+兼容模式]&lt;br />
//keepBreaks: true, //类型：Boolean 默认：false [是否保留换行]&lt;br />
//keepSpecialComments: '&lt;em>' //保留所有特殊前缀 当你用autoprefixer生成的浏览器前缀，如果不加这个参数，有可能将会删除你的部分前缀&lt;br />
};&lt;br />
return gulp&lt;br />
.src([&amp;quot;./public/**/&lt;/em>.css&amp;quot;, &amp;quot;!./public/**/*.min.css&amp;quot;]) //排除的css&lt;br />
.pipe(gulpif(!isScriptAll, changed(&amp;quot;./public&amp;quot;)))&lt;br />
.pipe(gulpif(isDebug, debug({ title: &amp;quot;Compress CSS:&amp;quot; })))&lt;br />
.pipe(plumber())&lt;br />
.pipe(cleancss(option))&lt;br />
.pipe(gulp.dest(&amp;quot;./public&amp;quot;));&lt;br />
});&lt;/p>
&lt;p>// 压缩public目录下的html文件&lt;br />
gulp.task(&amp;quot;compressHtml&amp;quot;, function() {&lt;br />
var cleanOptions = {&lt;br />
protect: /&amp;lt;!--%fooTemplate\b.&lt;em>?%--&amp;gt;/g, //忽略处理&lt;br />
unprotect: /&amp;lt;script [^&amp;gt;]&lt;/em>\btype=&amp;quot;text/x-handlebars-template&amp;quot;[\s\S]+?&amp;lt;/script&amp;gt;/gi //特殊处理&lt;br />
};&lt;br />
var minOption = {&lt;br />
collapseWhitespace: true, //压缩HTML&lt;br />
collapseBooleanAttributes: true, //省略布尔属性的值 &lt;input checked="true"/> ==&amp;gt; &lt;input />&lt;br />
removeEmptyAttributes: true, //删除所有空格作属性值 &lt;input id="" /> ==&amp;gt; &lt;input />&lt;br />
removeScriptTypeAttributes: true, //删除&lt;script>的type=&amp;quot;text/javascript&amp;quot;&lt;br />
removeStyleLinkTypeAttributes: true, //删除&lt;style>和&lt;link>的type=&amp;quot;text/css&amp;quot;&lt;br />
removeComments: true, //清除HTML注释&lt;br />
minifyJS: true, //压缩页面JS&lt;br />
minifyCSS: true, //压缩页面CSS&lt;br />
minifyURLs: true //替换页面URL&lt;br />
};&lt;br />
return gulp&lt;br />
.src(&amp;quot;./public/**/*.html&amp;quot;)&lt;br />
.pipe(gulpif(isDebug, debug({ title: &amp;quot;Compress HTML:&amp;quot; })))&lt;br />
.pipe(plumber())&lt;br />
.pipe(htmlclean(cleanOptions))&lt;br />
.pipe(htmlmin(minOption))&lt;br />
.pipe(gulp.dest(&amp;quot;./public&amp;quot;));&lt;br />
});&lt;/p>
&lt;p>// 压缩 public/uploads 目录内图片&lt;br />
gulp.task(&amp;quot;compressImage&amp;quot;, function() {&lt;br />
var option = {&lt;br />
optimizationLevel: 5, //类型：Number 默认：3 取值范围：0-7（优化等级）&lt;br />
progressive: true, //类型：Boolean 默认：false 无损压缩jpg图片&lt;br />
interlaced: false, //类型：Boolean 默认：false 隔行扫描gif进行渲染&lt;br />
multipass: false //类型：Boolean 默认：false 多次优化svg直到完全优化&lt;br />
};&lt;br />
return gulp&lt;br />
.src(&amp;quot;./public/medias/**/&lt;em>.&lt;/em>&amp;quot;)&lt;br />
.pipe(gulpif(!isScriptAll, changed(&amp;quot;./public/medias&amp;quot;)))&lt;br />
.pipe(gulpif(isDebug, debug({ title: &amp;quot;Compress Images:&amp;quot; })))&lt;br />
.pipe(plumber())&lt;br />
.pipe(imagemin(option))&lt;br />
.pipe(gulp.dest(&amp;quot;./public&amp;quot;));&lt;br />
});&lt;br />
// 执行顺序： 清除public目录 -&amp;gt; 产生原始博客内容 -&amp;gt; 执行压缩混淆 -&amp;gt; 部署到服务器&lt;br />
gulp.task(&lt;br />
&amp;quot;build&amp;quot;,&lt;br />
gulp.series(&lt;br />
&amp;quot;clean&amp;quot;,&lt;br />
&amp;quot;generate&amp;quot;,&lt;br />
&amp;quot;compressHtml&amp;quot;,&lt;br />
&amp;quot;compressCss&amp;quot;,&lt;br />
&amp;quot;compressJs&amp;quot;,&lt;br />
&amp;quot;compressImage&amp;quot;,&lt;br />
gulp.parallel(&amp;quot;deploy&amp;quot;)&lt;br />
)&lt;br />
);&lt;/p>
&lt;p>// 默认任务&lt;br />
gulp.task(&lt;br />
&amp;quot;default&amp;quot;,&lt;br />
gulp.series(&lt;br />
&amp;quot;clean&amp;quot;,&lt;br />
&amp;quot;generate&amp;quot;,&lt;br />
gulp.parallel(&amp;quot;compressHtml&amp;quot;, &amp;quot;compressCss&amp;quot;, &amp;quot;compressImage&amp;quot;, &amp;quot;compressJs&amp;quot;)&lt;br />
)&lt;br />
);&lt;/p>
&lt;pre>&lt;code>&amp;lt;/details&amp;gt;
4）部署
完成配置修改后，在博客根目录下打开`git bash`，按照[配置修改后更新部署即可](#Update)。
5）Html/JS压缩及还原
经过压缩的源码想再编辑时需要还原为原来的形式，使用[TOOL](https://tool.lu/html/)可以快速还原前端代码，方便二次编辑。
### 友情链接
在`Next.Mist`主题下，友情链接默认显示在`站点概览`下方，在主题配置文件`../next/_config.yml`中找到`Blog rolls`设置块，其中`links_settings`是对友链的样式进行配置，`links`下按照以下格式添加即可添加友情链接：
``` yaml
林深时见璐: https://linwhitehat.github.io/
&lt;/code>&lt;/pre>&lt;h3 id="添加音乐">添加音乐&lt;/h3>
&lt;p>在分享博客时，一些文艺类型的博客可能适合添加背景音乐，既烘托文章意蕴，也让阅读者能欣赏雅乐。博客撰写是使用markdown，而markdown对html语法的支持是天然的，而为了在博客中样式更为美观，需要使用css进行一定设置，更多样式可参照此博客&lt;sup id="fnref:13">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:13" class="footnote-ref" role="doc-noteref">13&lt;/a>&lt;/sup>&lt;sup id="fnref:14">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:14" class="footnote-ref" role="doc-noteref">14&lt;/a>&lt;/sup>，博文中直接写入以下代码（外链不可生成情况可能无法播放）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nt">iframe&lt;/span>
&lt;span class="nt">frameborder&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;no&amp;#34;&lt;/span> &lt;span class="nt">border&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span> &lt;span class="nt">marginwidth&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>
&lt;span class="nt">marginheight&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span> &lt;span class="nt">width&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nt">330&lt;/span> &lt;span class="nt">height&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nt">86&lt;/span>
&lt;span class="nt">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;//music.163.com/outchain/player?type=2&amp;amp;id=461544312&amp;amp;auto=0&amp;amp;height=66&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="nt">iframe&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>效果如下：&lt;/p>
&lt;iframe
frameborder="no" border="0" marginwidth="0"
marginheight="0" width=330 height=86
src="https://linwhitehat.github.io//music.163.com/outchain/player?type=2&amp;id=461544312&amp;auto=0&amp;height=66">
&lt;/iframe>
&lt;h3 id="博客发表按时间进行文件目录存放">博客发表按时间进行文件目录存放&lt;/h3>
&lt;p>默认情况下发表博客都会存放在&lt;code>_post&lt;/code>目录下，刚开始时博客较少比较容易查看，但是随着时间积累，博客增多，因此建议按照时间进行存放发表的博客，根据发表时间查找对应博客，对于后续更新修改比较方便，修改位置是&lt;code>../hexo/_comfig.yml&lt;/code>，具体设置如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="gd">- new_post_name: :title.md
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ new_post_name: :year/:month/:day/:title.md
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>而发布文章之后，希望同样按照时间子目录存储，可以设置如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="gd">- permalink: :title.html
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ permalink: :year/:month/:day/:title.html
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="博客菜单栏页面存在安全问题">博客菜单栏页面存在“安全问题”&lt;/h3>
&lt;p>Q：当访问博客菜单栏某页面，chrome浏览器显示“访问存在安全问题： provisional headers are shown”，如我的&lt;code>About&lt;/code>页面，但是证书、https都是正常的，在使用 Github Page 部署时也强制全站https部署，这个安全问题为何会出现？&lt;br />
A：问题存在于使用外链资源，一般是图片、音视频等，可以将资源放到自身博客目录下引用，便不存在chrome的安全警告了。而这个问题引起安全警告的本质是引用外链产生的跨域请求被拦截导致的。&lt;sup id="fnref:15">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:15" class="footnote-ref" role="doc-noteref">15&lt;/a>&lt;/sup>&lt;/p>
&lt;h3 id="博客页脚样式修改">博客页脚样式修改&lt;/h3>
&lt;p>在&lt;code>../next/source/css/_schemes/Mist&lt;/code>目录下找到配置文件&lt;code>_layout.styl&lt;/code>，定位到&lt;code>Footer&lt;/code>，修改&lt;code>.footer-inner&lt;/code>如下:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff">.footer-inner {
&lt;span class="gd">- text-align: left;
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ text-align: center;
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="主题自定义设计思路">主题自定义设计思路&lt;/h2>
&lt;p>Next主题本身有不少默认配置，但是如果对前端设计有更多想法可以实现主题自定义即“魔改”，要实现主题自定义可以对任意内容做修改，而写这篇博文是想总结自定义的思路，因为Next的版本更替会有配置修改变化，同时要实现自定义就需要对博客的配置全貌了解。在&lt;code>../hexo/source/_data/&lt;/code>目录下可以自建自定义样式文件，在&lt;code>../next/_config.yml&lt;/code>主题配置文件中&lt;code>custom_file_path&lt;/code>即对应自定义配置文件信息，而调试的过程可以在浏览器的开发者模式下进行调试&lt;sup id="fnref:16">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:16" class="footnote-ref" role="doc-noteref">16&lt;/a>&lt;/sup>。&lt;/p>
&lt;h3 id="自定义站点logo">自定义站点LOGO&lt;/h3>
&lt;p>默认的Hexo博客使用的是Hexo的Logo，在chrome浏览器访问博客时，标签页的图标即默认Logo，而Hexo博客本身支持使用自定义的图标，修改站点Logo步骤如下：&lt;/p>
&lt;ol>
&lt;li>选取合适的图片，制作favicon图标，使用&lt;a href="http://www.bitbug.net/">比特虫&lt;/a>&lt;sup id="fnref:17">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:17" class="footnote-ref" role="doc-noteref">17&lt;/a>&lt;/sup>生成&lt;code>ico&lt;/code>格式文件；&lt;/li>
&lt;li>存储自定义的&lt;code>ico&lt;/code>图片文件到&lt;code>../next/source/images&lt;/code>目录下；&lt;/li>
&lt;li>修改博客主题配置文件&lt;code>../next/_config.yml&lt;/code>，找到&lt;code>favicon&lt;/code>选项，修改如下：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">- &lt;span class="k">small&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/images/favicon-16x16-next.png&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>- &lt;span class="k">medium&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/images/favicon-32x32-next.png&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">+ small&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/images/new-favicon-16x16.ico&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">+ medium&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/images/new-favicon-32x32.ico&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="自定义404">自定义404&lt;/h3>
&lt;p>在主题配置文件中添加&lt;code>404&lt;/code>页面，有两种方式添加&lt;code>404&lt;/code>页面，一种是基于markdown解析，一种是基于html解析，网络教程还提供更多&lt;code>javascript&lt;/code>及&lt;code>css&lt;/code>样式进行自定义，使页面更加美观，可参照&lt;sup id="fnref:18">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:18" class="footnote-ref" role="doc-noteref">18&lt;/a>&lt;/sup>&lt;sup id="fnref:19">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:19" class="footnote-ref" role="doc-noteref">19&lt;/a>&lt;/sup>&lt;sup id="fnref:20">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:20" class="footnote-ref" role="doc-noteref">20&lt;/a>&lt;/sup>。&lt;/p>
&lt;ol>
&lt;li>markdown解析&lt;br />
与生成&lt;code>归档&lt;/code>、&lt;code>分类&lt;/code>的方法相同，可以在主题配置文件&lt;code>../next/_config.yml&lt;/code>中找到&lt;code>menu&lt;/code>，添加：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="k">commonweal&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>/&lt;span class="m">404&lt;/span>/&lt;span class="w"> &lt;/span>||&lt;span class="w"> &lt;/span>heartbeat&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在&lt;code>../hexo/source/&lt;/code>目录下新建&lt;code>404&lt;/code>目录，目录下新建&lt;code>index.md&lt;/code>，或者在博客根目录打开&lt;code>git bash&lt;/code>，执行：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">hexo new page &lt;span class="s2">&amp;#34;404&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在&lt;code>../source/404/index.md&lt;/code>中添加以下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">---
title: 404 Not Found：该页无法显示
toc: false
comments: false
permalink: /404
---
&lt;span class="cp">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;UTF-8&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>404&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text/javascript&amp;#34;&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js&amp;#34;&lt;/span> &lt;span class="na">homePageName&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;返回首页&amp;#34;&lt;/span> &lt;span class="na">homePageUrl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://www.nickyam.com&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
true&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>&lt;span id="404">html解析&lt;/span>&lt;br />
不使用默认的&lt;code>markdown&lt;/code>解析404页面，而是自定义一个独立页面，使用腾讯公益作为&lt;code>404&lt;/code>页面内容，同时加上&lt;code>返回博客&lt;/code>字样及跳转。&lt;br />
在&lt;code>hexo/source/&lt;/code>下新建&lt;code>404.html&lt;/code>，需要避免markdown渲染，在&lt;code>404.html&lt;/code>开头加上&lt;code>layout: false&lt;/code>，html内容如下:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">layout: false
&lt;span class="cp">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span> &lt;span class="na">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;en&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>404&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text/javascript&amp;#34;&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js&amp;#34;&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;utf-8&amp;#34;&lt;/span> &lt;span class="na">homePageUrl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span> &lt;span class="na">homePageName&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;返回博客&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="自定义字体">自定义字体&lt;/h3>
&lt;h4 id="字体默认配置">字体默认配置&lt;/h4>
&lt;p>博客默认的字体可能看起来不美观，可以在博客主题配置相关文件&lt;code>../next/source/css/_variables/base.styl&lt;/code>中查看默认的字体配置信息如下:&lt;/p>
&lt;pre>&lt;code class="language-style" data-lang="style">$font-family-chinese = &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;;
$font-family-base = $font-family-chinese, sans-serif;
$font-family-base = get_font_family('global'), $font-family-chinese, sans-serif if get_font_family('global');
$font-family-logo = $font-family-base;
$font-family-logo = get_font_family('title'), $font-family-base if get_font_family('title');
$font-family-headings = $font-family-base;
$font-family-headings = get_font_family('headings'), $font-family-base if get_font_family('headings');
$font-family-posts = $font-family-base;
$font-family-posts = get_font_family('posts'), $font-family-base if get_font_family('posts');
$font-family-monospace = consolas, Menlo, monospace, $font-family-chinese;
$font-family-monospace = get_font_family('codes'), consolas, Menlo, monospace, $font-family-chinese if get_font_family('codes');
$font-family-icons = 'FontAwesome';
&lt;/code>&lt;/pre>&lt;h4 id="使用googlr-fonts字体">使用Googlr Fonts字体&lt;/h4>
&lt;p>通过在线加载字体的方式实现博客字体自定义（也可以选择本地字体，可见网上教程），&lt;a href="https://fonts.google.com/">Google Fonts&lt;/a>提供的英文字体质量很高，同时近几年也开始提供多种中文字体（也有其他语言字体），尽管样式有限，但是质量还是不错的。Next主题中带有字体修改配置，在主题配置文件&lt;code>../next/_config.yml&lt;/code>中找到&lt;code>font&lt;/code>，可看到默认设置：&lt;/p>
&lt;details>
&lt;summary>点击查看具体代码&lt;/summary>
``` yaml
font:
# Use custom fonts families or not.
# Depended options: `external` and `family`.
enable: false
&lt;h1 id="uri-of-fonts-host-eg-fontsgoogleapiscom-default">Uri of fonts host, e.g. //fonts.googleapis.com (Default).&lt;/h1>
&lt;p>host:&lt;/p>
&lt;h1 id="font-options">Font options:&lt;/h1>
&lt;h1 id="external-true-will-load-this-font-family-from-host-above">&lt;code>external: true&lt;/code> will load this font family from &lt;code>host&lt;/code> above.&lt;/h1>
&lt;h1 id="family-times-new-roman-without-any-quotes">&lt;code>family: Times New Roman&lt;/code>. Without any quotes.&lt;/h1>
&lt;h1 id="size-xx-use-em-as-unit-default-1-16px">&lt;code>size: x.x&lt;/code>. Use &lt;code>em&lt;/code> as unit. Default: 1 (16px)&lt;/h1>
&lt;h1 id="global-font-settings-used-for-all-elements-inside-body">Global font settings used for all elements inside &lt;body>.&lt;/h1>
&lt;p>global:&lt;br />
external: true&lt;br />
family: Lato&lt;br />
size:&lt;/p>
&lt;h1 id="font-settings-for-site-title-site-title">Font settings for site title (.site-title).&lt;/h1>
&lt;p>title:&lt;br />
external: true&lt;br />
family:&lt;br />
size:&lt;/p>
&lt;h1 id="font-settings-for-headlines-h1-to-h6">Font settings for headlines (&lt;h1> to &lt;h6>).&lt;/h1>
&lt;p>headings:&lt;br />
external: true&lt;br />
family:&lt;br />
size:&lt;/p>
&lt;h1 id="font-settings-for-posts-post-body">Font settings for posts (.post-body).&lt;/h1>
&lt;p>posts:&lt;br />
external: true&lt;br />
family:&lt;/p>
&lt;h1 id="font-settings-for-code-and-code-blocks">Font settings for &lt;code> and code blocks.&lt;/h1>
&lt;p>codes:&lt;br />
external: true&lt;br />
family:&lt;/p>
&lt;pre>&lt;code>&amp;lt;/details&amp;gt;
修改配置步骤如下:
1. 将`enable`选项修改为`true`，`host`可修改为国内镜像`fonts.loli.net`；
2. `global`、`title`、`posts`等选项是对具体项的字体设置，建议参考以下设置：
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>global: 网站全局字体设置，建议填写英文字体&lt;/li>
&lt;li>其他类型可根据个人喜好&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>3. 设置博客中文字体
在`../next/source/css/_variables/base.styl`中修改默认中文字体，例如我选择中文字体为`Noto Serif SC`，修改如下：
``` diff
// Font families.
-$font-family-chinese = &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;
+$font-family-chinese = &amp;quot;Noto Serif SC&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;
&lt;/code>&lt;/pre>&lt;ol start="4">
&lt;li>加载字体设置&lt;br />
在博客中载入设置的字体，在自定义文件&lt;code>../hexo/source/_data/head.swig&lt;/code>中加入以下内容：&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-swig" data-lang="swig">&amp;lt;link href=&amp;quot;https://fonts.googleapis.com/css?family=Noto+Serif+SC:400,500,700&amp;amp;display=swap&amp;amp;subset=chinese-simplified&amp;quot; rel=&amp;quot;stylesheet&amp;quot;&amp;gt;
&lt;/code>&lt;/pre>&lt;p>加入的&lt;code>&amp;lt;link&amp;gt;&lt;/code>标签内容在Google Fonts中生成，选中一款字体后，点&lt;code>+&lt;/code>号选择，在底部会有一个选项框，点击一下会弹出字体设置框，点击&lt;code>CUSTOMIZE&lt;/code>，对字体进行自定义设置，然后在&lt;code>EMBED&lt;/code>中可以看到自动生成的&lt;code>&amp;lt;link&amp;gt;&lt;/code>代码，将其添加到上述对应位置，其中域名&lt;code>fonts.googleapis.com&lt;/code>可修改为国内镜像域名&lt;code>fonts.loli.net&lt;/code>。&lt;/p>
&lt;h3 id="自定义超链接样式">自定义超链接样式&lt;/h3>
&lt;p>在自定义样式文件&lt;code>../hexo/source/_data/styles.styl&lt;/code>中添加以下内容，主要是颜色和下划线的设置，其他可以根据个人喜欢修改（颜色可参照&lt;a href="https://tool.oschina.net/commons?type=3">RGB&lt;/a>）&lt;sup id="fnref:21">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:21" class="footnote-ref" role="doc-noteref">21&lt;/a>&lt;/sup>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="o">//&lt;/span> &lt;span class="nt">超链接样式&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">post-body&lt;/span> &lt;span class="nt">a&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">rgb&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">178&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">170&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">border-bottom&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="err">&amp;amp;:hover&lt;/span> &lt;span class="err">{&lt;/span>
&lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">rgb&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">144&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">255&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">text-decoration&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">underline&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="err">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">posts-expand&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nc">post-meta&lt;/span> &lt;span class="nt">a&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nc">post-copyright&lt;/span> &lt;span class="nt">a&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">border-bottom&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="err">&amp;amp;:hover&lt;/span> &lt;span class="err">{&lt;/span>
&lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">rgb&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">144&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">255&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">text-decoration&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">underline&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="err">}&lt;/span>
&lt;span class="nt">a&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">border-bottom-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">rgb&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">80&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">115&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">184&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nt">a&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">hover&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">rgb&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">144&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">255&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">border-bottom-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">rgb&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">144&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">255&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="自定义独立页面">自定义独立页面&lt;/h3>
&lt;p>相信在&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#404">404&lt;/a>页面部分，已经初步了解了独立页面的设计，在博客中可以自定义设计很多独立页面，可以加上自定义的css样式和javascript脚本渲染，比如加入相册、视频等，而要做到独立站点且渲染效果和自己设计的一致，最重要的是&lt;code>避免博客默认的markdown渲染&lt;/code>&lt;sup id="fnref:22">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:22" class="footnote-ref" role="doc-noteref">22&lt;/a>&lt;/sup>&lt;sup id="fnref:23">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:23" class="footnote-ref" role="doc-noteref">23&lt;/a>&lt;/sup>。避免渲染的方式有很多，网上教程会介绍在html页面起始加上&lt;code>layout: false&lt;/code>，但我更推荐另一种方法即&lt;code>skip_render&lt;/code>参数设置，这种方法合适各种不需要博客默认解析的配置文件，具体操作是在博客根目录的配置文件&lt;code>../hexo/_config.yml&lt;/code>找到&lt;code>skip_render&lt;/code>，做出以下修改，&lt;code>DIY_folder&lt;/code>即自定义独立页面所在文件夹，&lt;code>**&lt;/code>表示该文件夹下所有文件：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="k">skip_render&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>README.md&lt;span class="p">,&lt;/span>DIY_folder/&lt;span class="cp">**]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="自定义个人主页">自定义个人主页&lt;/h3>
&lt;p>在正常 Hexo 博客搭建后，使用 Github Page 部署，默认的博客首页即&lt;code>name.github.io&lt;/code>对应的页面即博客首页，效果见&lt;a href="https://linwhitehat.github.io/">个人首页&lt;/a>。而如果想域名指向自定义的个人首页，由首页访问博客链接跳转。就像古代的家庭，进门会有个门面，转而才见黄金屋。这样博客整体会让人感觉更完整，在此也推荐默认主题便带有这种美感的网站框架&lt;a href="https://gohugo.io/">Hugo&lt;/a>，基于此的博客可参考友链中的&lt;code>reuixiy&lt;/code>和&lt;code>荷戟独彷徨&lt;/code>，本部分教程参考&lt;sup id="fnref:24">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:24" class="footnote-ref" role="doc-noteref">24&lt;/a>&lt;/sup>&lt;sup id="fnref:25">&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fn:25" class="footnote-ref" role="doc-noteref">25&lt;/a>&lt;/sup>并根据实际情况修改。&lt;/p>
&lt;p>言归正传，使用 Hexo 搭建博客后，要修改博客域名执行的首页，主要包含两部分：&lt;/p>
&lt;ol>
&lt;li>建立自定义主页；&lt;/li>
&lt;li>迁移博客到新地址。&lt;/li>
&lt;/ol>
&lt;h4 id="建立自定义主页">建立自定义主页&lt;/h4>
&lt;p>新建&lt;code>index.html&lt;/code>文件，内容包含博客的跳转如&lt;code>&amp;lt;a href=&amp;quot;https://linwhitehat.github.io/Blog&amp;quot; target=&amp;quot;_self&amp;quot;&amp;gt;Blog&amp;lt;/a&amp;gt;&lt;/code>，可以自定义添加js内容，作为主页展示。&lt;/p>
&lt;h4 id="迁移博客">迁移博客&lt;/h4>
&lt;ol>
&lt;li>在 GitHub 中新建仓库，我命名为&lt;code>Blog&lt;/code>，初始化仓库完成在&lt;code>Setting&lt;/code>中配置&lt;code>Github Page&lt;/code>；&lt;/li>
&lt;li>修改博客配置&lt;code>../hexo/_config.yml&lt;/code>中的&lt;code>URL&lt;/code>和&lt;code>Deployment&lt;/code>如下：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff"># URL
&lt;span class="gd">- url: https://linwhitehat.github.io
&lt;/span>&lt;span class="gd">- root: /
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ url: https://linwhitehat.github.io/Blog
&lt;/span>&lt;span class="gi">+ root: /Blog/
&lt;/span>&lt;span class="gi">&lt;/span>
# Deployment
deploy:
&lt;span class="gd">- repo: https://github.com/linwhitehat/linwhitehat.github.io
&lt;/span>&lt;span class="gd">&lt;/span>&lt;span class="gi">+ repo: https://github.com/linwhitehat/Blog
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>将 GitHub 原先的博客仓库&lt;code>name.github.io&lt;/code>清空，将自定义首页的&lt;code>html&lt;/code>文件及修饰文件都上传到当前仓库&lt;code>name.github.io&lt;/code>中；&lt;/li>
&lt;li>在博客根目录打开&lt;code>git bash&lt;/code>，执行&lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#Update">博客更新部署&lt;/a>。&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>注意：&lt;/strong>&lt;br />
迁移博客内容到新地址之后，使用相对地址引用博客图片及资源需要修改为正确路径，例如我原先路径为&lt;code>linwhitehat.github.com/&lt;/code>修改后显示为&lt;code>linwhitehat.github.com/Blog&lt;/code>，在本地即&lt;code>/&lt;/code>对应修改后路径应为&lt;code>/Blog/&lt;/code>，否则将不会正常显示。&lt;/p>
&lt;h3 id="span-idupdate配置修改后更新部署span">&lt;span id="Update">配置修改后更新部署&lt;/span>&lt;/h3>
&lt;p>输入以下命令完成每次更新：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> hexo clean &lt;span class="c1"># 涉及配置文件修改&lt;/span>
hexo g
gulp
gulp build
hexo d
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="结束">结束&lt;/h2>
&lt;p>这篇博客基于hexo和next初始配置完成的情况对博客进行主题功能和外观的优化，撰写初衷是将自身搭建博客进行记录，因为Hexo主题更新频繁，不同版本之间的配置处理并不完全一致，根据已有的参考需要进行实际优化处理，同时也对Hexo结构了解更深刻，希望将来能更多的自定义实现渲染效果的设计，搭建更自主化的博客。&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr />
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://www.jianshu.com/p/78c218f9d1e7">设置阅读全文&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;a href="https://hexo.io/zh-cn/docs/front-matter.html">分类二级目录&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>&lt;a href="https://wangjiezhe.com/posts/2018-10-29-Hexo-NexT-3/">评论系统&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>&lt;a href="https://blog.singee.me/2017/12/07/mist-img-center/">图片居中设置&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:5" role="doc-endnote">
&lt;p>&lt;a href="https://guanqr.com/study/blog/hexo-theme-next-customization/">插入脚注&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:5" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:6" role="doc-endnote">
&lt;p>&lt;a href="https://benzblog.site/2019-07-12-HexoTricks/">注脚选择&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:6" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:7" role="doc-endnote">
&lt;p>&lt;a href="https://blog.bill.moe/hexo-theme-next-config-optimization/">分割线样式修改&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:7" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:8" role="doc-endnote">
&lt;p>&lt;a href="http://eternalzttz.com/hexo-next.html">页脚显示博客运行时间&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:8" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:9" role="doc-endnote">
&lt;p>&lt;a href="https://yunhao.space/2018/06/27/hexo-leancloud-plugin-installation-tutor/">部署LeanCloud显示阅读数量&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:9" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:10" role="doc-endnote">
&lt;p>&lt;a href="https://wangyi.blog/2019/12/24/Next%E4%B8%BB%E9%A2%98%E6%97%A0%E6%B3%95%E8%8E%B7%E5%8F%96Leancloud%E9%98%85%E8%AF%BB%E6%AC%A1%E6%95%B0%E7%9A%84%E9%97%AE%E9%A2%98/">Next主题无法获取Leancloud阅读次数的问题&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:10" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:11" role="doc-endnote">
&lt;p>&lt;a href="https://blog.csdn.net/mountzf/article/details/51714763">markdown中实现首行缩进&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:11" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:12" role="doc-endnote">
&lt;p>&lt;a href="https://juejin.im/post/5dd2e898e51d45400206a466#heading-16">gulp压缩源码&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:12" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:13" role="doc-endnote">
&lt;p>&lt;a href="https://yuanlichenai.cn/2019/03/03/music/">markdown插入音频&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:13" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:14" role="doc-endnote">
&lt;p>&lt;a href="https://zenreal.github.io/posts/61856/">博客插入音频&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:14" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:15" role="doc-endnote">
&lt;p>&lt;a href="https://juejin.im/post/5c00980751882518805add83">provisional headers are shown 知多少&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:15" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:16" role="doc-endnote">
&lt;p>&lt;a href="https://bestzuo.cn/posts/blog-establish.html#%E5%AD%A6%E4%BC%9A%E4%BD%BF%E7%94%A8%E6%B5%8F%E8%A7%88%E5%99%A8F12%E5%AE%9A%E4%BD%8D%E6%A0%B7%E5%BC%8F">学会使用浏览器F12定位样式&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:16" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:17" role="doc-endnote">
&lt;p>&lt;a href="https://wangxiaoyu-go.github.io/2018/11/18/change-theme-favicon/">自定义博客图标&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:17" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:18" role="doc-endnote">
&lt;p>&lt;a href="https://www.jianshu.com/p/efbeddc5eb19">Hexo+Next个人博客主题优化&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:18" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:19" role="doc-endnote">
&lt;p>&lt;a href="https://blog.yleao.com/2018/0901/hexo-next%E4%B8%BB%E9%A2%98%E4%B8%8B%E7%9A%84%E7%BE%8E%E5%8C%96.html#next%E4%B8%BB%E9%A2%98%E4%B8%8B%E6%B7%BB%E5%8A%A0404%E9%A1%B5%E9%9D%A2">next主题下添加404页面&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:19" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:20" role="doc-endnote">
&lt;p>&lt;a href="https://zejinwang.com/2019/06/25/Hexo-%E6%A1%86%E6%9E%B6%E4%B8%8B404%E9%A1%B5%E9%9D%A2%E7%9A%84%E8%AE%BE%E7%BD%AE/">Hexo-框架下404页面的设置&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:20" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:21" role="doc-endnote">
&lt;p>&lt;a href="https://www.libinx.com/2017/2017-03-12-hexo-next-beautify/">CSS样式美化&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:21" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:22" role="doc-endnote">
&lt;p>&lt;a href="http://www.xnian.top/2017/11/21/hexo%E5%88%9B%E5%BB%BA404%E9%A1%B5%E9%9D%A2/">hexo创建404页面&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:22" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:23" role="doc-endnote">
&lt;p>&lt;a href="https://www.dazhuanlan.com/2019/10/24/5db1ac54ce05b/">在 Hexo 博客中创建自定义页面&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:23" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:24" role="doc-endnote">
&lt;p>&lt;a href="http://sugarac.com/2017/01/01/customize-Hexo-blog-homepage/">自定义Hexo博客首页&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:24" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:25" role="doc-endnote">
&lt;p>&lt;a href="https://www.jianshu.com/p/80e0e1058bda">Hexo自定义页面做首页&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/#fnref:25" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description><category domain="https://linwhitehat.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/">技术分享</category><category domain="https://linwhitehat.github.io/categories/%E5%8D%9A%E5%AE%A2/">博客</category><category domain="https://linwhitehat.github.io/tags/hexo/">Hexo</category><category domain="https://linwhitehat.github.io/tags/next/">Next</category><category domain="https://linwhitehat.github.io/tags/mist-v7.7.0/">Mist-v7.7.0</category><category domain="https://linwhitehat.github.io/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98/">自定义主题</category></item><item><title>微软系统使用手册</title><link>https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</link><guid isPermaLink="true">https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</guid><pubDate>Tue, 28 Jan 2020 18:26:17 +0000</pubDate><author>eric_lin_cn@outlook.com (L1n)</author><copyright>本文采用 [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh) 许可协议，转载请注明出处。</copyright><description>&lt;p>Windows系统占据当前桌面操作系统的绝对市场，微软操作系统作为市场占有率最高的桌面操作系统，也是大多数人接触最多和使用最多的PC操作系统，其软件生态环境已经十分丰富。很多软件都会有 windows 版本，且大家日常使用的软件也都基本支持在微软系统中使用，本文列述了Windows系统使用中不同应用的说明，能够让你对Windows了解更多，同时也补充了在Windows上体验较好的软件及使用中遇到问题的说明，但不会具体去介绍某一类应用的使用教程。&lt;/p>
&lt;!-- more -->
&lt;h2 id="windows-远程桌面">Windows 远程桌面&lt;/h2>
&lt;p>Windows系统本身自带需要微软产品功能，只是没有独立作为产品而是一种服务，同时加上安全因素（曾经的勒索病毒Wannacry就是利用微软的默认共享服务端口445进行传播），身边比较少人会去使用微软的自带服务。但是其实微软自身的服务对于Windows系统的使用还是比第三方应用会好一些，不过也存在特例。Windows自带的远程桌面即remote desktop service（RDS），官方对其的描述是“RDS可以生成虚拟化解决方案来满足每个最终客户的需求，包括交付独立的虚拟化应用程序、提供安全的移动和远程桌面访问，使最终用户能够从云运行其应用程序和桌面”，直接了当说明了服务的目的，相比市场上大大小小的各类远程控制软件，我还是选择了尝试微软自身的服务。&lt;/p>
&lt;h3 id="需求">需求&lt;/h3>
&lt;ol>
&lt;li>场景&lt;br />
对于个体用户而言，我相信远程桌面的需求并不会过于频繁和高负荷，主要的需要场景如：局域网内远程控制微型机、服务器远程控制、公网远程协助操作、应急远程连接等，以我自己为例，我将电脑置于宿舍，假期出门，临时遇到资料或数据需要PC处理或查看时，可能无法第一时间返回宿舍，此时我都会在出门前确保电脑的联网和电源正常，并开启RDS，之后方便我随时通过手机或他人电脑远程连接到PC进行临时事件紧急处理。&lt;/li>
&lt;li>体验&lt;br />
可能大部分中国朋友都会用过QQ，而QQ本身就有一个远程控制的功能，但是用过这个功能的朋友应该知道连接好友的电脑之后，延迟有多高，原地爆炸就有多高，所以远程连接最重要的体验就是操作流畅，画面清晰。&lt;/li>
&lt;/ol>
&lt;h3 id="rds建立">RDS建立&lt;/h3>
&lt;p>在建立远程桌面服务之前，需要明白这是一项Windows专业版以上系统才具备的默认服务功能，如果是家庭版则需要升级后才有此功能。&lt;/p>
&lt;ol>
&lt;li>开启本地的RDS&lt;br />
开启远程服务有两种方式：&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>开启&lt;code>任务管理器&lt;/code>，选择&lt;code>服务&lt;/code>，将&lt;code>remote desktop service&lt;/code>服务启动，可以修改为&lt;code>自动启动&lt;/code>，看到服务处于运行状态即可；&lt;br />
&lt;img src="https://linwhitehat.github.io/images/windows-RDS-1.png" alt="开启RDS-方法1" title="开启RDS-1" />&lt;/li>
&lt;li>打开系统设置，在&lt;code>系统&lt;/code>选项下的&lt;code>远程桌面&lt;/code>，点击打开即可。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/windows-RDS-2.webp" alt="开启RDS-方法2" title="开启RDS-2" />&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>修改本地默认服务端口&lt;br />
微软自带的RDS默认端口为3389，意味着当开启远程桌面服务后，Windows的3389端口便开启了，出于安全性的考虑，此处将默认的端口进行修改，假设修改为3388，修改步骤如下：&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>打开注册表，按下快捷键&lt;code>win + R&lt;/code>，在运行窗口输入&lt;code>regedit&lt;/code>；&lt;/li>
&lt;li>找到&lt;code>HKEY_LOCAL_MACHINE/ SYSTEM/ CurrentControlSet/ Control/ Terminal Server/ Wds/ rdpwd/ Tds/ tcp&lt;/code>，将&lt;code>PortNumber&lt;/code>子键的值修改为&lt;code>3388&lt;/code>；&lt;/li>
&lt;li>找到&lt;code>HKEY_LOCAL_MACHINE/ SYSTEM/ CurrentControlSet/ Control/ Terminal Server/ Winstations/ RDP-Tcp&lt;/code>，将&lt;code>PortNumber&lt;/code>子键的值修改为&lt;code>3388&lt;/code>；&lt;/li>
&lt;li>重启电脑即可使修改的注册表内容生效。&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>修改防火墙策略&lt;br />
由于自定义了远程桌面服务端口，因此需要修改或增加防火墙策略使通过自定义端口进行通信的服务能正常使用。步骤如下：&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>打开&lt;code>Windows防火墙&lt;/code>，可在&lt;code>控制面板-系统和安全&lt;/code>下打开；&lt;/li>
&lt;li>确认防火墙为开启状态，选择&lt;code>高级设置&lt;/code>；&lt;br />
&lt;img src="https://linwhitehat.github.io/images/windows-RDS-3.webp" alt="打开Windows防火墙" title="打开Windows防火墙" />&lt;/li>
&lt;li>新建防火墙入站规则，类型为&lt;code>端口&lt;/code>，选择规则应用于&lt;code>TCP&lt;/code>并输入特定端口号&lt;code>3388&lt;/code>，默认选择&lt;code>允许连接&lt;/code>，并应用规则到所有类型连接网络，最后为规则编写名称和描述信息即可；&lt;br />
&lt;img src="https://linwhitehat.github.io/images/windows-RDS-4.webp" alt="设置防火墙规则-1" title="设置防火墙规则-1" />&lt;br />
&lt;img src="https://linwhitehat.github.io/images/windows-RDS-5.png" alt="设置防火墙规则-2" title="设置防火墙规则-2" />&lt;br />
&lt;img src="https://linwhitehat.github.io/images/windows-RDS-6.png" alt="设置防火墙规则-3" title="设置防火墙规则-3" />&lt;/li>
&lt;/ul>
&lt;ol start="4">
&lt;li>设置远程连接用户&lt;br />
默认情况下，本地用户具备远程连接的权限，当然也可以创建新用户只用于远程连接，步骤如下：&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>打开&lt;code>计算机管理&lt;/code>，可打开计算机文件夹，在上方选项中点击&lt;code>管理&lt;/code>；&lt;/li>
&lt;li>展开&lt;code>系统工具-本地用户和组-用户&lt;/code>，在右侧空白区域鼠标右键点击，选择&lt;code>新用户&lt;/code>；&lt;/li>
&lt;li>完善新用户信息填写。&lt;/li>
&lt;/ul>
&lt;ol start="5">
&lt;li>内网连接&lt;br />
我以手机作为客户端进行远程连接，内网即局域网内进行远程连接电脑。步骤如下：&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>手机和电脑都连接在同一局域网内，比如同个WiFi下；&lt;/li>
&lt;li>电脑确保网络和电源正常，手机下载微软远程桌面客户端&lt;code>Remote Desktop&lt;/code>，国内应用市场可直接搜索下载；&lt;br />
&lt;img src="https://linwhitehat.github.io/images/windows-RDS-7.webp" alt="远程桌面连接客户端" title="远程桌面连接客户端" />&lt;/li>
&lt;li>手机打开客户端，如果在局域网下可以直接搜索找到局域网内可以进行连接的电脑，或者手动添加局域网内电脑的IP或用户名（如果修改了默认RDS端口，需要在IP或用户名后加上端口号，如192.168.1.2:3388），之后便可正常验证连接。&lt;/li>
&lt;/ul>
&lt;ol start="6">
&lt;li>外网连接 &lt;br />
外网连接可能更符合对远程连接的理解，与内网连接的差别在于，要实现外网连接必须确保电脑具有一个独立固定的公网IP，同时对于局域网内的电脑还需要进行端口转发的设置。步骤如下：&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>确认是否具备固定独立的公网IP，首先在&lt;code>ip138.com&lt;/code>查询当前IP地址，记为IP1，然后在宽带路由器的后台管理界面进入类似&lt;code>上网设置&lt;/code>的选项，查看当前IP地址，记为IP2，如果IP1=IP2，即可确保拥有公网地址。如果不具有公网地址，比如电信家庭网宽带可以直接拨打10000进行免费申请；&lt;/li>
&lt;li>确保拥有公网IP后，在路由设置处，添加端口转发规则，将RDS默认端口转发到自定义端口即可；&lt;/li>
&lt;li>手机使用流量，测试通过客户端连接公网IP，正常便可验证连接。&lt;/li>
&lt;/ul>
&lt;h2 id="录屏">录屏&lt;/h2>
&lt;p>Windows10系统中预装了Xbox系列软件，这本身是微软的一共游戏娱乐平台，但是其带有的录屏功能却能够满足我们录制教程或远程会议视频，不需要安装第三方的应用软件，而且使用十分简单方便。&lt;/p>
&lt;h3 id="开启windows录屏设置">开启Windows录屏设置&lt;/h3>
&lt;p>Windows10点击菜单栏&lt;code>Windows&lt;/code>键，进入&lt;code>系统设置&lt;/code>；&lt;br />
&lt;img src="https://linwhitehat.github.io/images/windows-1.webp" alt="系统设置" title="系统设置" />&lt;br />
选择&lt;code>游戏&lt;/code>，点击左侧&lt;code>游戏栏&lt;/code>，将&lt;code>使用游戏录制游戏剪辑 、屏蔽截图和广播&lt;/code>选择为&lt;code>开&lt;/code>，下方打开游戏栏快捷键按照系统默认为&lt;code>Win+G&lt;/code>；&lt;br />
&lt;img src="https://linwhitehat.github.io/images/windows-2.webp" alt="游戏设置" title="游戏设置" />&lt;br />
&lt;img src="https://linwhitehat.github.io/images/windows-3.webp" alt="游戏栏设置" title="游戏栏设置" />&lt;br />
点击左侧的&lt;code>游戏模式&lt;/code>,选择为&lt;code>开&lt;/code>，这样才能够开启Xbox的录屏功能；&lt;br />
&lt;img src="https://linwhitehat.github.io/images/windows-4.webp" alt="游戏模式设置" title="游戏模式设置" />&lt;br />
然后选择左侧的&lt;code>屏幕截图&lt;/code>,将&lt;code>当我玩游戏时在后台录制&lt;/code>和&lt;code>在我录制游戏时录制音频&lt;/code>选择为&lt;code>开&lt;/code>，其他选项可以根据自身情况设置。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/windows-5.webp" alt="录制设置" title="录制设置" />&lt;/p>
&lt;h3 id="录制屏幕">录制屏幕&lt;/h3>
&lt;p>在需要录制的时候，按下之前设置的快捷键&lt;code>Win + G&lt;/code>，此时会弹出Xbox录制窗口，&lt;code>游戏捕获&lt;/code>窗口是操作按钮，&lt;code>音频&lt;/code>窗口是设置需要录制音频的应用，点击&lt;code>游戏捕获&lt;/code>下的&lt;code>⚫&lt;/code>按钮即开始录制；&lt;br />
&lt;img src="https://linwhitehat.github.io/images/windows-6.webp" alt="录制屏幕" title="录制屏幕" />&lt;/p>
&lt;h3 id="查看录制结果及修改录制设置">查看录制结果及修改录制设置&lt;/h3>
&lt;p>在需要结束录制的时候，按下录制窗口上的&lt;code>⬛&lt;/code>按钮或屏幕右上角的&lt;code>⬛&lt;/code>按钮，同时可以看到录制的时长，结束录制时系统会通知你录制内容存储位置，到存储位置查看已录制的视频。点击录制窗口的&lt;code>⚙&lt;/code>状按钮可以修改录制设置，旁边的&lt;code>📂&lt;/code>可以查看存储位置。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/windows-7.webp" alt="结束录制" title="结束录制" />&lt;/p>
&lt;h2 id="已存储wi-fi密码查看">已存储Wi-Fi密码查看&lt;/h2>
&lt;h3 id="打开网络适配器设置">打开网络适配器设置&lt;/h3>
&lt;h4 id="命令行开启">命令行开启&lt;/h4>
&lt;p>按快捷组合键&lt;code>Windwos+r&lt;/code>，输入&lt;code>ncpa.cpl&lt;/code>。&lt;/p>
&lt;h4 id="界面鼠标开启">界面鼠标开启&lt;/h4>
&lt;p>鼠标右键点击Windows菜单栏的网络图标，点击&lt;code>打开“网络和Internet”设置&lt;/code>，选择&lt;code>更改适配器选项&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://linwhitehat.github.io/images/windows-8.webp" alt="网络适配器" title="网络适配器" />&lt;/p>
&lt;h3 id="查看无线网配置信息">查看无线网配置信息&lt;/h3>
&lt;h4 id="无线网状态">无线网状态&lt;/h4>
&lt;p>注意要查看无线网状态需要正常连接无线网才能查看当前连接的无线网配置，右键点击&lt;code>WLAN&lt;/code>标记的网络，点击&lt;code>状态&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://linwhitehat.github.io/images/windows-9.webp" alt="无线状态查看" title="无线状态查看" />&lt;/p>
&lt;h4 id="查看无线属性">查看无线属性&lt;/h4>
&lt;p>进入无线网状态界面，点击&lt;code>无线属性&lt;/code>,选择&lt;code>安全&lt;/code>选项卡，勾选&lt;code>显示字符&lt;/code>即可查看当前无线网的认证信息。&lt;/p>
&lt;p>&lt;img src="https://linwhitehat.github.io/images/windows-10.webp" alt="无线属性查看" title="无线属性查看" />&lt;/p>
&lt;p>&lt;img src="https://linwhitehat.github.io/images/windows-11.png" alt="Wi-Fi密钥查看" title="Wi-Fi密钥查看" />&lt;/p>
&lt;h2 id="端口占用查看">端口占用查看&lt;/h2>
&lt;p>在windows下需要查看端口占用情况，同时排查哪些应用正在使用当前端口&lt;sup id="fnref:1">&lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>。&lt;/p>
&lt;h3 id="操作步骤">操作步骤&lt;/h3>
&lt;h4 id="打开命令行管理员身份">打开命令行（管理员身份）&lt;/h4>
&lt;p>1） 在开始菜单搜索&lt;code>cmd&lt;/code>，右键点击&lt;code>命令行提示窗口&lt;/code>以管理员身份运行；&lt;/p>
&lt;p>2） 按快捷组合键&lt;code>Windows+r&lt;/code>，输入&lt;code>cmd&lt;/code>。&lt;/p>
&lt;h4 id="查看所有端口">查看所有端口&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> netstat -ano
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>每个地址后面显示的即端口号，最后一列表示对应的进程号PID。&lt;/p>
&lt;p>&lt;img src="https://www.runoob.com/wp-content/uploads/2018/07/1530674518-5109-2159693-5342695777bde48d.png" alt="系统所有端口信息查看" title="系统所有端口信息查看" />&lt;/p>
&lt;h4 id="查看具体端口使用的进程">查看具体端口使用的进程&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> netstat -aon&lt;span class="p">|&lt;/span>findstr &lt;span class="s2">&amp;#34;8081&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>显示使用当前端口的进程情况。&lt;/p>
&lt;p>&lt;img src="https://www.runoob.com/wp-content/uploads/2018/07/1530674518-6203-2159693-10d9bae7a6e59b06.png" alt="端口对应使用进程查看" title="端口对应使用进程查看" />&lt;/p>
&lt;h4 id="查看指定进程">查看指定进程&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">tasklist&lt;span class="p">|&lt;/span>findstr &lt;span class="s2">&amp;#34;9088&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>查看是哪个进程或者程序占用了 8081 端口，结果是：node.exe。&lt;/p>
&lt;p>&lt;img src="https://www.runoob.com/wp-content/uploads/2018/07/1530674518-3794-2159693-30d1a50103f28cea.png" alt="查看具体进程" title="查看具体进程" />&lt;/p>
&lt;h2 id="内存型号查看">内存型号查看&lt;/h2>
&lt;p>使用Windows系统的电脑一般都能支持扩展，而扩展的硬件一般都有内存，要给电脑增加内存条需要知道电脑对内存的支持情况以及内存条的配置，有多种方式能够得知，这里仍然推荐不适用第三方软件的方式，即Windows自身便能完成需求。&lt;/p>
&lt;h3 id="查看支持的最大内存容量">查看支持的最大内存容量&lt;/h3>
&lt;p>打开命令行，按下&lt;code>Win + R&lt;/code>，输入&lt;code>cmd&lt;/code>，输入&lt;code>wmic memphysical get maxcapacity&lt;/code>，显示的数字即电脑主板支持的最大内存，这串数字的单位是&lt;code>KB&lt;/code>，因此需要换算为&lt;code>GB&lt;/code>，以我的笔记本为例子16777216KB即16GB。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/windows-12.png" alt="支持内存上限" title="支持内存上限" />&lt;/p>
&lt;h3 id="查看内存配置">查看内存配置&lt;/h3>
&lt;p>一般购买内存需要知道内存的型号、频率、电压、大小，其中内存条的型号、频率和电压是必须和电脑主板支持的相兼容才能保证使用正常，详细的内存配置可以参照此处&lt;sup id="fnref:2">&lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;sup id="fnref:3">&lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>，具体查看步骤如下：&lt;/p>
&lt;ol>
&lt;li>打开命令行，输入&lt;code>wmic&lt;/code>，在wmic提示符下输入&lt;code>memorychip&lt;/code>，可看到当前电脑内存信息。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/windows-13.png" alt="内存信息" title="内存信息" />&lt;/li>
&lt;li>解读显示的内存信息，&lt;code>Capacity&lt;/code>表示内存大小，&lt;code>ConfiguredClockSpeed&lt;/code>表示内存频率，&lt;code>DataWidth&lt;/code>表示位宽，其中要判断型号是&lt;code>DDR&lt;/code>的哪个版本，从频率可以判断，一般频率在2400以上的即&lt;code>DDR4&lt;/code>，这也是当前最常见的内存型号，如果要直观查看，可以使用第三方软件&lt;code>cpu-z&lt;/code>查看。&lt;/li>
&lt;/ol>
&lt;h2 id="cpu型号查看">CPU型号查看&lt;/h2>
&lt;p>要了解自身电脑的CPU情况，除了上网搜索官网配置信息外，可以在本地便捷的进行查看，一般要了解的是CPU的版本、厂商、线程数、核数等，使用Windows内置功能来完成查询。&lt;/p>
&lt;h3 id="物理cpu个数">物理CPU个数&lt;/h3>
&lt;p>打开命令行，输入&lt;code>systeminfo&lt;/code>，查看&lt;code>处理器&lt;/code>一项即可看到电脑使用处理器个数。&lt;/p>
&lt;h3 id="查看cpu配置信息">查看CPU配置信息&lt;/h3>
&lt;p>打开命令行，输入&lt;code>wmic&lt;/code>，之后输入&lt;code>cpu get *&lt;/code>或&lt;code>cpu get&lt;/code>，里面包含电脑中所搭载的CPU配置信息，如&lt;code>NumberOfCores&lt;/code>表示CPU核数，&lt;code>NumberOfLogicalProcessors&lt;/code>表示CPU线程数，&lt;code>Caption&lt;/code>表示厂商信息，其他详细内容可自行查看。&lt;/p>
&lt;h2 id="查看网口信息">查看网口信息&lt;/h2>
&lt;h3 id="命令行方式">命令行方式&lt;/h3>
&lt;p>打开命令行，输入&lt;code>systeminfo&lt;/code>，查看&lt;code>网卡&lt;/code>一项即可。&lt;/p>
&lt;h3 id="可视化方式">可视化方式&lt;/h3>
&lt;p>在开始菜单搜索&lt;code>计算机管理&lt;/code>，打开&lt;code>计算机管理&lt;/code>，点击左侧&lt;code>设备管理器&lt;/code>，选择&lt;code>网络适配器&lt;/code>查看。&lt;/p>
&lt;h2 id="无线投屏">无线投屏&lt;/h2>
&lt;p>使用 Windows10 自带的 Miracast 功能，实现将电脑投屏到支持无线投屏的仪器上，既节省了使用连接线也避免依赖第三方软件，让投屏能够随时随地使用。此处不对无线投屏技术进行过多原理及技术说明，想了解可查阅网上教程&lt;sup id="fnref:4">&lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>&lt;sup id="fnref:5">&lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>。&lt;br />
以笔记本电脑无线投屏到小米电视为例子，基本使用方式如下：&lt;/p>
&lt;ol>
&lt;li>确保电脑与需要投屏的显示器（此处为小米电视）在同一局域网下，电脑有无线网卡；&lt;/li>
&lt;li>打开小米电视，在首页界面找到&lt;code>我的应用&lt;/code>并打开；&lt;/li>
&lt;li>在&lt;code>我的应用&lt;/code>中找到&lt;code>无线投影&lt;/code>后打开，选择&lt;code>Miracast&lt;/code>功能选项，小米电视会出现无线显示界面及&lt;code>小米电视&lt;/code>并等待连接；&lt;/li>
&lt;li>在笔记本电脑 Win10 桌面右下角点击，选择&lt;code>连接&lt;/code>，电脑会自动搜索出&lt;code>小米电视&lt;/code>，点击连接；&lt;/li>
&lt;li>等待自动连接，点击电脑桌面右下角的&lt;code>投影&lt;/code>，选择相应的投影方式。&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>注意&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>使用无线投屏后，桌面上方会自动显示工具条，可以选择不保持在前端，则会隐藏，将鼠标移动到桌面上方的中部即会重新出现工具条，此外工具条出现无法隐藏的问题可能会在旧版本的系统版本存在，详情可查阅微软社区相关问题&lt;sup id="fnref:6">&lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:6" class="footnote-ref" role="doc-noteref">6&lt;/a>&lt;/sup>。&lt;/li>
&lt;li>本例中使用小米电视的&lt;code>无线投影&lt;/code>应用，如果是华为/荣耀系列则是&lt;code>无线投屏&lt;/code>应用，不同品牌名称可能存在差异，可以在&lt;code>我的应用&lt;/code>中搜索关键字&lt;code>无线&lt;/code>进行查找。&lt;/li>
&lt;/ol>
&lt;h2 id="常见问题解决方法">常见问题&amp;amp;解决方法&lt;/h2>
&lt;h3 id="浏览器如chrome无法正常播放声音">浏览器如chrome无法正常播放声音&lt;/h3>
&lt;p>问题：&lt;br />
  当使用网易云音乐、QQ、影视播放软件等软件可以正常播放声音，而常用浏览器却不能播放声音，重启仍然无效时，问题一般是浏览器的声音播放被禁止了，即针对性的对某个应用做了声音禁止。&lt;br />
解决：&lt;br />
  解决办法即查看系统&lt;code>声音设置&lt;/code>以及&lt;code>声音合成器&lt;/code>，在桌面右下角菜单栏找到&lt;code>🔈&lt;/code>形状的&lt;code>扬声器&lt;/code>，右键点击可以看到选项，查看浏览器是否被禁音，将其解除即可。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/windows-14.png" alt="扬声器" title="扬声器" />&lt;br />
&lt;img src="https://linwhitehat.github.io/images/windows-15.png" alt="扬声器设置" title="扬声器设置" />&lt;/p>
&lt;h3 id="进程连接设备平台用户服务_338f0c6占用cpu">进程&lt;code>连接设备平台用户服务_338f0c6&lt;/code>占用CPU&lt;/h3>
&lt;p>这个进程根据介绍是对外接设备的正常运行进行提供服务的，但是我并没有连接U盘、移动硬盘、触摸板等设备，结果后台自动启动这个进程，导致CPU资源被占用，查询微软社区后，参照&lt;sup id="fnref:7">&lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:7" class="footnote-ref" role="doc-noteref">7&lt;/a>&lt;/sup>&lt;sup id="fnref:8">&lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:8" class="footnote-ref" role="doc-noteref">8&lt;/a>&lt;/sup>，得到解决方法如下：&lt;/p>
&lt;ol>
&lt;li>若是有连接的外接设备确保已经移除且断开连接；&lt;/li>
&lt;li>将&lt;code>连接设备平台用户服务_338f0c6&lt;/code>进程停止并禁用，同时在&lt;code>服务&lt;/code>中找到&lt;code>Superfetch&lt;/code>、&lt;code>Homegroup Listener&lt;/code>、&lt;code>Homegroup Provider&lt;/code>和&lt;code>DiagTrack Diagnostics Tracking Service&lt;/code>，若是Windows系统版本较新（我的是Windows10-1903），则在服务中找到&lt;code>Diagnostic Policy Service&lt;/code>、&lt;code>Diagnostic Service Host&lt;/code>和&lt;code>Diagnostic System Host&lt;/code>，将对应进程停止并禁用，重启电脑；&lt;/li>
&lt;li>查看系统&lt;code>虚拟内存&lt;/code>设置是否是默认情况，虚拟内存查看请打开&lt;code>我的电脑&lt;/code>属性，位于&lt;code>系统-&amp;gt;高级系统设置-&amp;gt;高级-&amp;gt;性能-&amp;gt;设置-&amp;gt;高级-&amp;gt;虚拟内存设置&lt;/code>。&lt;/li>
&lt;/ol>
&lt;h2 id="推荐工具">推荐工具&lt;/h2>
&lt;h3 id="cmd-下载百度云资源">CMD-下载百度云资源&lt;/h3>
&lt;p>PanDownload 的作者于2018年宣布不再维护和开放服务，因此网页版PanDownload不可用，客户端目前不受影响，而同时作者提出另一种绕过百度云客户端限速的方法即通过&lt;code>CMD&lt;/code>进行下载，转载来到本博客，详情参照作者博客&lt;sup id="fnref:9">&lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:9" class="footnote-ref" role="doc-noteref">9&lt;/a>&lt;/sup>。&lt;/p>
&lt;h2 id="推荐软件">推荐软件&lt;/h2>
&lt;h3 id="pandownload">PanDownload&lt;/h3>
&lt;p>解决百度云带来的限速问题，这是免费的一款第三方下载软件，请不要有偿售卖，同时请谨慎使用，存在被封的风险。详情见官网&lt;sup id="fnref:10">&lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:10" class="footnote-ref" role="doc-noteref">10&lt;/a>&lt;/sup>。&lt;/p>
&lt;h3 id="potplayer">PotPlayer&lt;/h3>
&lt;p>一款值得推荐的播放器，&lt;a href="https://potplayer.daum.net/">官方地址&lt;/a>，2019年2月国内无法正常访问（某不可抗力隐私），下载需要科学上网，这款播放器的优点是支持的视频文件格式多，有多媒体文件解码器和硬件加速，使用很流畅，界面简洁。&lt;/p>
&lt;h4 id="安装注意">安装注意&lt;/h4>
&lt;ol>
&lt;li>不知何时起，PotPlayer 安装包捆绑了&lt;a href="https://www.avast.com/zh-cn/index">avast! (Avast Antivirus)&lt;/a>，建议手动更新安装，安装时注意在&lt;code>Avast Antivirus&lt;/code>勾选处将✔去掉，否则捆绑安装会默认进行，且安装过程还挺长。没怎么接触过这款杀毒软件，但是被捆绑安装不太开心，这款杀毒软件与百度云网盘有冲突，同时杀毒软件不能关闭，强制后台运行&lt;sup id="fnref:11">&lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:11" class="footnote-ref" role="doc-noteref">11&lt;/a>&lt;/sup>&lt;sup id="fnref:12">&lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:12" class="footnote-ref" role="doc-noteref">12&lt;/a>&lt;/sup>。&lt;/li>
&lt;li>如果不注意捆绑安装了&lt;code>Avast Antivirus Free&lt;/code>，官方也提供了卸载工具&lt;a href="https://files.avast.com/iavs9x/avastclear.exe">avastclear&lt;/a>及卸载方法&lt;sup id="fnref:13">&lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:13" class="footnote-ref" role="doc-noteref">13&lt;/a>&lt;/sup>，具体见下图。&lt;br />
&lt;img src="https://linwhitehat.github.io/images/windows-16.webp" alt="卸载Avast" title="卸载Avast" />&lt;/li>
&lt;/ol>
&lt;p>将官网及最新版 PotPlayer 在&lt;a href="https://www.virustotal.com/">VirusTotal&lt;/a>进行恶意性检测，结果如下：&lt;br />
&lt;img src="https://linwhitehat.github.io/images/windows-17.webp" alt="PotPlayer官网检测结果" title="PotPlayer官网检测结果" />&lt;br />
&lt;img src="https://linwhitehat.github.io/images/windows-18-1.webp" alt="PotPlayer-200204检测结果" title="PotPlayer-200204检测结果" />&lt;br />
&lt;img src="https://linwhitehat.github.io/images/windows-18-2.png" alt="PotPlayer-200204 Hash-256 校验" title="PotPlayer-200204 Hash-256 校验" />&lt;/p>
&lt;h3 id="github-和-git">GitHub 和 Git&lt;/h3>
&lt;p>&lt;a href="https://github.com/">GitHub&lt;/a>是全球最大的代码托管平台即软件源代码托管服务平台，而&lt;a href="https://git-scm.com/">Git&lt;/a>是分布式版本控制软件，Github 可通过 Git 进行版本控制，Git 是终端模式使用的工具，也有可视化使用的版本控制工具，本着开源开放交流的精神，要写出更优更美的代码，托管到开源平台，各路大神自有评说🤭，鉴于我也在学习和使用中，同时最近开始接触 Gitlab，因此建立了 Git学习专栏，可查看&lt;a href="https://linwhitehat.github.io/2020/02/17/Git%E4%B8%93%E6%A0%8F.html">Git专栏&lt;/a>。&lt;/p>
&lt;h4 id="github-issue">GitHub issue&lt;/h4>
&lt;p>当创建 GitHub 仓库项目之后，可以在项目的&lt;code>Issues&lt;/code>里进行交流，可以提问和回答，参照&lt;a href="https://blog.csdn.net/github_30605157/article/details/52837864">熟练使用Issues&lt;/a>。&lt;/p>
&lt;h4 id="github-readme">Github README&lt;/h4>
&lt;p>每个项目的说明即 README 部分要写清楚，同时又要美观，有一个专业方式即加上项目徽章，效果可看我的&lt;a href="https://github.com/linwhitehat/linwhitehat.github.io">博客项目页面&lt;/a>，可参照&lt;sup id="fnref:14">&lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:14" class="footnote-ref" role="doc-noteref">14&lt;/a>&lt;/sup>&lt;sup id="fnref:15">&lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:15" class="footnote-ref" role="doc-noteref">15&lt;/a>&lt;/sup>&lt;sup id="fnref:16">&lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:16" class="footnote-ref" role="doc-noteref">16&lt;/a>&lt;/sup>。&lt;/p>
&lt;h3 id="ssh-远程连接">ssh 远程连接&lt;/h3>
&lt;h4 id="xshell系列">XShell系列&lt;/h4>
&lt;p>习惯使用&lt;code>ssh&lt;/code>进行远程连接可以使用&lt;code>XShell&lt;/code>系列软件即 XShell 和 XFtp，这两者的配套使用基本满足远程连接以及远程文件传输，主要适用于内网多主机的控制以及远程服务器的控制，学生注册是可以免费使用的。&lt;a href="https://www.netsarang.com/zh/xshell/">下载地址&lt;/a>&lt;/p>
&lt;h5 id="xftp出现无法实现文件传输">xftp出现无法实现文件传输&lt;/h5>
&lt;p>在网络正常连接情况下，排除防火墙拦截等网络因素，查看远程连接设备上传输文件的目标文件目录权限，使用&lt;code>ll&lt;/code>或&lt;code>ls -l&lt;/code>可以查看是否具备可写权限，一般是不具备才导致的，修改目标文件目录权限：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo chmod &lt;span class="m">777&lt;/span> file_Directory/
ls -l
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://linwhitehat.github.io/images/windows-19.png" alt="文件目录权限修改" title="文件目录权限修改" />&lt;br />
查看文件目录权限完整后再尝试xftp传输文件即可。&lt;sup id="fnref:17">&lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fn:17" class="footnote-ref" role="doc-noteref">17&lt;/a>&lt;/sup>&lt;/p>
&lt;h4 id="putty">putty&lt;/h4>
&lt;p>简洁风格使用 &lt;code>putty&lt;/code> 进行&lt;code>ssh&lt;/code>远程连接，不需要安装，只需要下载&lt;code>zip&lt;/code>压缩包解压即可使用，十分方便而且免费。&lt;a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">下载地址&lt;/a>&lt;/p>
&lt;h2 id="结束">结束&lt;/h2>
&lt;p>本着手册即查即用的原则，这篇博文写的十分简要，很少说明部分，直接贴出操作。&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr />
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://www.runoob.com/w3cnote/windows-finds-port-usage.html">Windows下如何查看某个端口被谁占用&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/26255460">读懂内存&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>&lt;a href="https://www.crucial.cn/memory">英睿达&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/68697030">Win10PC电脑无线投屏Miracast的神操作&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:5" role="doc-endnote">
&lt;p>&lt;a href="https://blog.csdn.net/xqhrs232/article/details/104250602">win10下Miracast无线投屏使用教程及异常解决方案&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:5" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:6" role="doc-endnote">
&lt;p>&lt;a href="https://answers.microsoft.com/zh-hans/windows/forum/all/win10%E4%BD%BF%E7%94%A8%E6%97%A0%E7%BA%BF%E6%8A%95/803e190a-135a-4b90-9e8d-032f2d9fc89b">Win10使用无线投屏后，屏幕上方工具条无法移除&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:6" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:7" role="doc-endnote">
&lt;p>&lt;a href="https://answers.microsoft.com/zh-hans/windows/forum/all/%E8%BF%9E%E6%8E%A5%E8%AE%BE%E5%A4%87%E5%B9%B3/6f6494fe-0610-4dac-8bfd-8da6d70d1670">连接设备平台用户服务长时间高CPU占用&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:7" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:8" role="doc-endnote">
&lt;p>&lt;a href="http://windowsbulletin.com/zh-CN/%E4%BB%80%E4%B9%88%E6%98%AF%E8%BF%9E%E6%8E%A5%E8%AE%BE%E5%A4%87%E5%B9%B3%E5%8F%B0%E6%9C%8D%E5%8A%A1%E6%88%91%E5%BA%94%E8%AF%A5%E7%A6%81%E7%94%A8%E5%AE%83/">什么是连接设备平台服务？ 我应该禁用吗？&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:8" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:9" role="doc-endnote">
&lt;p>&lt;a href="https://laod.cn/black-technology/baidupcs-go-baiduyun.html">BaiduPCS-Go 使用CMD命令行全速下载百度云&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:9" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:10" role="doc-endnote">
&lt;p>&lt;a href="https://pandownload.com/index.html">PanDownload&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:10" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:11" role="doc-endnote">
&lt;p>&lt;a href="https://www.52pojie.cn/thread-1086427-1-1.html">Potplayer自动更新会下载安装Avast杀毒&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:11" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:12" role="doc-endnote">
&lt;p>&lt;a href="https://malwaretips.com/threads/malware-or-false-positive-in-potplayer.94097/">Malware or False positive in Potplayer?&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:12" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:13" role="doc-endnote">
&lt;p>&lt;a href="https://www.avast.com/zh-cn/uninstall-utility">使用 avastclear 卸载 Avast Antivirus&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:13" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:14" role="doc-endnote">
&lt;p>&lt;a href="https://lpd-ios.github.io/2017/05/03/GitHub-Badge-Introduction/">GitHub 项目徽章的添加和设置&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:14" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:15" role="doc-endnote">
&lt;p>&lt;a href="https://github.com/yangwenmai/how-to-add-badge-in-github-readme">如何在 README 里面添加徽章&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:15" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:16" role="doc-endnote">
&lt;p>&lt;a href="https://blog.csdn.net/yangbodong22011/article/details/51791085">GitHub上 README 增加图片标签&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:16" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:17" role="doc-endnote">
&lt;p>&lt;a href="https://blog.csdn.net/qq_35038153/article/details/78408882">关于xftp上传文件状态错误的解决&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2020/01/28/%E5%BE%AE%E8%BD%AF%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#fnref:17" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description><category domain="https://linwhitehat.github.io/categories/handbook/">Handbook</category><category domain="https://linwhitehat.github.io/categories/os/">OS</category><category domain="https://linwhitehat.github.io/categories/windows/">Windows</category><category domain="https://linwhitehat.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/">操作系统</category><category domain="https://linwhitehat.github.io/tags/git/">Git</category><category domain="https://linwhitehat.github.io/tags/%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/">远程桌面</category></item><item><title>LaTeX-安装教程</title><link>https://linwhitehat.github.io/posts/2019/10/12/latex%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</link><guid isPermaLink="true">https://linwhitehat.github.io/posts/2019/10/12/latex%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</guid><pubDate>Sat, 12 Oct 2019 00:00:00 +0000</pubDate><author>eric_lin_cn@outlook.com (L1n)</author><copyright>本文采用 [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh) 许可协议，转载请注明出处。</copyright><description>&lt;p>作为一名研究僧，写论文，写文档，写日志，写报告，写书……还是比较平常的一件事，而office系列对于排版要求严格又惜时如金的人而言还是次选，所以开始入坑LaTeX，经过慎重的调研之后，选择了texlive+texstudio的形式开始入坑，当然还有很多其他选择，如果写完这篇还记得会在参考链接下附上&lt;sup id="fnref:1">&lt;a href="https://linwhitehat.github.io/posts/2019/10/12/latex%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;sup id="fnref:2">&lt;a href="https://linwhitehat.github.io/posts/2019/10/12/latex%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>。&lt;/p>
&lt;!-- more -->
&lt;h2 id="调研选择">调研选择&lt;/h2>
&lt;p>其实这部分只是自己做一点记录，急需安装教程的请跳过，请看第2节。&lt;/p>
&lt;p>经过多番Google、csdn以及知乎的查阅，大概了解了latex的编译环境和编辑环境，主流的有ctex、texlive、texstudio+winedt等等，我的选择变化大致如下：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>在上过的一门算法课中老师推荐了跨平台下的latex集成工具，ctex被建议在windows下使用，所以最初我的选择是ctex，附上清华镜像，&lt;a href="https://mirrors.tuna.tsinghua.edu.cn/ctex/legacy/2.9/" title="ctex清华镜像">Ctex-mirror&lt;/a>，官方网站&lt;a href="http://www.ctex.org/HomePage">CTeX&lt;/a>，加上ctex对中文的支持很好，且集成工具完整，当下载3G的安装包时，我又调研了不少教程，但是在某csdn的教程中看的评论有人评价ctex已不维护很久，同时ctex安装后会对系统环境变量进行覆盖，想想这个风险还是挺大的，毕竟安装需要配置换件变量的应用还挺多的，这篇&lt;a href="https://liam.page/texlive/">博文&lt;/a>有说明，接着看到在不少教程中推荐texlive（可谓官方），这是由 TUG (TeX User Group) 维护和发布的tex系统，接着有了第2个选择；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>开始调研texlive，看看官网&lt;a href="https://tug.org/texlive/" title="texlive">TexLive&lt;/a>，维护还是比较好的，有2019最新版本，有多国镜像，有完整教学文档，感觉比ctex完善很多，果断放弃ctex，尽管这个时候安装文件也下载得差不多了，同时看到texstudio是tex编辑的不错的集成环境，官方的介绍是这样的：&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;em>TeXstudio is an integrated writing environment for creating LaTeX documents. Our goal is to make writing LaTeX as easy and comfortable as possible. Therefore TeXstudio has numerous features like syntax-highlighting, integrated viewer, reference checking and various assistants.&lt;/em>&lt;/p>
&lt;p>安装提供zip压缩包直接解压使用，很适合我这种不喜欢安装包的人，因为便于迁移，抉择已定，开始下载和安装。&lt;/p>
&lt;h2 id="下载">下载&lt;/h2>
&lt;blockquote>
&lt;p>先提供需要安装的文件（texlive和texstudio）的&lt;a href="https://pan.baidu.com/s/1mRKV0VeNfjxhY6qGvSQdLw" title="网盘链接">网盘链接&lt;/a>，提取码：uhbe&lt;/p>
&lt;/blockquote>
&lt;p>官方提供了下载方式：&lt;/p>
&lt;ol>
&lt;li>texlive，&lt;a href="https://mirror.bjtu.edu.cn/ctan/systems/texlive/Images/texlive2019.iso">官方镜像&lt;/a>，如果访问不了，可以访问国内镜像，如&lt;a href="http://mirrors.ustc.edu.cn/CTAN/systems/texlive/">中科大镜像&lt;/a>；&lt;/li>
&lt;li>texstudio，我选择的是zip压缩文件形式，&lt;a href="https://github.com/texstudio-org/texstudio/releases/download/2.12.16/texstudio-2.12.16-win-portable-qt5.zip">下载&lt;/a>；&lt;/li>
&lt;/ol>
&lt;p>当然也可以直接下载我网盘分享的镜像和安装包，可以使用官方提供的md5值进行比对验证文件没有被篡改。&lt;/p>
&lt;h2 id="安装">安装&lt;/h2>
&lt;h3 id="texlive-安装">TexLive 安装&lt;/h3>
&lt;p>下载好iso文件之后，由于我是win10系统，可以直接加载iso镜像文件，因此双击打开即可，如果是win7及以前的版本需要先解压iso文件，双击打开install-tl-advanced.bat文件，会出现以下界面：&lt;/p>
&lt;p>&lt;img src="https://linwhitehat.github.io/images/post-texlive-install-1.webp" alt="安装启动界面" title="安装启动界面" />&lt;/p>
&lt;p>点击&lt;em>修改&lt;/em>更换需要安装的文件路径，路径建议不要带有中文和特殊字符；&lt;br />
点击&lt;em>Advanced&lt;/em>修改安装选项，但默认是所有都选上，所以可以不用修改（因为涉及调用的宏包以及scheme选择，如果不了解还是默认，避免后续麻烦）；&lt;br />
点击&lt;em>安装&lt;/em>，然后就是漫长的安装过程，安装期间可以做自己的事情，安装完成后显示如下：&lt;/p>
&lt;p>&lt;img src="https://linwhitehat.github.io/images/post-texlive-install-2.webp" alt="安装完成界面" title="安装完成界面" />&lt;/p>
&lt;p>做一下安装是否成功的检查：&lt;/p>
&lt;ol>
&lt;li>在开始菜单中搜索&lt;em>TeX Live command-line&lt;/em>，执行以下命令：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">xelatex -v
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>如果正常会显示如下信息，即正常的texlive版本号：&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://linwhitehat.github.io/images/post-texlive-test-1.webp" alt="测试正常界面" title="测试正常界面" />&lt;/p>
&lt;ol start="3">
&lt;li>如果显示错误如下，应该是系统环境变量的问题，进入系统环境变量（系统属性-&amp;gt;高级系统设置-&amp;gt;环境变量），将&lt;em>Path&lt;/em>环境变量新增texlive进去，即将安装好的texlive文件目录下的bin文件夹所在的路径作为环境变量。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://linwhitehat.github.io/images/post-texlive-test-2.webp" alt="测试错误界面" title="测试错误界面" />&lt;/p>
&lt;h3 id="texstudio-安装">TexStudio 安装&lt;/h3>
&lt;p>下载好zip压缩文件之后，直接解压就可以使用，十分方便！&lt;/p>
&lt;h2 id="配置">配置&lt;/h2>
&lt;p>主要是texstudio需要进行配置，更适合国内人士使用。&lt;/p>
&lt;h3 id="语言设置">语言设置&lt;/h3>
&lt;p>打开texstudio之后，在主界面中显示的是英文，点击菜单栏的&lt;em>Options&lt;/em>，点击&lt;em>Configure TeXstudio&lt;/em>，在&lt;em>General&lt;/em>选项下将&lt;em>Language&lt;/em>选择为&lt;em>zh_CN&lt;/em>，点击确定；&lt;/p>
&lt;h3 id="编译环境设置">编译环境设置&lt;/h3>
&lt;p>在语言设置一样的窗口，此时显示语言是中文，点击&lt;em>构建&lt;/em>-&amp;gt;&lt;em>默认编译器&lt;/em>设置为&amp;quot;XeLaTeX&amp;quot;，支持中文LaTeX文档；&lt;br />
将&lt;em>构建&lt;/em>-&amp;gt;&lt;em>默认文献工具&lt;/em>设置为&amp;quot;Biber&amp;quot;；&lt;br />
在&lt;em>命令&lt;/em>-&amp;gt;&lt;em>XeLaTeX&lt;/em>设置编译参数，使用 -shell-escape 参数以支持“minted”代码排版宏包；&lt;/p>
&lt;p>点击&lt;em>构建&lt;/em>-&amp;gt;&lt;em>默认编译器&lt;/em>设置为&amp;quot;Latexmk&amp;quot;实现一次性编译；&lt;br />
将&lt;em>命令&lt;/em>-&amp;gt;&lt;em>Latexmk&lt;/em>的 -pdf 参数修改为 -xelatex 以支持中文；&lt;br />
在&lt;em>命令&lt;/em>-&amp;gt;&lt;em>Latexmk&lt;/em>设置编译参数，使用 -shell-escape 参数以支持“minted”代码排版宏包；&lt;br />
点击确定&lt;/p>
&lt;p>点击菜单栏&lt;em>帮助&lt;/em>-&amp;gt;&lt;em>检查Latex安装信息&lt;/em>，若正确输出系统报告，说明texlive正常工作。&lt;/p>
&lt;h2 id="结束">结束&lt;/h2>
&lt;p>第一篇tex文档参照这篇博客，&lt;a href="https://blog.csdn.net/yeler082/article/details/80665186">Texlive+TeXstudio 入门安装使用&lt;/a>，照着输入，然后点击两个绿色箭头重叠的按钮，可以看到实时生成的文档。&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr />
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://www.cnblogs.com/joyeecheung/p/3596255.html">TeX Live &amp;amp; TeXstudio 安装手记&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2019/10/12/latex%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;a href="http://www.ctex.org/OnlineDocuments">第一篇tex文档编写&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2019/10/12/latex%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description><category domain="https://linwhitehat.github.io/categories/handbook/">Handbook</category><category domain="https://linwhitehat.github.io/categories/latex/">Latex</category><category domain="https://linwhitehat.github.io/tags/latex%E5%AE%89%E8%A3%85/">Latex安装</category><category domain="https://linwhitehat.github.io/tags/windows10/">Windows10</category></item><item><title>搭建个人博客(Hexo+Next+Github）</title><link>https://linwhitehat.github.io/posts/2019/10/12/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link><guid isPermaLink="true">https://linwhitehat.github.io/posts/2019/10/12/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid><pubDate>Sat, 12 Oct 2019 00:00:00 +0000</pubDate><author>eric_lin_cn@outlook.com (L1n)</author><copyright>本文采用 [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh) 许可协议，转载请注明出处。</copyright><description>&lt;p>在经过多个教程摸索和尝试后，发现手把手有时候挺坑人的，毕竟经验还是要自己攒，不然没踩的坑迟早要踩到，最终我的个人博客&lt;a href="https://linwhitehat.github.io/">林深时见璐&lt;/a>搭建完成，这篇教程会从本地博客建立到实现美观的网络博客进行记录分享，这篇博客也就会随着本博客的每一次升级完善而补充，希望能给想自建博客的朋友们提供帮助。&lt;/p>
&lt;!-- more -->
&lt;h2 id="最初的诞生">最初的诞生&lt;/h2>
&lt;p>我采用的搭建博客的方式是使用 &lt;a href="https://pages.github.com/">GitHub Pages&lt;/a> + &lt;a href="https://hexo.io/zh-cn/">Hexo&lt;/a> 的方式，这个应该是我摸索之后认为的对新手最友好也最优质的方式，只需要投入时间学习和运营，就能拥有美观的个人博客。以下的1 - 3小点是博客的雏形构建&lt;sup id="fnref:1">&lt;a href="https://linwhitehat.github.io/posts/2019/10/12/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>。&lt;/p>
&lt;h3 id="注册github账号">注册Github账号&lt;/h3>
&lt;p>要使用 GitHub Pages，首先你要注册一个&lt;a href="https://github.com/">GitHub&lt;/a>账号。&lt;/p>
&lt;p>&lt;img src="https://linwhitehat.github.io/images/blog-1.png" alt="GitHub注册页" title="GitHub注册页" />&lt;/p>
&lt;h3 id="安装必备软件">安装必备软件&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>安装&lt;a href="https://git-scm.com/download/win">Git&lt;/a>客户端&lt;/p>
&lt;/li>
&lt;li>
&lt;p>安装&lt;a href="https://nodejs.org/en/">Node.js&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="搭建博客">搭建博客&lt;/h3>
&lt;ol>
&lt;li>新建博客&lt;br />
配置GitHub，步骤如下:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>登录GitHub后新建项目（new repository），项目名由两部分组成即GitHub账号名和固定后缀&lt;code>.github.io&lt;/code>，比如我的项目就是&lt;code>linwhitehat.github.io&lt;/code>，填写完点击创建项目（create repository）。&lt;/li>
&lt;li>配置GitHub SSH密钥，本地打开git bash，输入&lt;code>ssh-keygen -t rsa -C &amp;quot;your's emaill address&amp;quot; &lt;/code>，其中your's email address换成GitHub账号的邮箱地址，第一次点击回车键（Enter）会显示存储位置，第二次点击回车键会显示输入密钥，按照要求输入密钥两次(输入过程是看不到密钥的)，之后在第一次显示的存储位置打开文件id_rsa.pub，复制文件内所有内容，在GitHub中点击头像可看的setting选项，在setting选项中可看到SSH and GPG keys选项，点击new SSH，然后输入title（方便密钥管理的名字），将刚才复制的内容粘贴到key中。&lt;/li>
&lt;li>创建本地仓库，在本地选择不包含中文的文件路径，新建一个文件夹，进入文件夹并点击右键选择git bash，输入以下命令进行设置：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> git init
git config --global user.name &lt;span class="s2">&amp;#34;Your&amp;#39;s name&amp;#34;&lt;/span>
git config --global user.email &lt;span class="s2">&amp;#34;Your&amp;#39;s email address&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中&lt;code>Your's name&lt;/code>和&lt;code>Your's email address&lt;/code>替换为GitHub账户名和对应邮箱地址。&lt;/p>
&lt;ul>
&lt;li>安装Hexo，按照之前方式进入git bash终端，输入&lt;code>node&lt;/code>检测Node.js是否安装成功，若出现&lt;code>&amp;gt;&lt;/code>则表示正常，退出node模式，输入以下命令安装Hexo：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> npm install -g hexo-cli
hexo version
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>看到输出版本号等信息表示安装Hexo成功，在当前新建的文件夹下新建一个hexo文件夹，在hexo文件夹中进入git bash，输入以下命令配置hexo，完成之后，在浏览器输入&lt;code>http://localhost:4000&lt;/code>，正常则可看到初始化的博客，到此便完成本地博客的建立。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> hexo init
npm install
hexo g
hexo s
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>配置Hexo到GitHub，在hexo文件夹下存在一个配置文件&lt;code>_config.yml&lt;/code>，打开后可看到文件最后部分为：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>&lt;span class="k">deploy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将其修改为以下内容，其中&lt;code>yourname&lt;/code>为GitHub账号名：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>&lt;span class="k">deploy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>git&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">repository&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>http&lt;span class="p">:&lt;/span>//github.com/yourname/yourname.github.io.git&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">branch&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>master&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>保存后，在当前文件夹打开git bash并输入：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> hexo g
hexo d
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>若出现错误显示&lt;code>ERROR Deployer not found: git&lt;/code>，则输入以下命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> npm install hexo-deployer-git --save
hexo g
hexo d
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>若弹出填写GitHub账号用户名和密码则正常填写，完成之后在浏览器输入&lt;code>https://yourname.github.io&lt;/code>，yourname替换为GitHub账户名，即可通过互联网访问博客。&lt;/p>
&lt;ul>
&lt;li>如果不想自己新建，可以使用现有的他人博客项目进行改建，见&lt;a href="https://linwhitehat.github.io/posts/2019/10/12/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/#Section2">第2小节&lt;/a>。&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>&lt;span id="Section2">使用已有的博客模板&lt;/span>&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>注册完成后搜索 &lt;code>linwhitehat.github.io&lt;/code> 进入&lt;a href="https://github.com/linwhitehat/linwhitehat.github.io">我的仓库&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://linwhitehat.github.io/images/blog-2.webp" alt="GitHub项目" title="GitHub项目" />&lt;/p>
&lt;p>点击右上角的 &lt;strong>Fork&lt;/strong> 将我的仓库拉倒你的账号下&lt;/p>
&lt;p>稍等一下，点击刷新，你会看到&lt;strong>Fork&lt;/strong>了成功的页面&lt;/p>
&lt;p>&lt;img src="https://linwhitehat.github.io/images/blog-3.webp" alt="Fork项目" title="Fork项目" />&lt;/p>
&lt;ul>
&lt;li>修改仓库名&lt;/li>
&lt;/ul>
&lt;p>点击&lt;strong>settings&lt;/strong>进入设置&lt;/p>
&lt;p>&lt;img src="https://linwhitehat.github.io/images/blog-4.webp" alt="项目设置修改" title="项目设置修改" />&lt;/p>
&lt;p id = "Rename">&lt;/p>
&lt;p>修改仓库名为 &lt;code>你的Github账号名.github.io&lt;/code>，然后 Rename&lt;/p>
&lt;p>&lt;img src="https://linwhitehat.github.io/images/blog-5.webp" alt="修改项目名" title="修改项目名" />&lt;/p>
&lt;p>这时你在在浏览器中输入 &lt;code>你的Github账号名.github.io&lt;/code> 例如:&lt;code>linwhitehat.github.io&lt;/code>&lt;/p>
&lt;p>你将会看到如下界面&lt;/p>
&lt;p>&lt;img src="https://linwhitehat.github.io/images/blog-6.webp" alt="博客首页" title="博客首页" />&lt;/p>
&lt;p>说明已经成功一半了😀当然，还需要修改博客的配置才能变成你的博客。&lt;/p>
&lt;p>若是出现&lt;/p>
&lt;p>&lt;img src="https://linwhitehat.github.io/images/blog-7.webp" alt="访问出错" title="访问出错" />&lt;/p>
&lt;p>则需要 &lt;a href="https://linwhitehat.github.io/posts/2019/10/12/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/#Rename">检查一下你的仓库名是否正确&lt;/a>&lt;/p>
&lt;h3 id="修改博客配置">修改博客配置&lt;/h3>
&lt;p>来到你的仓库，找到&lt;code>_config.yml&lt;/code>文件,这是网站的全局配置文件。&lt;/p>
&lt;p>&lt;img src="https://linwhitehat.github.io/images/blog-8.webp" alt="博客配置文件" title="博客配置文件" />&lt;/p>
&lt;p>点击修改&lt;/p>
&lt;p>&lt;img src="https://linwhitehat.github.io/images/blog-9.webp" alt="修改配置文件" title="修改配置文件" />&lt;/p>
&lt;p>然后编辑&lt;code>_config.yml&lt;/code>的内容&lt;/p>
&lt;p>&lt;img src="https://linwhitehat.github.io/images/blog-10.webp" alt="配置文件内容修改" title="配置文件内容修改" />&lt;/p>
&lt;p>接下来我们来详细说说以下配置文件的内容：&lt;/p>
&lt;h3 id="基础设置说明">基础设置说明&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> &lt;span class="c1"># Site settings&lt;/span>
title: Your Blog &lt;span class="c1">#你博客的标题&lt;/span>
SEOTitle: 你的博客 &lt;span class="p">|&lt;/span> Your Blog &lt;span class="c1">#显示在浏览器上搜索的时候显示的标题&lt;/span>
header-img: img/post-bg-rwd.jpg &lt;span class="c1">#显示在首页的背景图片&lt;/span>
email: You@gmail.com
description: &lt;span class="s2">&amp;#34;You Blog&amp;#34;&lt;/span> &lt;span class="c1">#网站介绍&lt;/span>
keyword: &lt;span class="s2">&amp;#34;L1n, L1n Blog&amp;#34;&lt;/span> &lt;span class="c1">#关键词&lt;/span>
url: &lt;span class="s2">&amp;#34;https://linwhitehat.github.io&amp;#34;&lt;/span> &lt;span class="c1"># 这个就是填写你的博客地址&lt;/span>
baseurl: &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="c1"># 这个我们不用填写&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>至此，一个初具形态的博客便生成了。&lt;/p>
&lt;h2 id="进阶">进阶&lt;/h2>
&lt;ol>
&lt;li>本文中新建仓库建立博客的方式，在本地建立仓库后，又再新建一个hexo文件，且将hexo配置托管到GitHub之后，GitHub项目便被hexo文件夹下的&lt;code>.deploy_git&lt;/code>覆盖，之后修改博客维护项目只需要在hexo文件夹下的git bash进行hexo处理即可。&lt;/li>
&lt;li>本文博客搭建的目录结构如下，相关博客搭建及&lt;a href="https://linwhitehat.github.io/Blog/2020/01/30/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96.html">优化教程&lt;/a>中涉及的路径参照此目录树：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-diff" data-lang="diff"># 博客根目录
|-- hexo
| |-- _config.yml
| |-- node_modules
| |-- public
| |-- scaffolds
| |-- source
| `-- themes
# 主题根目录
|-- themes
`-- next
|-- LICENSE.md
|-- README.md
|-- _config.yml
|-- docs
|-- languages
|-- layout
|-- scripts
`-- source
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>Hexo卸载方式，在git bash执行以下命令：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">npm uninstall hexo-cli -g
npm uninstall hexo -g
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>博客相应的文件目录需要手动删除。&lt;/p>
&lt;h2 id="结束">结束&lt;/h2>
&lt;p>博客搭建基本完成，但是博客中有很多地方可以自定义设计，这也是自建博客的初衷，熟悉Hexo和Next.Mist的配置后，会逐步优化博客样式。&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr />
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://www.jianshu.com/p/956c44c87fb1">博客雏形安装&lt;/a> &lt;a href="https://linwhitehat.github.io/posts/2019/10/12/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description><category domain="https://linwhitehat.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/">技术分享</category><category domain="https://linwhitehat.github.io/categories/%E5%8D%9A%E5%AE%A2/">博客</category><category domain="https://linwhitehat.github.io/tags/hexo/">Hexo</category><category domain="https://linwhitehat.github.io/tags/next/">Next</category><category domain="https://linwhitehat.github.io/tags/github/">GitHub</category></item></channel></rss>